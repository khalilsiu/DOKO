{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/contexts/AuthContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMetaMask } from 'metamask-react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport UIModal from '../components/modal';\nimport { WalletName } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  var _modalHeader, _walletContainer, _walletImage;\n\n  return {\n    modalHeader: (_modalHeader = {\n      display: 'flex',\n      alignItems: 'center',\n      color: 'white',\n      padding: '1.5rem'\n    }, _defineProperty(_modalHeader, theme.breakpoints.down('sm'), {\n      padding: '0.5rem 1.3rem'\n    }), _defineProperty(_modalHeader, \"justifyContent\", 'space-between'), _modalHeader),\n    modalContent: {\n      display: 'flex',\n      padding: '1.5rem'\n    },\n    walletContainer: (_walletContainer = {\n      width: '8rem',\n      height: '8rem'\n    }, _defineProperty(_walletContainer, theme.breakpoints.down('sm'), {\n      width: '7rem',\n      height: '7rem'\n    }), _defineProperty(_walletContainer, \"padding\", '1.5rem'), _defineProperty(_walletContainer, \"border\", '0.5px solid'), _defineProperty(_walletContainer, \"borderColor\", theme.palette.grey[800]), _defineProperty(_walletContainer, \"borderRadius\", '10px'), _defineProperty(_walletContainer, \"marginRight\", '1rem'), _defineProperty(_walletContainer, \"display\", 'flex'), _defineProperty(_walletContainer, \"flexDirection\", 'column'), _defineProperty(_walletContainer, \"alignItems\", 'center'), _walletContainer),\n    walletSelected: {\n      borderColor: theme.palette.primary.main\n    },\n    walletImage: (_walletImage = {\n      height: '3rem',\n      width: '3rem'\n    }, _defineProperty(_walletImage, theme.breakpoints.down('sm'), {\n      width: '2rem',\n      height: '2rem'\n    }), _defineProperty(_walletImage, \"marginBottom\", '1rem'), _walletImage),\n    walletName: {\n      fontWeight: 'bold',\n      textAlign: 'center',\n      width: '5rem',\n      fontSize: '0.7rem',\n      lineHeight: '1.2'\n    },\n    modalFooter: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      padding: '1.5rem'\n    },\n    modalButton: _defineProperty({\n      backgroundColor: theme.palette.primary.main,\n      color: 'white',\n      width: '13rem',\n      height: '3rem'\n    }, theme.breakpoints.down('sm'), {\n      width: '11rem',\n      height: '2.5rem'\n    })\n  };\n});\nexport var AuthContext = /*#__PURE__*/createContext({\n  address: null,\n  loading: false,\n  connect: function connect() {\n    return null;\n  },\n  walletName: undefined\n});\nexport var AuthContextProvider = function AuthContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      nft = _ref.nft;\n  var wallets = [{\n    icon: '/DOKO_Metamasklogo_asset.png',\n    label: 'MetaMask Wallet',\n    name: WalletName.METAMASK\n  }];\n\n  if (nft) {\n    wallets = [{\n      icon: '/DOKO_Metamasklogo_asset.png',\n      label: 'MetaMask Wallet',\n      name: WalletName.METAMASK\n    }, {\n      icon: '/DOKO_Phantomlogo_asset.png',\n      label: 'Phantom Wallet',\n      name: WalletName.PHANTOM\n    }];\n  }\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useMetaMask = useMetaMask(),\n      account = _useMetaMask.account,\n      connect = _useMetaMask.connect,\n      status = _useMetaMask.status;\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      solAccount = _useState4[0],\n      setSolAccount = _useState4[1];\n\n  var classes = useStyles();\n  var history = useHistory();\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var firstTime = useRef(true);\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      walletName = _useState8[0],\n      setWalletName = _useState8[1];\n\n  var _useState9 = useState(wallets[0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      walletSelected = _useState10[0],\n      setWalletSelected = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showWalletModal = _useState12[0],\n      setShowWalletModal = _useState12[1];\n\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var connectMetaMask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!isMobile) {\n                _context.next = 7;\n                break;\n              }\n\n              if (status === 'unavailable') {\n                window.location.href = 'https://metamask.app.link/dapp/doko.one';\n              }\n\n              _context.next = 5;\n              return connect();\n\n            case 5:\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.next = 9;\n              return connect();\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('metamask connection', _context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function connectMetaMask() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var connectPhantom = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!window.solana || !window.solana.isPhantom)) {\n                _context2.next = 3;\n                break;\n              }\n\n              window.open('https://phantom.app/', '_blank');\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              _context2.prev = 3;\n              _context2.next = 6;\n              return window.solana.connect();\n\n            case 6:\n              setSolAccount(window.solana.publicKey.toString());\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error('phantom connection', _context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 9]]);\n    }));\n\n    return function connectPhantom() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var login = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(wallet) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              _context3.t0 = wallet;\n              _context3.next = _context3.t0 === WalletName.METAMASK ? 4 : _context3.t0 === WalletName.PHANTOM ? 8 : 12;\n              break;\n\n            case 4:\n              setWalletName(WalletName.METAMASK);\n              _context3.next = 7;\n              return connectMetaMask();\n\n            case 7:\n              return _context3.abrupt(\"break\", 13);\n\n            case 8:\n              setWalletName(WalletName.PHANTOM);\n              _context3.next = 11;\n              return connectPhantom();\n\n            case 11:\n              return _context3.abrupt(\"break\", 13);\n\n            case 12:\n              return _context3.abrupt(\"break\", 13);\n\n            case 13:\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function login(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var connectWallet = function connectWallet() {\n    setShowWalletModal(false);\n    login(walletSelected.name);\n  };\n\n  useEffect(function () {\n    setAddress(account || solAccount || '');\n\n    if ((account || solAccount) && !firstTime.current && history) {\n      history.push(\"/address/\".concat(account || solAccount));\n    }\n\n    if (account || solAccount) {\n      firstTime.current = false;\n    }\n  }, [account, solAccount, history]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      address: address,\n      walletName: walletName,\n      loading: loading,\n      connect: function connect() {\n        return setShowWalletModal(true);\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [children, /*#__PURE__*/_jsxDEV(UIModal, {\n        modalOpen: showWalletModal,\n        renderHeader: function renderHeader() {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.modalHeader,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: 'white'\n              },\n              onClick: function onClick() {\n                return setShowWalletModal(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                fontSize: \"medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, _this);\n        },\n        renderBody: function renderBody() {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.modalContent,\n            children: wallets.map(function (wallet) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\".concat(classes.walletContainer, \" \\n                \").concat(walletSelected.name === wallet.name && classes.walletSelected),\n                onClick: function onClick() {\n                  return setWalletSelected(wallet);\n                },\n                onKeyDown: function onKeyDown() {\n                  return setWalletSelected(wallet);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: wallet.icon,\n                  alt: \"\",\n                  className: classes.walletImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  className: classes.walletName,\n                  children: wallet.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, _this)]\n              }, wallet.label, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, _this);\n        },\n        renderFooter: function renderFooter() {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.modalFooter,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.modalButton,\n              variant: \"outlined\",\n              onClick: function onClick() {\n                return connectWallet();\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AuthContextProvider, \"AZ05Ja4uzCm0rbyP4U8F0houmR4=\", false, function () {\n  return [useMetaMask, useStyles, useHistory, useTheme, useMediaQuery];\n});\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/contexts/AuthContext.tsx"],"names":["createContext","useEffect","useRef","useState","useHistory","useMetaMask","Button","Typography","IconButton","makeStyles","CloseIcon","useMediaQuery","useTheme","UIModal","WalletName","useStyles","theme","modalHeader","display","alignItems","color","padding","breakpoints","down","modalContent","walletContainer","width","height","palette","grey","walletSelected","borderColor","primary","main","walletImage","walletName","fontWeight","textAlign","fontSize","lineHeight","modalFooter","justifyContent","modalButton","backgroundColor","AuthContext","address","loading","connect","undefined","AuthContextProvider","children","nft","wallets","icon","label","name","METAMASK","PHANTOM","setLoading","account","status","solAccount","setSolAccount","classes","history","setAddress","firstTime","setWalletName","setWalletSelected","showWalletModal","setShowWalletModal","isMobile","connectMetaMask","window","location","href","console","error","connectPhantom","solana","isPhantom","open","publicKey","toString","login","wallet","connectWallet","current","push","map"],"mappings":"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","sourcesContent":["import { createContext, PropsWithChildren, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMetaMask } from 'metamask-react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport useTheme from '@material-ui/core/styles/useTheme';\n\nimport UIModal from '../components/modal';\nimport { Wallet, WalletName } from '../types';\n\nconst useStyles = makeStyles((theme) => ({\n  modalHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    color: 'white',\n    padding: '1.5rem',\n    [theme.breakpoints.down('sm')]: {\n      padding: '0.5rem 1.3rem',\n    },\n    justifyContent: 'space-between',\n  },\n  modalContent: {\n    display: 'flex',\n    padding: '1.5rem',\n  },\n  walletContainer: {\n    width: '8rem',\n    height: '8rem',\n    [theme.breakpoints.down('sm')]: {\n      width: '7rem',\n      height: '7rem',\n    },\n    padding: '1.5rem',\n    border: '0.5px solid',\n    borderColor: theme.palette.grey[800],\n    borderRadius: '10px',\n    marginRight: '1rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  walletSelected: {\n    borderColor: theme.palette.primary.main,\n  },\n  walletImage: {\n    height: '3rem',\n    width: '3rem',\n    [theme.breakpoints.down('sm')]: {\n      width: '2rem',\n      height: '2rem',\n    },\n    marginBottom: '1rem',\n  },\n  walletName: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    width: '5rem',\n    fontSize: '0.7rem',\n    lineHeight: '1.2',\n  },\n  modalFooter: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: '1.5rem',\n  },\n  modalButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n    width: '13rem',\n    height: '3rem',\n    [theme.breakpoints.down('sm')]: {\n      width: '11rem',\n      height: '2.5rem',\n    },\n  },\n}));\n\ndeclare let window: any;\n\ninterface AuthContextValue {\n  address: string | null;\n  loading: boolean;\n  walletName?: WalletName;\n  connect: () => void;\n}\n\nexport const AuthContext = createContext<AuthContextValue>({\n  address: null,\n  loading: false,\n  connect: () => null,\n  walletName: undefined,\n});\n\nexport const AuthContextProvider = ({ children, nft }: PropsWithChildren<any>) => {\n  let wallets: Wallet[] = [\n    {\n      icon: '/DOKO_Metamasklogo_asset.png',\n      label: 'MetaMask Wallet',\n      name: WalletName.METAMASK,\n    },\n  ];\n  if (nft) {\n    wallets = [\n      {\n        icon: '/DOKO_Metamasklogo_asset.png',\n        label: 'MetaMask Wallet',\n        name: WalletName.METAMASK,\n      },\n      {\n        icon: '/DOKO_Phantomlogo_asset.png',\n        label: 'Phantom Wallet',\n        name: WalletName.PHANTOM,\n      },\n    ];\n  }\n  const [loading, setLoading] = useState(false);\n  const { account, connect, status } = useMetaMask();\n  const [solAccount, setSolAccount] = useState('');\n  const classes = useStyles();\n  const history = useHistory();\n  const [address, setAddress] = useState<string | null>('');\n  const firstTime = useRef(true);\n  const [walletName, setWalletName] = useState<WalletName>();\n  const [walletSelected, setWalletSelected] = useState<Wallet>(wallets[0]);\n  const [showWalletModal, setShowWalletModal] = useState(false);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const connectMetaMask = async () => {\n    try {\n      if (isMobile) {\n        if (status === 'unavailable') {\n          window.location.href = 'https://metamask.app.link/dapp/doko.one';\n        }\n        await connect();\n      } else {\n        await connect();\n      }\n    } catch (err) {\n      console.error('metamask connection', err);\n    }\n  };\n\n  const connectPhantom = async () => {\n    if (!window.solana || !window.solana.isPhantom) {\n      window.open('https://phantom.app/', '_blank');\n      return;\n    }\n    try {\n      await window.solana.connect();\n      setSolAccount(window.solana.publicKey.toString());\n    } catch (err) {\n      console.error('phantom connection', err);\n    }\n  };\n\n  const login = async (wallet: WalletName) => {\n    setLoading(true);\n\n    switch (wallet) {\n      case WalletName.METAMASK:\n        setWalletName(WalletName.METAMASK);\n        await connectMetaMask();\n        break;\n      case WalletName.PHANTOM:\n        setWalletName(WalletName.PHANTOM);\n        await connectPhantom();\n        break;\n      default:\n        break;\n    }\n    setLoading(false);\n  };\n\n  const connectWallet = () => {\n    setShowWalletModal(false);\n    login(walletSelected.name);\n  };\n\n  useEffect(() => {\n    setAddress(account || solAccount || '');\n\n    if ((account || solAccount) && !firstTime.current && history) {\n      history.push(`/address/${account || solAccount}`);\n    }\n\n    if (account || solAccount) {\n      firstTime.current = false;\n    }\n  }, [account, solAccount, history]);\n\n  return (\n    <AuthContext.Provider\n      value={{ address, walletName, loading, connect: () => setShowWalletModal(true) }}\n    >\n      <>\n        {children}\n        <UIModal\n          modalOpen={showWalletModal}\n          renderHeader={() => (\n            <div className={classes.modalHeader}>\n              <Typography variant=\"h6\" style={{ fontWeight: 'bold' }}>\n                Connect Wallet\n              </Typography>\n              <IconButton style={{ color: 'white' }} onClick={() => setShowWalletModal(false)}>\n                <CloseIcon fontSize=\"medium\" />\n              </IconButton>\n            </div>\n          )}\n          renderBody={() => (\n            <div className={classes.modalContent}>\n              {wallets.map((wallet) => (\n                <div\n                  className={`${classes.walletContainer} \n                ${walletSelected.name === wallet.name && classes.walletSelected}`}\n                  key={wallet.label}\n                  onClick={() => setWalletSelected(wallet)}\n                  onKeyDown={() => setWalletSelected(wallet)}\n                >\n                  <img src={wallet.icon} alt=\"\" className={classes.walletImage} />\n\n                  <Typography variant=\"subtitle2\" className={classes.walletName}>\n                    {wallet.label}\n                  </Typography>\n                </div>\n              ))}\n            </div>\n          )}\n          renderFooter={() => (\n            <div className={classes.modalFooter}>\n              <Button\n                className={classes.modalButton}\n                variant=\"outlined\"\n                onClick={() => connectWallet()}\n              >\n                <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n                  Connect Wallet\n                </Typography>\n              </Button>\n            </div>\n          )}\n        />\n      </>\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}