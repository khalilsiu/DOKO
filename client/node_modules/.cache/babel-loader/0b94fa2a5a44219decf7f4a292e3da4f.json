{"ast":null,"code":"import _objectSpread from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/components/Popover.tsx\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Arrow = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: 0.6rem;\\n  height: 0.6rem;\\n\\n  &::before {\\n    content: '';\\n    background: white;\\n    width: 0.6rem;\\n    height: 0.6rem;\\n    transform: translate(-50%, -50%) rotate(45deg);\\n    position: absolute;\\n    border-radius: 2px;\\n    top: 0;\\n    left: 0;\\n  }\\n\"])));\nvar Wrapper = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  transition: visibility 150ms linear, opacity 150ms linear;\\n  background: white;\\n  border: 1px solid #ececec;\\n  box-shadow: -1px 0px 10px 7px rgb(0 0 0 / 4%);\\n  border-radius: 8px;\\n  z-index: 999;\\n\\n  &[data-popper-placement^='right'] {\\n    \", \" {\\n      left: 0px;\\n    }\\n  }\\n\\n  &[data-popper-placement^='left'] {\\n    \", \" {\\n      right: 0px;\\n    }\\n  }\\n\\n  &[data-popper-placement^='top'] {\\n    \", \" {\\n      bottom: 0px;\\n    }\\n  }\\n\\n  &[data-popper-placement^='bottom'] {\\n    \", \" {\\n      top: 0px;\\n    }\\n  }\\n\"])), Arrow, Arrow, Arrow, Arrow);\n_c = Wrapper;\nexport var Popover = function Popover(_ref) {\n  _s();\n\n  var children = _ref.children,\n      reference = _ref.reference,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom-start' : _ref$placement,\n      style = _ref.style;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      referenceElement = _useState2[0],\n      setReferenceElement = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      arrowElement = _useState4[0],\n      setArrowElement = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      popperElement = _useState6[0],\n      setPopperElement = _useState6[1];\n\n  var _usePopper = usePopper(referenceElement, popperElement, {\n    placement: placement,\n    strategy: 'fixed',\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: [0, 24]\n      }\n    }, {\n      name: 'arrow',\n      options: {\n        element: arrowElement\n      }\n    }]\n  }),\n      styles = _usePopper.styles,\n      attributes = _usePopper.attributes;\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toggleTimeout = _useState10[0],\n      setToggleTimeout = _useState10[1];\n\n  var toggleShow = function toggleShow(shown) {\n    if (shown) {\n      clearTimeout(toggleTimeout);\n      setShow(true);\n    } else {\n      clearTimeout(toggleTimeout);\n      setToggleTimeout(setTimeout(function () {\n        return setShow(false);\n      }, 200));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: setReferenceElement,\n      onMouseEnter: function onMouseEnter() {\n        return toggleShow(true);\n      },\n      onMouseLeave: function onMouseLeave() {\n        return toggleShow(false);\n      },\n      children: reference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Wrapper, _objectSpread(_objectSpread({\n      onMouseEnter: function onMouseEnter() {\n        return toggleShow(true);\n      },\n      onMouseLeave: function onMouseLeave() {\n        return toggleShow(false);\n      },\n      ref: setPopperElement,\n      style: _objectSpread(_objectSpread({}, styles.popper), {}, {\n        visibility: show ? 'visible' : 'hidden',\n        opacity: +show\n      })\n    }, attributes.popper), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Popover, \"v7y8BswbK1jJT0RJF9GLGLYaLSo=\", false, function () {\n  return [usePopper];\n});\n\n_c2 = Popover;\nexport default Popover;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Popover\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/components/Popover.tsx"],"names":["useState","usePopper","styled","Arrow","div","Wrapper","Popover","children","reference","placement","style","referenceElement","setReferenceElement","arrowElement","setArrowElement","popperElement","setPopperElement","strategy","modifiers","name","options","offset","element","styles","attributes","show","setShow","toggleTimeout","setToggleTimeout","toggleShow","shown","clearTimeout","setTimeout","popper","visibility","opacity"],"mappings":"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","sourcesContent":["import { Placement } from '@popperjs/core';\nimport { PropsWithChildren, useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport styled from 'styled-components';\n\ninterface Props {\n  reference: any;\n  placement?: Placement;\n  style?: any;\n}\n\nconst Arrow = styled.div`\n  width: 0.6rem;\n  height: 0.6rem;\n\n  &::before {\n    content: '';\n    background: white;\n    width: 0.6rem;\n    height: 0.6rem;\n    transform: translate(-50%, -50%) rotate(45deg);\n    position: absolute;\n    border-radius: 2px;\n    top: 0;\n    left: 0;\n  }\n`;\n\nconst Wrapper = styled.div`\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: white;\n  border: 1px solid #ececec;\n  box-shadow: -1px 0px 10px 7px rgb(0 0 0 / 4%);\n  border-radius: 8px;\n  z-index: 999;\n\n  &[data-popper-placement^='right'] {\n    ${Arrow} {\n      left: 0px;\n    }\n  }\n\n  &[data-popper-placement^='left'] {\n    ${Arrow} {\n      right: 0px;\n    }\n  }\n\n  &[data-popper-placement^='top'] {\n    ${Arrow} {\n      bottom: 0px;\n    }\n  }\n\n  &[data-popper-placement^='bottom'] {\n    ${Arrow} {\n      top: 0px;\n    }\n  }\n`;\n\nexport const Popover = ({\n  children,\n  reference,\n  placement = 'bottom-start',\n  style,\n}: PropsWithChildren<Props>) => {\n  const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null);\n  const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null);\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null);\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [0, 24] } },\n      {\n        name: 'arrow',\n        options: { element: arrowElement },\n      },\n    ],\n  });\n  const [show, setShow] = useState(false);\n  const [toggleTimeout, setToggleTimeout] = useState<any>();\n\n  const toggleShow = (shown: boolean) => {\n    if (shown) {\n      clearTimeout(toggleTimeout);\n      setShow(true);\n    } else {\n      clearTimeout(toggleTimeout);\n      setToggleTimeout(setTimeout(() => setShow(false), 200));\n    }\n  };\n\n  return (\n    <div style={style}>\n      <span\n        ref={setReferenceElement}\n        onMouseEnter={() => toggleShow(true)}\n        onMouseLeave={() => toggleShow(false)}\n      >\n        {reference}\n      </span>\n      <Wrapper\n        onMouseEnter={() => toggleShow(true)}\n        onMouseLeave={() => toggleShow(false)}\n        ref={setPopperElement}\n        style={{ ...styles.popper, visibility: show ? 'visible' : 'hidden', opacity: +show }}\n        {...attributes.popper}\n      >\n        {children}\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default Popover;\n"]},"metadata":{},"sourceType":"module"}