{"ast":null,"code":"import _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/modules/nft-individual/CopyAddress.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Grid, Tooltip, Typography, IconButton, Link } from '@material-ui/core';\nimport { useState } from 'react';\nimport { minimizeAddress } from '../../libs/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CopyAddress = function CopyAddress(_ref) {\n  _s();\n\n  var address = _ref.address,\n      _ref$hasLink = _ref.hasLink,\n      hasLink = _ref$hasLink === void 0 ? false : _ref$hasLink;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n\n  var copy = function copy() {\n    if (copied) {\n      return;\n    }\n\n    navigator.clipboard.writeText(address);\n    setCopied(true);\n    setTimeout(function () {\n      return setCopied(false);\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    children: [hasLink ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      style: {\n        lineHeight: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          textDecoration: 'none',\n          color: '#61dafb'\n        },\n        href: \"\".concat(window.origin, \"/address/\").concat(address),\n        children: minimizeAddress(address)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      style: {\n        lineHeight: 2\n      },\n      children: minimizeAddress(address)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: copied ? 'Copied' : 'Copy',\n      placement: \"right\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"hover-button\",\n        onClick: function onClick() {\n          return copy();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          height: 13,\n          src: \"/copy.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CopyAddress, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n\n_c = CopyAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"CopyAddress\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/modules/nft-individual/CopyAddress.tsx"],"names":["Grid","Tooltip","Typography","IconButton","Link","useState","minimizeAddress","CopyAddress","address","hasLink","copied","setCopied","copy","navigator","clipboard","writeText","setTimeout","lineHeight","textDecoration","color","window","origin"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,OAAf,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgDC,IAAhD,QAA4D,mBAA5D;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoD;AAAA;;AAAA,MAAjDC,OAAiD,QAAjDA,OAAiD;AAAA,0BAAxCC,OAAwC;AAAA,MAAxCA,OAAwC,6BAA9B,KAA8B;;AAC7E,kBAA4BJ,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,QAAIF,MAAJ,EAAY;AACV;AACD;;AACDG,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BP,OAA9B;AACAG,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,IAAAA,UAAU,CAAC;AAAA,aAAML,SAAS,CAAC,KAAD,CAAf;AAAA,KAAD,EAAyB,IAAzB,CAAV;AACD,GAPD;;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAA,eACGF,OAAO,gBACN,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAE;AAAEQ,QAAAA,UAAU,EAAE;AAAd,OAAnC;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAE,MAAlB;AAA0BC,UAAAA,KAAK,EAAE;AAAjC,SADT;AAEE,QAAA,IAAI,YAAKC,MAAM,CAACC,MAAZ,sBAA8Bb,OAA9B,CAFN;AAAA,kBAIGF,eAAe,CAACE,OAAD;AAJlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADM,gBAUN,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAE;AAAES,QAAAA,UAAU,EAAE;AAAd,OAAnC;AAAA,gBACGX,eAAe,CAACE,OAAD;AADlB;AAAA;AAAA;AAAA;AAAA,aAXJ,eAeE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEE,MAAM,GAAG,QAAH,GAAc,MAApC;AAA4C,MAAA,SAAS,EAAC,OAAtD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAqC,QAAA,OAAO,EAAE;AAAA,iBAAME,IAAI,EAAV;AAAA,SAA9C;AAAA,+BACE;AAAK,UAAA,MAAM,EAAE,EAAb;AAAiB,UAAA,GAAG,EAAC,WAArB;AAAiC,UAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAfF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAuBD,CAlCM;;GAAML,W;;KAAAA,W","sourcesContent":["import { Grid, Tooltip, Typography, IconButton, Link } from '@material-ui/core';\nimport { useState } from 'react';\nimport { minimizeAddress } from '../../libs/utils';\n\ninterface CopyAddressProps {\n  address: string;\n  hasLink?: boolean;\n}\n\nexport const CopyAddress = ({ address, hasLink = false }: CopyAddressProps) => {\n  const [copied, setCopied] = useState(false);\n\n  const copy = () => {\n    if (copied) {\n      return;\n    }\n    navigator.clipboard.writeText(address);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  return (\n    <Grid container alignItems=\"center\">\n      {hasLink ? (\n        <Typography variant=\"body1\" style={{ lineHeight: 2 }}>\n          <Link\n            style={{ textDecoration: 'none', color: '#61dafb' }}\n            href={`${window.origin}/address/${address}`}\n          >\n            {minimizeAddress(address)}\n          </Link>\n        </Typography>\n      ) : (\n        <Typography variant=\"body1\" style={{ lineHeight: 2 }}>\n          {minimizeAddress(address)}\n        </Typography>\n      )}\n      <Tooltip title={copied ? 'Copied' : 'Copy'} placement=\"right\">\n        <IconButton className=\"hover-button\" onClick={() => copy()}>\n          <img height={13} src=\"/copy.png\" alt=\"\" />\n        </IconButton>\n      </Tooltip>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}