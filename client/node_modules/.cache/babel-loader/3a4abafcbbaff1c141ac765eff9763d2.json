{"ast":null,"code":"import _objectSpread from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/modules/nft-collections/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Card, Grid, Hidden, IconButton, makeStyles, Tab, Tabs, Typography, withStyles, Button, Modal, OutlinedInput } from '@material-ui/core';\nimport { useCookies } from 'react-cookie';\nimport { useParams, useHistory } from 'react-router-dom';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { TabPanel, NftPagination, Meta } from '../../components';\nimport { getNFTs } from '../api';\nimport Intro from '../core/Intro';\nimport { isSolAddress, minimizeAddress } from '../../libs/utils';\nimport CopyAddress from '../../components/CopyAddress';\nimport EthNfts from './EthNfts';\nimport SolNfts from './SolNfts';\nimport SectionLabel from '../../components/SectionLabel';\nimport { Summary } from './Summary';\nimport './select-search.css';\nimport OpenSeaAPI from '../../libs/opensea-api';\nimport { getSolNfts } from '../../libs/solana';\nimport eth from './assets/eth.png';\nimport bsc from './assets/bsc.png';\nimport polygon from './assets/polygon.png';\nimport solana from './assets/solana.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CustomTabs = withStyles({\n  root: {\n    width: '100%'\n  },\n  flexContainer: {\n    borderBottom: '2px solid #46324a'\n  }\n})(Tabs);\nvar CustomTab = withStyles({\n  wrapper: {\n    textTransform: 'none'\n  }\n})(Tab);\nvar CustomIconButton = withStyles({\n  disabled: {\n    color: '#333 !important'\n  }\n})(IconButton);\nvar syncInterval;\nvar useStyles = makeStyles(function (theme) {\n  var _collectionPageContai, _nftsContainer;\n\n  return {\n    collectionPageContainer: (_collectionPageContai = {\n      padding: 24,\n      marginTop: 36\n    }, _defineProperty(_collectionPageContai, theme.breakpoints.down('sm'), {\n      flexDirection: 'column',\n      marginTop: 0\n    }), _defineProperty(_collectionPageContai, \"minHeight\", 'calc(100vh)'), _collectionPageContai),\n    introCard: {\n      position: 'sticky',\n      top: 120\n    },\n    itemsContainer: _defineProperty({\n      paddingLeft: 36\n    }, theme.breakpoints.down('sm'), {\n      paddingLeft: 0\n    }),\n    nftsContainer: (_nftsContainer = {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(4, 1fr)',\n      gridAutoRows: '1fr',\n      columnGap: 12,\n      rowGap: 12\n    }, _defineProperty(_nftsContainer, theme.breakpoints.down('md'), {\n      gridTemplateColumns: 'repeat(3, 1fr)'\n    }), _defineProperty(_nftsContainer, theme.breakpoints.down('sm'), {\n      gridTemplateColumns: 'repeat(2, 1fr)'\n    }), _defineProperty(_nftsContainer, theme.breakpoints.down('xs'), {\n      gridTemplateColumns: 'repeat(1, 1fr)'\n    }), _nftsContainer),\n    addressContainer: _defineProperty({\n      marginBottom: 12\n    }, theme.breakpoints.down('xs'), {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }),\n    addressText: _defineProperty({\n      fontWeight: 'bolder'\n    }, theme.breakpoints.down('sm'), {\n      fontSize: 30\n    }),\n    createProfileButton: {\n      cursor: 'pointer',\n      right: '4%',\n      width: 162,\n      height: 46,\n      zIndex: 999,\n      position: 'absolute'\n    },\n    createProfileDialog: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      maxHeight: '90vh',\n      maxWidth: '90vw',\n      width: 578,\n      height: 320,\n      border: '1px solid #FFFFFF',\n      background: '#000000',\n      boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.75)',\n      borderRadius: '23px'\n    }\n  };\n});\nvar initialData = [{\n  icon: eth,\n  count: 0,\n  price: 0,\n  name: 'Ethereum',\n  available: true,\n  loading: true\n}, {\n  icon: bsc,\n  count: 0,\n  price: 0,\n  name: 'BSC'\n}, {\n  icon: polygon,\n  count: 0,\n  price: 0,\n  name: 'Polygon'\n}, {\n  icon: solana,\n  count: 0,\n  price: 0,\n  name: 'Solana'\n}];\nexport var NftCollections = function NftCollections() {\n  _s();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nfts = _useState4[0],\n      setNFTs = _useState4[1];\n\n  var _useParams = useParams(),\n      address = _useParams.address;\n\n  var styles = useStyles();\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tabValue = _useState6[0],\n      setTabValue = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filter = _useState8[0],\n      setFilter = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      syncStatus = _useState10[0],\n      setSyncStatus = _useState10[1];\n\n  var _useState11 = useState(1),\n      _useState12 = _slicedToArray(_useState11, 2),\n      page = _useState12[0],\n      setPage = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      createProfile = _useState14[0],\n      setCreateProfile = _useState14[1];\n\n  var isSolana = isSolAddress(address);\n  var history = useHistory();\n\n  var _useState15 = useState(initialData),\n      _useState16 = _slicedToArray(_useState15, 2),\n      summary = _useState16[0],\n      setSummary = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      ownedEthNfts = _useState18[0],\n      setOwnedEthNfts = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      ownedEthCollections = _useState20[0],\n      setOwnedEthCollections = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      ownedSolNfts = _useState22[0],\n      setOwnedSolNfts = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      ownedSolCollections = _useState24[0],\n      setOwnedSolCollections = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      ownedBscNfts = _useState26[0],\n      setOwnedBscNfts = _useState26[1];\n\n  var _useState27 = useState(true),\n      _useState28 = _slicedToArray(_useState27, 2),\n      eth_loading = _useState28[0],\n      setEth_Loading = _useState28[1];\n\n  var _useState29 = useState(true),\n      _useState30 = _slicedToArray(_useState29, 2),\n      sol_loading = _useState30[0],\n      setSol_Loading = _useState30[1];\n\n  var _useState31 = useState(true),\n      _useState32 = _slicedToArray(_useState31, 2),\n      bsc_loading = _useState32[0],\n      setBsc_Loading = _useState32[1];\n\n  var _useCookies = useCookies(['profiles']),\n      _useCookies2 = _slicedToArray(_useCookies, 3),\n      cookies = _useCookies2[0],\n      setCookie = _useCookies2[1],\n      removeCookie = _useCookies2[2];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      profileName = _useState34[0],\n      setProfileName = _useState34[1];\n\n  var collectionFloorPrice = {};\n\n  var handleClickOpen = function handleClickOpen() {\n    setCreateProfile(true);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    setCreateProfile(false);\n    var profiles = cookies.profiles ? cookies.profiles : {};\n    profiles[profileName] = {\n      address: [],\n      hash: btoa(JSON.stringify({\n        name: profileName,\n        address: []\n      }))\n    };\n    setCookie('profiles', profiles, {\n      path: '/'\n    });\n    history.push('/profiles');\n  };\n\n  useEffect(function () {\n    var fetchBscData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var bscNfts, offset, res, sort;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                bscNfts = [];\n\n                if (!isSolAddress(address)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                setBsc_Loading(false);\n                return _context.abrupt(\"return\");\n\n              case 4:\n                offset = 1;\n\n              case 5:\n                if (!1) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 8;\n                return getNFTs(address, (offset - 1) * 12);\n\n              case 8:\n                res = _context.sent;\n                bscNfts = [].concat(_toConsumableArray(bscNfts), _toConsumableArray(res.data));\n\n                if (!(res.data.length === 0)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"break\", 15);\n\n              case 12:\n                offset += 1;\n                _context.next = 5;\n                break;\n\n              case 15:\n                sort = bscNfts.sort(function (a, b) {\n                  return a.name < b.name ? -1 : 1;\n                });\n                setOwnedBscNfts(_toConsumableArray(sort));\n                sort.forEach(function (i) {\n                  if (i.chain === 'bsc') {\n                    initialData[1].count += 1;\n                  } else initialData[2].count += 1;\n                });\n                setSummary(initialData);\n                setBsc_Loading(false);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchBscData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var fetchSolanaData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var solNfts, res, sort;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                solNfts = [];\n\n                if (isSolAddress(address)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                setSol_Loading(false);\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                _context2.next = 6;\n                return getSolNfts(address);\n\n              case 6:\n                res = _context2.sent;\n\n                if (res) {\n                  solNfts = [].concat(_toConsumableArray(solNfts), _toConsumableArray(res.data));\n                }\n\n                sort = solNfts.sort(function (a, b) {\n                  return a.name < b.name ? -1 : 1;\n                });\n                setOwnedSolNfts(_toConsumableArray(sort));\n                initialData[3].count = sort.length;\n                setSummary(initialData);\n                setSol_Loading(false);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fetchSolanaData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var fetchEthData = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var resNfts, offset, res, j, asset, _res$data$assets$j$co, slug, name, price_object;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                initialData[0].loading = true;\n                setSummary(initialData);\n                resNfts = [];\n\n                if (!isSolAddress(address)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                setEth_Loading(false);\n                return _context3.abrupt(\"return\");\n\n              case 6:\n                offset = 0;\n\n              case 7:\n                if (!1) {\n                  _context3.next = 54;\n                  break;\n                }\n\n                _context3.prev = 8;\n                _context3.next = 11;\n                return OpenSeaAPI.get('/assets', {\n                  params: {\n                    limit: 50,\n                    owner: address,\n                    offset: offset\n                  }\n                });\n\n              case 11:\n                res = _context3.sent;\n                j = 0;\n\n              case 13:\n                if (!(j < res.data.assets.length)) {\n                  _context3.next = 44;\n                  break;\n                }\n\n                asset = {};\n                _res$data$assets$j$co = res.data.assets[j].collection, slug = _res$data$assets$j$co.slug, name = _res$data$assets$j$co.name;\n\n                if (!collectionFloorPrice[name]) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                asset = _objectSpread(_objectSpread({}, res.data.assets[j]), {}, {\n                  floor_price: collectionFloorPrice[name]\n                });\n                _context3.next = 35;\n                break;\n\n              case 20:\n                if (!1) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                _context3.prev = 21;\n                _context3.next = 24;\n                return OpenSeaAPI.get(\"/collection/\".concat(slug, \"/stats\"));\n\n              case 24:\n                price_object = _context3.sent;\n                collectionFloorPrice[name] = price_object.data.stats.floor_price;\n                asset = _objectSpread(_objectSpread({}, res.data.assets[j]), {}, {\n                  floor_price: collectionFloorPrice[name]\n                });\n                return _context3.abrupt(\"break\", 35);\n\n              case 30:\n                _context3.prev = 30;\n                _context3.t0 = _context3[\"catch\"](21);\n                return _context3.abrupt(\"break\", 35);\n\n              case 33:\n                _context3.next = 20;\n                break;\n\n              case 35:\n                setOwnedEthCollections(Object.keys(collectionFloorPrice).map(function (s) {\n                  return {\n                    value: s,\n                    name: s\n                  };\n                }));\n                resNfts.push(asset);\n                setOwnedEthNfts([].concat(resNfts));\n                initialData[0].count = resNfts.length;\n                initialData[0].price = resNfts.map(function (r) {\n                  return r.floor_price;\n                }).reduce(function (a, b) {\n                  return a + b;\n                }, 0);\n                setSummary(initialData);\n\n              case 41:\n                j += 1;\n                _context3.next = 13;\n                break;\n\n              case 44:\n                offset += 50;\n\n                if (!(res.data.assets.length < 50)) {\n                  _context3.next = 47;\n                  break;\n                }\n\n                return _context3.abrupt(\"break\", 54);\n\n              case 47:\n                _context3.next = 52;\n                break;\n\n              case 49:\n                _context3.prev = 49;\n                _context3.t1 = _context3[\"catch\"](8);\n                return _context3.abrupt(\"break\", 54);\n\n              case 52:\n                _context3.next = 7;\n                break;\n\n              case 54:\n                initialData[0].loading = false;\n                initialData[0].count = resNfts.length;\n                initialData[0].price = resNfts.map(function (res) {\n                  return res.floor_price;\n                }).reduce(function (a, b) {\n                  return a + b;\n                }, 0);\n                setSummary(initialData);\n                setOwnedEthNfts(resNfts);\n                setOwnedEthCollections(Object.keys(collectionFloorPrice).map(function (s) {\n                  return {\n                    value: s,\n                    name: s\n                  };\n                }));\n                setEth_Loading(false);\n\n              case 61:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[8, 49], [21, 30]]);\n      }));\n\n      return function fetchEthData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    fetchEthData();\n    fetchSolanaData();\n    fetchBscData();\n  }, [address]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"\".concat(address, \" - Profile | DOKO\"),\n      description: \"The Multi-Chain NFT Portfolio Manager that allows you to display, manage & trade your NFTs\",\n      url: \"https://doko.one\",\n      image: \"/DOKO_LOGO.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      className: styles.collectionPageContainer,\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        smDown: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: styles.introCard,\n            children: /*#__PURE__*/_jsxDEV(Intro, {\n              drawer: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: styles.itemsContainer,\n        container: true,\n        direction: \"column\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          smUp: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            wrap: \"nowrap\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleClickOpen,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/createProfileIcon.png\",\n                alt: \"share\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          className: styles.addressContainer,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              className: styles.addressContainer,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: styles.addressText,\n                variant: \"h5\",\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: minimizeAddress(address)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(CopyAddress, {\n                  address: address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            xsDown: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.createProfileButton,\n              onClick: handleClickOpen,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/createProfileButton.png\",\n                alt: \"Create Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CustomTabs, {\n            style: {\n              marginTop: 12\n            },\n            indicatorColor: \"primary\",\n            textColor: \"primary\",\n            value: tabValue,\n            onChange: function onChange(event, newValue) {\n              return setTabValue(newValue);\n            },\n            children: /*#__PURE__*/_jsxDEV(CustomTab, {\n              style: {\n                fontWeight: 'bolder'\n              },\n              label: \"NFT Collection\",\n              value: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          index: 0,\n          value: tabValue,\n          children: [/*#__PURE__*/_jsxDEV(Summary, {\n            data: {\n              summary: summary\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(EthNfts, {\n            data: {\n              nfts: ownedEthNfts,\n              collections: ownedEthCollections,\n              loading: eth_loading\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(SolNfts, {\n            data: {\n              nfts: ownedSolNfts,\n              collections: ownedSolCollections,\n              loading: sol_loading\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(SectionLabel, {\n            variant: \"h5\",\n            style: {\n              marginTop: 48,\n              marginBottom: 24\n            },\n            children: \"BSC & Polygon NFTs (Beta)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(NftPagination, {\n            loading: bsc_loading,\n            nfts: ownedBscNfts.slice((page - 1) * 12, page * 12),\n            page: page,\n            maxPage: Math.floor(ownedBscNfts.length / 12) + 1,\n            onNext: function onNext() {\n              return setPage(page + 1);\n            },\n            onPrev: function onPrev() {\n              return setPage(page - 1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: createProfile,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.createProfileDialog,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          style: {\n            height: '24%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            style: {\n              marginLeft: 30,\n              fontSize: 25,\n              fontWeight: 'bold'\n            },\n            children: \"Create Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              marginRight: 30\n            },\n            onClick: function onClick() {\n              setCreateProfile(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              style: {\n                fill: '#FFFFFF'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            width: '100%',\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          style: {\n            height: '52%'\n          },\n          children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            value: profileName,\n            onChange: function onChange(e) {\n              setProfileName(e.target.value);\n            },\n            style: {\n              minWidth: '90%',\n              height: 50,\n              fontWeight: 'bold',\n              fontSize: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            width: '100%',\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          style: {\n            height: '24%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              width: 170,\n              marginRight: 34\n            },\n            className: \"gradient-button\",\n            variant: \"outlined\",\n            onClick: handleSubmit,\n            children: \"Create Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(NftCollections, \"ImZYwUOlNlu2gJKY1GUdObDMLcs=\", false, function () {\n  return [useParams, useStyles, useHistory, useCookies];\n});\n\n_c = NftCollections;\nexport default NftCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftCollections\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/modules/nft-collections/index.tsx"],"names":["useEffect","useState","Card","Grid","Hidden","IconButton","makeStyles","Tab","Tabs","Typography","withStyles","Button","Modal","OutlinedInput","useCookies","useParams","useHistory","CloseIcon","TabPanel","NftPagination","Meta","getNFTs","Intro","isSolAddress","minimizeAddress","CopyAddress","EthNfts","SolNfts","SectionLabel","Summary","OpenSeaAPI","getSolNfts","eth","bsc","polygon","solana","CustomTabs","root","width","flexContainer","borderBottom","CustomTab","wrapper","textTransform","CustomIconButton","disabled","color","syncInterval","useStyles","theme","collectionPageContainer","padding","marginTop","breakpoints","down","flexDirection","introCard","position","top","itemsContainer","paddingLeft","nftsContainer","display","gridTemplateColumns","gridAutoRows","columnGap","rowGap","addressContainer","marginBottom","justifyContent","alignItems","addressText","fontWeight","fontSize","createProfileButton","cursor","right","height","zIndex","createProfileDialog","left","transform","maxHeight","maxWidth","border","background","boxShadow","borderRadius","initialData","icon","count","price","name","available","loading","NftCollections","setLoading","nfts","setNFTs","address","styles","tabValue","setTabValue","filter","setFilter","syncStatus","setSyncStatus","page","setPage","createProfile","setCreateProfile","isSolana","history","summary","setSummary","ownedEthNfts","setOwnedEthNfts","ownedEthCollections","setOwnedEthCollections","ownedSolNfts","setOwnedSolNfts","ownedSolCollections","setOwnedSolCollections","ownedBscNfts","setOwnedBscNfts","eth_loading","setEth_Loading","sol_loading","setSol_Loading","bsc_loading","setBsc_Loading","cookies","setCookie","removeCookie","profileName","setProfileName","collectionFloorPrice","handleClickOpen","handleSubmit","profiles","hash","btoa","JSON","stringify","path","push","fetchBscData","bscNfts","offset","res","data","length","sort","a","b","forEach","i","chain","fetchSolanaData","solNfts","fetchEthData","resNfts","get","params","limit","owner","j","assets","asset","collection","slug","floor_price","price_object","stats","Object","keys","map","s","value","r","reduce","event","newValue","collections","slice","Math","floor","marginLeft","marginRight","fill","margin","e","target","minWidth"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Card,\n  Grid,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Tab,\n  Tabs,\n  Tooltip,\n  Typography,\n  withStyles,\n  Button,\n  Modal,\n  OutlinedInput,\n} from '@material-ui/core';\n\nimport { useCookies } from 'react-cookie';\nimport { useParams, useHistory } from 'react-router-dom';\nimport CloseIcon from '@material-ui/icons/Close';\nimport RefreshOutlinedIcon from '@material-ui/icons/RefreshOutlined';\n\nimport { TabPanel, NftPagination, Meta } from '../../components';\nimport { getAddressStatus, getNFTs, indexAddress } from '../api';\nimport { Filter } from './Filter';\nimport Intro from '../core/Intro';\nimport { isSolAddress, minimizeAddress } from '../../libs/utils';\nimport { AddressStatus } from './AddressStatus';\nimport CopyAddress from '../../components/CopyAddress';\nimport EthNfts from './EthNfts';\nimport SolNfts from './SolNfts';\nimport SectionLabel from '../../components/SectionLabel';\nimport { Summary } from './Summary';\n\nimport './select-search.css';\n\nimport OpenSeaAPI from '../../libs/opensea-api';\nimport { getSolNfts } from '../../libs/solana';\n\nimport eth from './assets/eth.png';\nimport bsc from './assets/bsc.png';\nimport polygon from './assets/polygon.png';\nimport solana from './assets/solana.png';\n\nconst CustomTabs = withStyles({\n  root: {\n    width: '100%',\n  },\n  flexContainer: {\n    borderBottom: '2px solid #46324a',\n  },\n})(Tabs);\n\nconst CustomTab = withStyles({\n  wrapper: {\n    textTransform: 'none',\n  },\n})(Tab);\n\nconst CustomIconButton = withStyles({\n  disabled: {\n    color: '#333 !important',\n  },\n})(IconButton);\n\nlet syncInterval: any;\n\nconst useStyles = makeStyles((theme) => ({\n  collectionPageContainer: {\n    padding: 24,\n    marginTop: 36,\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n      marginTop: 0,\n    },\n    minHeight: 'calc(100vh)',\n  },\n  introCard: {\n    position: 'sticky',\n    top: 120,\n  },\n  itemsContainer: {\n    paddingLeft: 36,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: 0,\n    },\n  },\n  nftsContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(4, 1fr)',\n    gridAutoRows: '1fr',\n    columnGap: 12,\n    rowGap: 12,\n    [theme.breakpoints.down('md')]: {\n      gridTemplateColumns: 'repeat(3, 1fr)',\n    },\n    [theme.breakpoints.down('sm')]: {\n      gridTemplateColumns: 'repeat(2, 1fr)',\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridTemplateColumns: 'repeat(1, 1fr)',\n    },\n  },\n  addressContainer: {\n    marginBottom: 12,\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n  addressText: {\n    fontWeight: 'bolder',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 30,\n    },\n  },\n  createProfileButton: {\n    cursor: 'pointer',\n    right: '4%',\n    width: 162,\n    height: 46,\n    zIndex: 999,\n    position: 'absolute',\n  },\n  createProfileDialog: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    maxHeight: '90vh',\n    maxWidth: '90vw',\n    width: 578,\n    height: 320,\n    border: '1px solid #FFFFFF',\n    background: '#000000',\n    boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.75)',\n    borderRadius: '23px',\n  },\n}));\n\nconst initialData = [\n  {\n    icon: eth,\n    count: 0,\n    price: 0,\n    name: 'Ethereum',\n    available: true,\n    loading: true,\n  },\n  {\n    icon: bsc,\n    count: 0,\n    price: 0,\n    name: 'BSC',\n  },\n  {\n    icon: polygon,\n    count: 0,\n    price: 0,\n    name: 'Polygon',\n  },\n  {\n    icon: solana,\n    count: 0,\n    price: 0,\n    name: 'Solana',\n  },\n];\n\nexport const NftCollections = () => {\n  const [loading, setLoading] = useState(true);\n  const [nfts, setNFTs] = useState<any[]>([]);\n  const { address } = useParams<{ address: string }>();\n  const styles = useStyles();\n  const [tabValue, setTabValue] = useState(0);\n  const [filter, setFilter] = useState<any>({});\n  const [syncStatus, setSyncStatus] = useState<any>(null);\n  const [page, setPage] = useState(1);\n  const [createProfile, setCreateProfile] = useState(false);\n  const isSolana = isSolAddress(address);\n  const history = useHistory();\n\n  const [summary, setSummary] = useState(initialData);\n  const [ownedEthNfts, setOwnedEthNfts] = useState<any>([]);\n  const [ownedEthCollections, setOwnedEthCollections] = useState<any>([]);\n  const [ownedSolNfts, setOwnedSolNfts] = useState<any>([]);\n  const [ownedSolCollections, setOwnedSolCollections] = useState<any>([]);\n  const [ownedBscNfts, setOwnedBscNfts] = useState<any>([]);\n  const [eth_loading, setEth_Loading] = useState<boolean>(true);\n  const [sol_loading, setSol_Loading] = useState<boolean>(true);\n  const [bsc_loading, setBsc_Loading] = useState<boolean>(true);\n  const [cookies, setCookie, removeCookie] = useCookies(['profiles']);\n  const [profileName, setProfileName] = useState('');\n\n  const collectionFloorPrice: any = {};\n\n  const handleClickOpen = () => {\n    setCreateProfile(true);\n  };\n\n  const handleSubmit = () => {\n    setCreateProfile(false);\n    const profiles = cookies.profiles ? cookies.profiles : {};\n    profiles[profileName] = {\n      address: [],\n      hash: btoa(JSON.stringify({ name: profileName, address: [] })),\n    };\n    setCookie('profiles', profiles, { path: '/' });\n    history.push('/profiles');\n  };\n\n  useEffect(() => {\n    const fetchBscData = async () => {\n      let bscNfts: any = [];\n      if (isSolAddress(address)) {\n        setBsc_Loading(false);\n        return;\n      }\n      let offset = 1;\n      while (1) {\n        const res = await getNFTs(address, (offset - 1) * 12);\n        bscNfts = [...bscNfts, ...res.data];\n        if (res.data.length === 0) {\n          break;\n        }\n        offset += 1;\n      }\n      const sort = bscNfts.sort((a: any, b: any): number => (a.name < b.name ? -1 : 1));\n      setOwnedBscNfts([...sort]);\n      sort.forEach((i) => {\n        if (i.chain === 'bsc') {\n          initialData[1].count += 1;\n        } else initialData[2].count += 1;\n      });\n      setSummary(initialData);\n      setBsc_Loading(false);\n    };\n    const fetchSolanaData = async () => {\n      let solNfts: any = [];\n\n      if (!isSolAddress(address)) {\n        setSol_Loading(false);\n        return;\n      }\n      const res = await getSolNfts(address);\n      if (res) {\n        solNfts = [...solNfts, ...res.data];\n      }\n\n      const sort = solNfts.sort((a: any, b: any): number => (a.name < b.name ? -1 : 1));\n      setOwnedSolNfts([...sort]);\n      initialData[3].count = sort.length;\n      setSummary(initialData);\n      setSol_Loading(false);\n    };\n    const fetchEthData = async () => {\n      initialData[0].loading = true;\n      setSummary(initialData);\n      const resNfts: any = [];\n      if (isSolAddress(address)) {\n        setEth_Loading(false);\n        return;\n      }\n      let offset = 0;\n      while (1) {\n        try {\n          const res: any = await OpenSeaAPI.get('/assets', {\n            params: {\n              limit: 50,\n              owner: address,\n              offset,\n            },\n          });\n          for (let j = 0; j < res.data.assets.length; j += 1) {\n            let asset = {};\n            const { slug, name } = res.data.assets[j].collection;\n            if (collectionFloorPrice[name]) {\n              asset = {\n                ...res.data.assets[j],\n                floor_price: collectionFloorPrice[name],\n              };\n            } else {\n              while (1) {\n                try {\n                  const price_object: any = await OpenSeaAPI.get(`/collection/${slug}/stats`);\n                  collectionFloorPrice[name] = price_object.data.stats.floor_price;\n                  asset = {\n                    ...res.data.assets[j],\n                    floor_price: collectionFloorPrice[name],\n                  };\n                  break;\n                } catch (error: any) {\n                  break;\n                }\n              }\n            }\n            setOwnedEthCollections(\n              Object.keys(collectionFloorPrice).map((s) => ({ value: s, name: s })),\n            );\n            resNfts.push(asset);\n            setOwnedEthNfts([...resNfts]);\n            initialData[0].count = resNfts.length;\n            initialData[0].price = resNfts\n              .map((r: any) => r.floor_price)\n              .reduce((a: any, b: any) => a + b, 0);\n            setSummary(initialData);\n          }\n          offset += 50;\n          if (res.data.assets.length < 50) {\n            break;\n          }\n        } catch (error: any) {\n          break;\n        }\n      }\n      initialData[0].loading = false;\n      initialData[0].count = resNfts.length;\n      initialData[0].price = resNfts\n        .map((res: any) => res.floor_price)\n        .reduce((a: any, b: any) => a + b, 0);\n      setSummary(initialData);\n      setOwnedEthNfts(resNfts);\n      setOwnedEthCollections(Object.keys(collectionFloorPrice).map((s) => ({ value: s, name: s })));\n      setEth_Loading(false);\n    };\n    fetchEthData();\n    fetchSolanaData();\n    fetchBscData();\n  }, [address]);\n\n  return (\n    <>\n      <Meta\n        title={`${address} - Profile | DOKO`}\n        description=\"The Multi-Chain NFT Portfolio Manager that allows you to display, manage & trade your NFTs\"\n        url=\"https://doko.one\"\n        image=\"/DOKO_LOGO.png\"\n      />\n      <Grid container wrap=\"nowrap\" className={styles.collectionPageContainer}>\n        <Hidden smDown>\n          <Grid item>\n            <Card className={styles.introCard}>\n              <Intro drawer={false} />\n            </Card>\n          </Grid>\n        </Hidden>\n        <Grid\n          className={styles.itemsContainer}\n          container\n          direction=\"column\"\n          alignItems=\"flex-start\"\n        >\n          <Hidden smUp>\n            <Grid\n              container\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"flex-end\"\n              wrap=\"nowrap\"\n            >\n              <IconButton onClick={handleClickOpen}>\n                <img src=\"/createProfileIcon.png\" alt=\"share\" />\n              </IconButton>\n            </Grid>\n          </Hidden>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            className={styles.addressContainer}\n          >\n            <Grid item xs={12} md=\"auto\">\n              <Grid container direction=\"column\" className={styles.addressContainer}>\n                <Typography\n                  className={styles.addressText}\n                  variant=\"h5\"\n                  style={{ fontWeight: 'bolder' }}\n                >\n                  {minimizeAddress(address)}\n                </Typography>\n                <Grid item>\n                  <CopyAddress address={address} />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item style={{ width: '100%' }}>\n            <Hidden xsDown>\n              <Button className={styles.createProfileButton} onClick={handleClickOpen}>\n                <img src=\"/createProfileButton.png\" alt=\"Create Profile\" />\n              </Button>\n            </Hidden>\n            <CustomTabs\n              style={{ marginTop: 12 }}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              value={tabValue}\n              onChange={(event, newValue) => setTabValue(newValue)}\n            >\n              <CustomTab style={{ fontWeight: 'bolder' }} label=\"NFT Collection\" value={0} />\n            </CustomTabs>\n          </Grid>\n          <TabPanel index={0} value={tabValue}>\n            <Summary data={{ summary }} />\n\n            <EthNfts\n              data={{ nfts: ownedEthNfts, collections: ownedEthCollections, loading: eth_loading }}\n            />\n\n            <SolNfts\n              data={{ nfts: ownedSolNfts, collections: ownedSolCollections, loading: sol_loading }}\n            />\n            <SectionLabel variant=\"h5\" style={{ marginTop: 48, marginBottom: 24 }}>\n              BSC & Polygon NFTs (Beta)\n            </SectionLabel>\n            <NftPagination\n              loading={bsc_loading}\n              nfts={ownedBscNfts.slice((page - 1) * 12, page * 12)}\n              page={page}\n              maxPage={Math.floor(ownedBscNfts.length / 12) + 1}\n              onNext={() => setPage(page + 1)}\n              onPrev={() => setPage(page - 1)}\n            />\n          </TabPanel>\n        </Grid>\n      </Grid>\n      <Modal open={createProfile}>\n        <div className={styles.createProfileDialog}>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            style={{ height: '24%' }}\n          >\n            <Typography variant=\"h4\" style={{ marginLeft: 30, fontSize: 25, fontWeight: 'bold' }}>\n              Create Profile\n            </Typography>\n            <IconButton\n              style={{ marginRight: 30 }}\n              onClick={() => {\n                setCreateProfile(false);\n              }}\n            >\n              <CloseIcon style={{ fill: '#FFFFFF' }} />\n            </IconButton>\n          </Grid>\n          <hr style={{ width: '100%', margin: 0 }} />\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={{ height: '52%' }}\n          >\n            <OutlinedInput\n              value={profileName}\n              onChange={(e) => {\n                setProfileName(e.target.value);\n              }}\n              style={{ minWidth: '90%', height: 50, fontWeight: 'bold', fontSize: '16px' }}\n            />\n          </Grid>\n          <hr style={{ width: '100%', margin: 0 }} />\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            style={{ height: '24%' }}\n          >\n            <Button\n              style={{ width: 170, marginRight: 34 }}\n              className=\"gradient-button\"\n              variant=\"outlined\"\n              onClick={handleSubmit}\n            >\n              Create Profile\n            </Button>\n          </Grid>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default NftCollections;\n"]},"metadata":{},"sourceType":"module"}