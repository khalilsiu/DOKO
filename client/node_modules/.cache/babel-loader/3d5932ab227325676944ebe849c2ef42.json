{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport moment from 'moment';\nimport { web3 } from './web3'; // eslint-disable-next-line @typescript-eslint/no-var-requires\n\nvar abi = require('./abis/erc721.json');\n\nexport var minimizeAddress = function minimizeAddress(address) {\n  return address ? \"\".concat(address.substr(0, 6), \"...\").concat(address.substr(-4)) : '';\n};\nexport var normalizeImageURL = function normalizeImageURL(nft) {\n  var _nft$metadata, _nft$metadata$image;\n\n  if (nft.metadata && !nft.metadata.image && nft.metadata.image_data) {\n    nft.metadata.image = nft.metadata.image_data;\n  }\n\n  if (((_nft$metadata = nft.metadata) === null || _nft$metadata === void 0 ? void 0 : (_nft$metadata$image = _nft$metadata.image) === null || _nft$metadata$image === void 0 ? void 0 : _nft$metadata$image.indexOf('ipfs')) === 0) {\n    nft.metadata.image = \"https://ipfs.io/\".concat(nft.metadata.image.replace('ipfs/', '').replace('ipfs://', 'ipfs/'));\n  }\n\n  return nft;\n};\nexport var zeroAddress = '0x0000000000000000000000000000000000000000';\nexport var humanizeDate = function humanizeDate(date) {\n  var _date = new Date(date);\n\n  var year = _date.getFullYear();\n\n  var day = _date.getDate();\n\n  var month = _date.getMonth() + 1;\n  return \"\".concat(year, \"/\").concat(month, \"/\").concat(day);\n};\nexport var chainMapping = function chainMapping(chain) {\n  var ChainMap = {\n    eth: 'Ethereum',\n    bsc: 'BSC',\n    polygon: 'Polygon',\n    solana: 'Solana'\n  };\n  return ChainMap[chain];\n};\nexport var getTotalSupply = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n    var contract;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            contract = new web3.eth.Contract(abi, address);\n            _context.prev = 1;\n            _context.next = 4;\n            return contract.methods.totalSupply().call();\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", 0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function getTotalSupply(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var sortTxsByDates = function sortTxsByDates(txs) {\n  var _txs = txs.map(function (tx) {\n    tx.date = moment(tx.date, 'YYYY/MM/DD').unix();\n    return tx;\n  });\n\n  var sorted = _txs.sort(function (tx1, tx2) {\n    return tx2.date - tx1.date;\n  }); // convert back to string\n\n\n  var result = sorted.map(function (tx) {\n    tx.date = moment(tx.date * 1000).format('YYYY/MM/DD');\n    return tx;\n  });\n  return result;\n};\nexport var formatTx = function formatTx(tx, chain) {\n  var formatted = {};\n\n  if (chain === 'eth') {\n    formatted.date = humanizeDate(tx.created_date);\n\n    switch (tx.event_type) {\n      case 'transfer':\n        if (tx.from_account.address === zeroAddress) {\n          formatted.event = 'Mint';\n        } else {\n          formatted.event = 'Transfer';\n        }\n\n        formatted.from = minimizeAddress(tx.from_account.address);\n        formatted.to = minimizeAddress(tx.to_account.address);\n        formatted.price = '';\n        break;\n\n      case 'successful':\n        formatted.event = 'Sale';\n        formatted.from = minimizeAddress(tx.seller.address);\n        formatted.to = minimizeAddress(tx.winner_account.address);\n        formatted.price = tx.total_price ? Number.parseFloat(web3.utils.fromWei(tx.total_price, 'ether')).toFixed(2) : '0';\n        break;\n\n      case 'bid_entered':\n        formatted.from = tx.from_account.address;\n        formatted.event = 'Bid';\n        formatted.price = tx.bid_amount ? Number.parseFloat(web3.utils.fromWei(tx.bid_amount, 'ether')).toFixed(2) : '0';\n        formatted.payment_token = tx.payment_token.symbol;\n        break;\n\n      case 'bid_withdrawn':\n        formatted.from = tx.from_account.address;\n        formatted.event = 'Bid withdrawn';\n        formatted.price = '0';\n        formatted.payment_token = tx.payment_token.symbol;\n        break;\n\n      case 'offer_withdrawn':\n        formatted.from = tx.from_account.address;\n        formatted.event = 'Offer withdrawn';\n        formatted.price = '0';\n        formatted.payment_token = tx.payment_token.symbol;\n        break;\n\n      case 'offer_entered':\n        formatted.from = tx.from_account.address;\n        formatted.event = 'Offer Entered';\n        formatted.price = tx.bid_amount ? Number.parseFloat(web3.utils.fromWei(tx.bid_amount, 'ether')).toFixed(2) : '0';\n        formatted.payment_token = tx.payment_token.symbol;\n        break;\n\n      case 'created':\n        formatted.event = 'Listing';\n        formatted.price = tx.ending_price ? Number.parseFloat(web3.utils.fromWei(tx.ending_price, 'ether')).toFixed(2) : '0';\n        break;\n\n      default:\n        break;\n    }\n  } else if (chain === 'polygon' || chain === 'bsc') {\n    formatted.price = tx.value ? Number.parseFloat(web3.utils.fromWei(tx.value, 'ether')).toFixed(2) : 0;\n    formatted.date = humanizeDate(tx.block_timestamp);\n    formatted.event = tx.from_address === zeroAddress ? 'Mint' : 'Transfer';\n    formatted.from = minimizeAddress(tx.from_address);\n    formatted.to = minimizeAddress(tx.to_address);\n  }\n\n  return formatted;\n};\nexport var shortenAddress = function shortenAddress(address) {\n  return \"\".concat(address.slice(0, 2), \"...\").concat(address.slice(address.length - 4));\n};\nexport function isValidHttpUrl(str) {\n  var url;\n\n  try {\n    url = new URL(str);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n}\nexport function isSolAddress(address) {\n  return !address.startsWith('0x') && address.length >= 32 && address.length <= 44;\n}\nexport function formatPrice(label) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var lookup = [{\n    value: 1,\n    symbol: ''\n  }, {\n    value: 1e3,\n    symbol: 'K'\n  }, {\n    value: 1e6,\n    symbol: 'M'\n  }, {\n    value: 1e9,\n    symbol: 'G'\n  }, {\n    value: 1e12,\n    symbol: 'T'\n  }, {\n    value: 1e15,\n    symbol: 'P'\n  }, {\n    value: 1e18,\n    symbol: 'E'\n  }];\n  var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var item = lookup.slice().reverse().find(function (i) {\n    return label >= i.value;\n  });\n  return item ? (label / item.value).toFixed(decimals).replace(rx, '$1') + item.symbol : '0';\n}","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/libs/utils.ts"],"names":["moment","web3","abi","require","minimizeAddress","address","substr","normalizeImageURL","nft","metadata","image","image_data","indexOf","replace","zeroAddress","humanizeDate","date","_date","Date","year","getFullYear","day","getDate","month","getMonth","chainMapping","chain","ChainMap","eth","bsc","polygon","solana","getTotalSupply","contract","Contract","methods","totalSupply","call","sortTxsByDates","txs","_txs","map","tx","unix","sorted","sort","tx1","tx2","result","format","formatTx","formatted","created_date","event_type","from_account","event","from","to","to_account","price","seller","winner_account","total_price","Number","parseFloat","utils","fromWei","toFixed","bid_amount","payment_token","symbol","ending_price","value","block_timestamp","from_address","to_address","shortenAddress","slice","length","isValidHttpUrl","str","url","URL","_","protocol","isSolAddress","startsWith","formatPrice","label","decimals","lookup","rx","item","reverse","find","i"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { web3 } from './web3';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst abi = require('./abis/erc721.json');\n\nexport const minimizeAddress = (address: string) =>\n  address ? `${address.substr(0, 6)}...${address.substr(-4)}` : '';\n\nexport const normalizeImageURL = (nft: any) => {\n  if (nft.metadata && !nft.metadata.image && nft.metadata.image_data) {\n    nft.metadata.image = nft.metadata.image_data;\n  }\n  if (nft.metadata?.image?.indexOf('ipfs') === 0) {\n    nft.metadata.image = `https://ipfs.io/${nft.metadata.image\n      .replace('ipfs/', '')\n      .replace('ipfs://', 'ipfs/')}`;\n  }\n  return nft;\n};\n\nexport const zeroAddress = '0x0000000000000000000000000000000000000000';\n\nexport const humanizeDate = (date: string) => {\n  const _date = new Date(date);\n  const year = _date.getFullYear();\n  const day = _date.getDate();\n  const month = _date.getMonth() + 1;\n  return `${year}/${month}/${day}`;\n};\n\nexport const chainMapping = (chain: string) => {\n  interface Map {\n    [key: string]: string;\n  }\n  const ChainMap: Map = {\n    eth: 'Ethereum',\n    bsc: 'BSC',\n    polygon: 'Polygon',\n    solana: 'Solana',\n  };\n\n  return ChainMap[chain];\n};\n\nexport const getTotalSupply = async (address: string) => {\n  const contract = new web3.eth.Contract(abi, address);\n  try {\n    return await contract.methods.totalSupply().call();\n  } catch (e) {\n    return 0;\n  }\n};\n\nexport const sortTxsByDates = (txs: any[]) => {\n  const _txs = txs.map((tx) => {\n    tx.date = moment(tx.date, 'YYYY/MM/DD').unix();\n    return tx;\n  });\n  const sorted = _txs.sort((tx1: any, tx2: any) => tx2.date - tx1.date);\n  // convert back to string\n  const result = sorted.map((tx: any) => {\n    tx.date = moment(tx.date * 1000).format('YYYY/MM/DD');\n    return tx;\n  });\n  return result;\n};\n\nexport const formatTx = (tx: any, chain: string) => {\n  const formatted: any = {};\n  if (chain === 'eth') {\n    formatted.date = humanizeDate(tx.created_date);\n    switch (tx.event_type) {\n      case 'transfer':\n        if (tx.from_account.address === zeroAddress) {\n          formatted.event = 'Mint';\n        } else {\n          formatted.event = 'Transfer';\n        }\n        formatted.from = minimizeAddress(tx.from_account.address);\n        formatted.to = minimizeAddress(tx.to_account.address);\n        formatted.price = '';\n        break;\n      case 'successful':\n        formatted.event = 'Sale';\n        formatted.from = minimizeAddress(tx.seller.address);\n        formatted.to = minimizeAddress(tx.winner_account.address);\n        formatted.price = tx.total_price\n          ? Number.parseFloat(web3.utils.fromWei(tx.total_price, 'ether')).toFixed(2)\n          : '0';\n        break;\n      case 'bid_entered':\n        formatted.from = tx.from_account.address;\n        formatted.event = 'Bid';\n        formatted.price = tx.bid_amount\n          ? Number.parseFloat(web3.utils.fromWei(tx.bid_amount, 'ether')).toFixed(2)\n          : '0';\n        formatted.payment_token = tx.payment_token.symbol;\n        break;\n      case 'bid_withdrawn':\n        formatted.from = tx.from_account.address;\n        formatted.event = 'Bid withdrawn';\n        formatted.price = '0';\n        formatted.payment_token = tx.payment_token.symbol;\n        break;\n      case 'offer_withdrawn':\n        formatted.from = tx.from_account.address;\n        formatted.event = 'Offer withdrawn';\n        formatted.price = '0';\n        formatted.payment_token = tx.payment_token.symbol;\n        break;\n      case 'offer_entered':\n        formatted.from = tx.from_account.address;\n        formatted.event = 'Offer Entered';\n        formatted.price = tx.bid_amount\n          ? Number.parseFloat(web3.utils.fromWei(tx.bid_amount, 'ether')).toFixed(2)\n          : '0';\n        formatted.payment_token = tx.payment_token.symbol;\n        break;\n      case 'created':\n        formatted.event = 'Listing';\n        formatted.price = tx.ending_price\n          ? Number.parseFloat(web3.utils.fromWei(tx.ending_price, 'ether')).toFixed(2)\n          : '0';\n        break;\n      default:\n        break;\n    }\n  } else if (chain === 'polygon' || chain === 'bsc') {\n    formatted.price = tx.value\n      ? Number.parseFloat(web3.utils.fromWei(tx.value, 'ether')).toFixed(2)\n      : 0;\n    formatted.date = humanizeDate(tx.block_timestamp);\n    formatted.event = tx.from_address === zeroAddress ? 'Mint' : 'Transfer';\n    formatted.from = minimizeAddress(tx.from_address);\n    formatted.to = minimizeAddress(tx.to_address);\n  }\n\n  return formatted;\n};\n\nexport const shortenAddress = (address: string) =>\n  `${address.slice(0, 2)}...${address.slice(address.length - 4)}`;\n\nexport function isValidHttpUrl(str: string) {\n  let url;\n\n  try {\n    url = new URL(str);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:';\n}\n\nexport function isSolAddress(address: string) {\n  return !address.startsWith('0x') && address.length >= 32 && address.length <= 44;\n}\n\nexport function formatPrice(label: number, decimals = 1) {\n  const lookup = [\n    { value: 1, symbol: '' },\n    { value: 1e3, symbol: 'K' },\n    { value: 1e6, symbol: 'M' },\n    { value: 1e9, symbol: 'G' },\n    { value: 1e12, symbol: 'T' },\n    { value: 1e15, symbol: 'P' },\n    { value: 1e18, symbol: 'E' },\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  const item = lookup\n    .slice()\n    .reverse()\n    .find((i) => label >= i.value);\n  return item ? (label / item.value).toFixed(decimals).replace(rx, '$1') + item.symbol : '0';\n}\n"]},"metadata":{},"sourceType":"module"}