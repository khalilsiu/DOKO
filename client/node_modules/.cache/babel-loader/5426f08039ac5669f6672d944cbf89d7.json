{"ast":null,"code":"import _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/components/CopyAddress.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Grid, Tooltip, Typography, IconButton } from '@material-ui/core';\nimport { memo, useState } from 'react';\nimport { minimizeAddress } from '../libs/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function (_ref) {\n  _s();\n\n  var address = _ref.address,\n      _ref$minimize = _ref.minimize,\n      minimize = _ref$minimize === void 0 ? true : _ref$minimize;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n\n  var copy = function copy() {\n    if (copied) {\n      return;\n    }\n\n    navigator.clipboard.writeText(address);\n    setCopied(true);\n    setTimeout(function () {\n      return setCopied(false);\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: copied ? 'Copied' : 'Copy',\n    placement: \"right\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: 'inline-block'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"hover-button\",\n        container: true,\n        alignItems: \"center\",\n        onClick: function onClick() {\n          return copy();\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            lineHeight: 2\n          },\n          children: minimize ? minimizeAddress(address) : address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            height: 13,\n            src: \"/copy.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n}, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/components/CopyAddress.tsx"],"names":["Grid","Tooltip","Typography","IconButton","memo","useState","minimizeAddress","address","minimize","copied","setCopied","copy","navigator","clipboard","writeText","setTimeout","display","lineHeight"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,OAAf,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,mBAAtD;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAOA,kCAAeF,IAAI,SAAC,gBAAyC;AAAA;;AAAA,MAAtCG,OAAsC,QAAtCA,OAAsC;AAAA,2BAA7BC,QAA6B;AAAA,MAA7BA,QAA6B,8BAAlB,IAAkB;;AAC3D,kBAA4BH,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,QAAIF,MAAJ,EAAY;AACV;AACD;;AACDG,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BP,OAA9B;AACAG,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,IAAAA,UAAU,CAAC;AAAA,aAAML,SAAS,CAAC,KAAD,CAAf;AAAA,KAAD,EAAyB,IAAzB,CAAV;AACD,GAPD;;AASA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAED,MAAM,GAAG,QAAH,GAAc,MAApC;AAA4C,IAAA,SAAS,EAAC,OAAtD;AAAA,2BACE;AAAM,MAAA,KAAK,EAAE;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,SAAS,MAAxC;AAAyC,QAAA,UAAU,EAAC,QAApD;AAA6D,QAAA,OAAO,EAAE;AAAA,iBAAML,IAAI,EAAV;AAAA,SAAtE;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAE;AAAEM,YAAAA,UAAU,EAAE;AAAd,WAAhC;AAAA,oBACGT,QAAQ,GAAGF,eAAe,CAACC,OAAD,CAAlB,GAA8BA;AADzC;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,QAAC,UAAD;AAAA,iCACE;AAAK,YAAA,MAAM,EAAE,EAAb;AAAiB,YAAA,GAAG,EAAC,WAArB;AAAiC,YAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CA1BkB,kCAAnB","sourcesContent":["import { Grid, Tooltip, Typography, IconButton } from '@material-ui/core';\nimport { memo, useState } from 'react';\nimport { minimizeAddress } from '../libs/utils';\n\ninterface Props {\n  address: string;\n  minimize?: boolean;\n}\n\nexport default memo(({ address, minimize = true }: Props) => {\n  const [copied, setCopied] = useState(false);\n\n  const copy = () => {\n    if (copied) {\n      return;\n    }\n    navigator.clipboard.writeText(address);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <Tooltip title={copied ? 'Copied' : 'Copy'} placement=\"right\">\n      <span style={{ display: 'inline-block' }}>\n        <Grid className=\"hover-button\" container alignItems=\"center\" onClick={() => copy()}>\n          <Typography variant=\"h6\" style={{ lineHeight: 2 }}>\n            {minimize ? minimizeAddress(address) : address}\n          </Typography>\n          <IconButton>\n            <img height={13} src=\"/copy.png\" alt=\"\" />\n          </IconButton>\n        </Grid>\n      </span>\n    </Tooltip>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}