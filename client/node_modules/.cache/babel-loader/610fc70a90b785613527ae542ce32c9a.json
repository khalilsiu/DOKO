{"ast":null,"code":"import _defineProperty from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/modules/meta-stats-page/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Grid, Hidden, Card, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Meta } from '../../components';\nimport { getDclStats } from '../../store/stats/dclStatsSlice';\nimport Intro from '../core/Intro';\nimport StatsView from './StatsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  var _collectionPageContai;\n\n  return {\n    collectionPageContainer: (_collectionPageContai = {\n      padding: 24,\n      marginTop: 36\n    }, _defineProperty(_collectionPageContai, theme.breakpoints.down('sm'), {\n      flexDirection: 'column',\n      marginTop: 0\n    }), _defineProperty(_collectionPageContai, \"minHeight\", 'calc(100vh)'), _collectionPageContai),\n    introCard: {\n      position: 'sticky',\n      top: 120\n    }\n  };\n});\n\nvar MetaStatsPage = function MetaStatsPage() {\n  _s();\n\n  var styles = useStyles();\n  var dispatch = useDispatch();\n  var dclStats = useSelector(function (state) {\n    return state.dclStats;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.appState;\n  }),\n      isLoading = _useSelector.isLoading;\n\n  useEffect(function () {\n    dispatch(getDclStats());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Stats | DOKO\",\n      description: \"The Multi-Chain NFT Portfolio Manager that allows you to display, manage & trade your NFTs\",\n      url: \"https://doko.one\",\n      image: \"/DOKO_LOGO.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      className: styles.collectionPageContainer,\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        smDown: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            marginRight: '4rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: styles.introCard,\n            children: /*#__PURE__*/_jsxDEV(Intro, {\n              drawer: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            style: {\n              fontWeight: 'bolder'\n            },\n            children: \"Decentraland Traffic Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"You can find traffic data of individual Decentraland parcels below for yesterday, last 7 days and last 30 days. You may sort any of the columns or search for a coordinate with the search bar. If you are interested in contributing to help us build tools with this data, feel free to DM us on Twitter or Discord. Hope it helps!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(StatsView, {\n          stats: dclStats,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(MetaStatsPage, \"guke+SV2KrHfKWpue4dm+s3LJ/0=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = MetaStatsPage;\nexport default MetaStatsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetaStatsPage\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/modules/meta-stats-page/index.tsx"],"names":["Grid","Hidden","Card","makeStyles","Typography","React","useEffect","useDispatch","useSelector","Meta","getDclStats","Intro","StatsView","useStyles","theme","collectionPageContainer","padding","marginTop","breakpoints","down","flexDirection","introCard","position","top","MetaStatsPage","styles","dispatch","dclStats","state","appState","isLoading","marginRight","marginBottom","fontWeight"],"mappings":"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","sourcesContent":["import { Grid, Hidden, Card, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Meta } from '../../components';\nimport { getDclStats } from '../../store/stats/dclStatsSlice';\nimport { RootState } from '../../store/store';\nimport Intro from '../core/Intro';\nimport StatsView from './StatsView';\n\nconst useStyles = makeStyles((theme) => ({\n  collectionPageContainer: {\n    padding: 24,\n    marginTop: 36,\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n      marginTop: 0,\n    },\n    minHeight: 'calc(100vh)',\n  },\n  introCard: {\n    position: 'sticky',\n    top: 120,\n  },\n}));\n\nconst MetaStatsPage = () => {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const dclStats = useSelector((state: RootState) => state.dclStats);\n  const { isLoading } = useSelector((state: RootState) => state.appState);\n  useEffect(() => {\n    dispatch(getDclStats());\n  }, []);\n  return (\n    <>\n      <Meta\n        title=\"Stats | DOKO\"\n        description=\"The Multi-Chain NFT Portfolio Manager that allows you to display, manage & trade your NFTs\"\n        url=\"https://doko.one\"\n        image=\"/DOKO_LOGO.png\"\n      />\n      <Grid container wrap=\"nowrap\" className={styles.collectionPageContainer}>\n        <Hidden smDown>\n          <Grid item style={{ marginRight: '4rem' }}>\n            <Card className={styles.introCard}>\n              <Intro drawer={false} />\n            </Card>\n          </Grid>\n        </Hidden>\n\n        <Grid item md>\n          <div style={{ marginBottom: '2rem' }}>\n            <Typography variant=\"h3\" style={{ fontWeight: 'bolder' }}>\n              Decentraland Traffic Statistics\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              You can find traffic data of individual Decentraland parcels below for yesterday, last\n              7 days and last 30 days. You may sort any of the columns or search for a coordinate\n              with the search bar. If you are interested in contributing to help us build tools with\n              this data, feel free to DM us on Twitter or Discord. Hope it helps!\n            </Typography>\n          </div>\n          <StatsView stats={dclStats} isLoading={isLoading} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MetaStatsPage;\n"]},"metadata":{},"sourceType":"module"}