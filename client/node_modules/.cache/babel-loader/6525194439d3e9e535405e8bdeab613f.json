{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject;\n\nimport L from 'leaflet';\nimport styled from 'styled-components';\nimport { Popup } from 'react-leaflet';\nimport { createStyles } from '@material-ui/styles';\nexport var marker = new L.Icon({\n  iconUrl: '/marker.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nexport var StyledPopup = styled(Popup)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  .leaflet-popup-content-wrapper {\\n    background-color: black;\\n    border: white 1px solid;\\n    color: \", \";\\n    width: 250px;\\n  }\\n  .leaflet-popup-content {\\n    height: 150px;\\n    margin: 0;\\n  }\\n  .leaflet-popup-tip {\\n    background-color: black;\\n    border: white 1px solid;\\n  }\\n\"])), function (props) {\n  return props.color;\n});\nexport var MapStyles = createStyles({\n  map: {\n    height: function height(_ref) {\n      var smOrAbove = _ref.smOrAbove;\n      return smOrAbove ? 600 : 300;\n    },\n    width: '100%',\n    border: '1px solid rgba(255, 255, 255, 0.5)',\n    boxSizing: 'border-box',\n    overflow: 'hidden'\n  },\n  popupTitleContainer: {\n    borderBottom: 'solid white 1px',\n    padding: '10px 16px',\n    fontWeight: 'bold',\n    width: '100%',\n    height: '20%'\n  },\n  popupContentContainer: {\n    height: '80%',\n    padding: '10px 16px'\n  },\n  popupContent: {\n    width: 'auto',\n    height: '100%',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    borderRadius: '6px'\n  }\n});","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/components/maps/constants.ts"],"names":["L","styled","Popup","createStyles","marker","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","StyledPopup","props","color","MapStyles","map","height","smOrAbove","width","border","boxSizing","overflow","popupTitleContainer","borderBottom","padding","fontWeight","popupContentContainer","popupContent","backgroundPosition","backgroundSize","borderRadius"],"mappings":";;;;AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAGA,SAASC,YAAT,QAA6B,qBAA7B;AAGA,OAAO,IAAMC,MAAM,GAAG,IAAIJ,CAAC,CAACK,IAAN,CAAW;AAC/BC,EAAAA,OAAO,EAAE,aADsB;AAE/BC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFqB;AAG/BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAHmB;AAI/BC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CAJkB;AAK/BC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AALmB,CAAX,CAAf;AAUP,OAAO,IAAMC,WAAW,GAAGV,MAAM,CAACC,KAAD,CAAT,gXAIX,UAACU,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAjB;AAAA,CAJW,CAAjB;AA0BP,OAAO,IAAMC,SAAS,GAAGX,YAAY,CAAkB;AACrDY,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE;AAAA,UAAGC,SAAH,QAAGA,SAAH;AAAA,aAAoBA,SAAS,GAAG,GAAH,GAAS,GAAtC;AAAA,KADL;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,MAAM,EAAE,oCAHL;AAIHC,IAAAA,SAAS,EAAE,YAJR;AAKHC,IAAAA,QAAQ,EAAE;AALP,GADgD;AAQrDC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,YAAY,EAAE,iBADK;AAEnBC,IAAAA,OAAO,EAAE,WAFU;AAGnBC,IAAAA,UAAU,EAAE,MAHO;AAInBP,IAAAA,KAAK,EAAE,MAJY;AAKnBF,IAAAA,MAAM,EAAE;AALW,GARgC;AAerDU,EAAAA,qBAAqB,EAAE;AACrBV,IAAAA,MAAM,EAAE,KADa;AAErBQ,IAAAA,OAAO,EAAE;AAFY,GAf8B;AAmBrDG,EAAAA,YAAY,EAAE;AACZT,IAAAA,KAAK,EAAE,MADK;AAEZF,IAAAA,MAAM,EAAE,MAFI;AAGZY,IAAAA,kBAAkB,EAAE,QAHR;AAIZC,IAAAA,cAAc,EAAE,OAJJ;AAKZC,IAAAA,YAAY,EAAE;AALF;AAnBuC,CAAlB,CAA9B","sourcesContent":["import L from 'leaflet';\nimport styled from 'styled-components';\nimport { Popup } from 'react-leaflet';\n\nimport { Asset } from '../../store/meta-nft-collections/profileOwnershipSlice';\nimport { createStyles } from '@material-ui/styles';\nimport { Theme } from '@material-ui/core';\n\nexport const marker = new L.Icon({\n  iconUrl: '/marker.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n});\nexport interface PopupProps {\n  readonly color: string;\n}\nexport const StyledPopup = styled(Popup)<PopupProps>`\n  .leaflet-popup-content-wrapper {\n    background-color: black;\n    border: white 1px solid;\n    color: ${(props) => props.color};\n    width: 250px;\n  }\n  .leaflet-popup-content {\n    height: 150px;\n    margin: 0;\n  }\n  .leaflet-popup-tip {\n    background-color: black;\n    border: white 1px solid;\n  }\n`;\n\nexport interface MapsProps {\n  selected: number | null;\n  assets: Asset[];\n}\n\nexport interface StyleProps {\n  smOrAbove: boolean;\n}\n\nexport const MapStyles = createStyles<any, StyleProps>({\n  map: {\n    height: ({ smOrAbove }) => (smOrAbove ? 600 : 300),\n    width: '100%',\n    border: '1px solid rgba(255, 255, 255, 0.5)',\n    boxSizing: 'border-box',\n    overflow: 'hidden',\n  },\n  popupTitleContainer: {\n    borderBottom: 'solid white 1px',\n    padding: '10px 16px',\n    fontWeight: 'bold',\n    width: '100%',\n    height: '20%',\n  },\n  popupContentContainer: {\n    height: '80%',\n    padding: '10px 16px',\n  },\n  popupContent: {\n    width: 'auto',\n    height: '100%',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    borderRadius: '6px',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}