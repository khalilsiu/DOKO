{"ast":null,"code":"import _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/contexts/DrawerContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Drawer from '@material-ui/core/Drawer';\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var DrawerContext = /*#__PURE__*/createContext({\n  open: false,\n  toggle: function toggle() {\n    return null;\n  }\n});\nexport var DrawerContextProvider = function DrawerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      intro = _ref.intro;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(DrawerContext.Provider, {\n    value: {\n      toggle: function toggle() {\n        return setOpen(!open);\n      },\n      open: open\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: open,\n      onClose: function onClose() {\n        return setOpen(false);\n      },\n      children: intro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DrawerContextProvider, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = DrawerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerContextProvider\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/contexts/DrawerContext.tsx"],"names":["Drawer","createContext","useState","DrawerContext","open","toggle","DrawerContextProvider","children","intro","setOpen"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,EAA2CC,QAA3C,QAA2D,OAA3D;;AAOA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAqB;AAC7DG,EAAAA,IAAI,EAAE,KADuD;AAE7DC,EAAAA,MAAM,EAAE;AAAA,WAAM,IAAN;AAAA;AAFqD,CAArB,CAAnC;AAKP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAAiD;AAAA;;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;;AACpF,kBAAwBN,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOE,IAAP;AAAA,MAAaK,OAAb;;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAM,EAAE;AAAA,eAAMI,OAAO,CAAC,CAACL,IAAF,CAAb;AAAA,OAAV;AAAgCA,MAAAA,IAAI,EAAJA;AAAhC,KAA/B;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,MAAf;AAAsB,MAAA,IAAI,EAAEA,IAA5B;AAAkC,MAAA,OAAO,EAAE;AAAA,eAAMK,OAAO,CAAC,KAAD,CAAb;AAAA,OAA3C;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,aADF,EAIGD,QAJH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAVM;;GAAMD,qB;;KAAAA,qB","sourcesContent":["import Drawer from '@material-ui/core/Drawer';\nimport { createContext, PropsWithChildren, useState } from 'react';\n\ninterface DrawerContextValue {\n  open: boolean;\n  toggle: () => void;\n}\n\nexport const DrawerContext = createContext<DrawerContextValue>({\n  open: false,\n  toggle: () => null,\n});\n\nexport const DrawerContextProvider = ({ children, intro }: PropsWithChildren<any>) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <DrawerContext.Provider value={{ toggle: () => setOpen(!open), open }}>\n      <Drawer anchor=\"left\" open={open} onClose={() => setOpen(false)}>\n        {intro}\n      </Drawer>\n      {children}\n    </DrawerContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}