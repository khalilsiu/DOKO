{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/modules/nft-individual/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Button, Grid, IconButton, Link, makeStyles, Table, TablePagination, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, withStyles } from '@material-ui/core';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { useParams } from 'react-router-dom';\nimport eth from 'cryptocurrency-icons/32/white/eth.png';\nimport bsc from 'cryptocurrency-icons/32/white/bnb.png';\nimport solana from 'cryptocurrency-icons/32/white/sol.png';\nimport Moralis from '../../libs/moralis';\nimport { fetchOpenSeaEvents, fetchNFTOpensea } from './api';\nimport { NftTraits } from './traits';\nimport { SolanaNftTraits } from './solanaTraits';\nimport { CopyAddress } from './CopyAddress';\nimport { PopoverShare } from '../../components/PopoverShare';\nimport { web3 } from '../../libs/web3';\nimport { normalizeImageURL, chainMapping, formatTx, getTotalSupply } from '../../libs/utils';\nimport { getNFT, fetchOpenseaLastSale } from '../api';\nimport { getTokenInfo, getSolanaNFTMetadata, getTokenOwner } from '../../libs/metaplex/utils';\nimport opensea_icon from '../../assets/opensea-transparent.png';\nimport solsea_icon from '../../assets/solsea-transparent.png';\nimport loading_image from '../../assets/loading.gif';\nimport { Meta } from '../../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar StyledTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: '#333333',\n      color: theme.palette.common.white,\n      textAlign: 'center'\n    },\n    body: {\n      fontSize: 14,\n      color: theme.palette.common.white,\n      textAlign: 'center'\n    }\n  };\n})(TableCell);\nvar CustomIconButton = withStyles({\n  root: {\n    padding: '1px',\n    marginRight: 24\n  }\n})(IconButton);\nvar useStyles = makeStyles(function (theme) {\n  var _collectionContainer, _nftNameMobile, _nftNameGeneral, _lazyloadwrapper;\n\n  return {\n    collectionContainer: (_collectionContainer = {\n      padding: 24,\n      marginTop: 36,\n      marginBottom: 36\n    }, _defineProperty(_collectionContainer, theme.breakpoints.down('sm'), {\n      flexDirection: 'column',\n      marginTop: 0\n    }), _defineProperty(_collectionContainer, \"minHeight\", 'calc(100vh)'), _collectionContainer),\n    nftNameMobile: (_nftNameMobile = {}, _defineProperty(_nftNameMobile, theme.breakpoints.down('sm'), {\n      display: 'flex',\n      textAlign: 'center'\n    }), _defineProperty(_nftNameMobile, \"display\", 'none'), _nftNameMobile),\n    nftNameGeneral: (_nftNameGeneral = {}, _defineProperty(_nftNameGeneral, theme.breakpoints.down('sm'), {\n      display: 'none',\n      textAlign: 'left'\n    }), _defineProperty(_nftNameGeneral, \"display\", 'flex'), _nftNameGeneral),\n    lazyloadwrapper: (_lazyloadwrapper = {}, _defineProperty(_lazyloadwrapper, theme.breakpoints.up('md'), {\n      position: 'fixed',\n      left: 0\n    }), _defineProperty(_lazyloadwrapper, \"textAlign\", 'center'), _defineProperty(_lazyloadwrapper, \"width\", 'inherit'), _defineProperty(_lazyloadwrapper, \"maxWidth\", 'inherit'), _lazyloadwrapper),\n    image: {\n      borderRadius: 12,\n      border: '3px solid white',\n      maxHeight: 400,\n      minHeight: 200,\n      maxWidth: '80%',\n      '& > svg': {\n        width: '100%',\n        height: 'auto'\n      }\n    },\n    separator: {\n      border: '1px solid transparent',\n      borderRightColor: '#333333'\n    },\n    bolder: {\n      fontWeight: 'bolder'\n    },\n    shareIcon: {\n      width: 36,\n      hight: 36\n    },\n    networkIcon: {\n      width: 12,\n      height: 12,\n      marginRight: 3\n    },\n    networkIconMedium: {\n      height: 18,\n      marginRight: 3\n    },\n    profileButton: {\n      background: \"linear-gradient(\\n      -45deg,\\n      #ff06d7 0%,\\n      #ff06d7 30%,\\n      rgba(80, 92, 176, 1) 50%,\\n      #00ffef 80%,\\n      #00ffef 100%\\n    )\",\n      padding: '8px 20px',\n      width: 200,\n      fontWeight: 'bold'\n    }\n  };\n});\nexport var NftIndividual = function NftIndividual() {\n  _s();\n\n  var styles = useStyles();\n\n  var _useParams = useParams(),\n      address = _useParams.address,\n      id = _useParams.id,\n      chain = _useParams.chain;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      nft = _useState2[0],\n      setNFT = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastSale = _useState4[0],\n      setLastSale = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastSaleUSD = _useState6[0],\n      setLastSaleUSD = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      floorPrice = _useState8[0],\n      setFloorPrice = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      owner = _useState10[0],\n      setOwner = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      creator = _useState12[0],\n      setCreator = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      nftName = _useState14[0],\n      setNftName = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      nftImage = _useState16[0],\n      setNftImage = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      nftDesc = _useState18[0],\n      setNftDesc = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      txs = _useState20[0],\n      setTxs = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      collection = _useState22[0],\n      setCollection = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      traits = _useState24[0],\n      setTraits = _useState24[1];\n\n  var _useState25 = useState(),\n      _useState26 = _slicedToArray(_useState25, 2),\n      totalSupply = _useState26[0],\n      setTotalSupply = _useState26[1];\n\n  var _useState27 = useState(0),\n      _useState28 = _slicedToArray(_useState27, 2),\n      page = _useState28[0],\n      setPage = _useState28[1];\n\n  var _useState29 = useState(5),\n      _useState30 = _slicedToArray(_useState29, 2),\n      rowsPerPage = _useState30[0],\n      setRowsPerPage = _useState30[1];\n\n  var getCurrencyIcon = function getCurrencyIcon(_chain) {\n    var icon;\n\n    switch (_chain) {\n      case 'polygon':\n        {\n          icon = eth;\n          break;\n        }\n\n      case 'eth':\n        {\n          icon = eth;\n          break;\n        }\n\n      case 'bsc':\n        {\n          icon = bsc;\n          break;\n        }\n\n      case 'solana':\n        {\n          icon = solana;\n          break;\n        }\n\n      default:\n        break;\n    }\n\n    return icon;\n  };\n\n  var fetchNFT = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _nft, _metadata, res, metadataRes, tokenOwner, _traits, _res, _traits2, _res2, _traits3;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!address || !id)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.prev = 2;\n\n              if (!(chain === 'solana')) {\n                _context.next = 26;\n                break;\n              }\n\n              _context.next = 6;\n              return getTokenInfo(id);\n\n            case 6:\n              res = _context.sent;\n              _context.next = 9;\n              return getSolanaNFTMetadata(res);\n\n            case 9:\n              metadataRes = _context.sent;\n              _context.next = 12;\n              return getTokenOwner(id);\n\n            case 12:\n              tokenOwner = _context.sent;\n              _nft = res.data;\n              _metadata = metadataRes.metadata.data;\n\n              if (_nft.creators) {\n                setCreator(_nft.creators[0].address);\n              }\n\n              setNFT(_nft);\n              setOwner(tokenOwner);\n              setNftName(_nft.name);\n              setNftImage(_metadata.image);\n              setNftDesc(_metadata.description);\n              setCollection(_metadata.symbol);\n              _traits = 'attributes' in _metadata ? _metadata.attributes : [];\n              setTraits(_traits);\n              _context.next = 53;\n              break;\n\n            case 26:\n              if (!(chain !== 'eth')) {\n                _context.next = 41;\n                break;\n              }\n\n              _context.next = 29;\n              return getNFT(address, id);\n\n            case 29:\n              _res = _context.sent;\n              _nft = _res.data;\n              setNFT(_nft);\n              setOwner(_nft.owner_of);\n              setNftName(_nft.metadata.name ? _nft.metadata.name : \"\".concat(_nft.name, \" # \").concat(_nft.token_id));\n              setNftImage(normalizeImageURL(_nft).metadata.image);\n              setNftDesc(_nft.metadata.description);\n              setCollection(_nft.name);\n              _traits2 = 'metadata' in _nft && 'attributes' in _nft.metadata ? _nft.metadata.attributes : [];\n              setTraits(_traits2);\n              _context.next = 53;\n              break;\n\n            case 41:\n              _context.next = 43;\n              return fetchNFTOpensea(address, id);\n\n            case 43:\n              _res2 = _context.sent;\n              _nft = _res2.data;\n              setNFT(_nft);\n              setOwner(_nft.owner.address);\n              setNftName(_nft.name ? _nft.name : 'N/A');\n              setNftImage(_nft.image_url);\n              setNftDesc(_nft.description);\n              setCollection(_nft.asset_contract.name);\n              _traits3 = _res2.data.traits && _res2.data.traits.length ? _res2.data.traits : [];\n              setTraits(_traits3);\n\n            case 53:\n              _context.next = 58;\n              break;\n\n            case 55:\n              _context.prev = 55;\n              _context.t0 = _context[\"catch\"](2);\n              if (_context.t0) console.log(_context.t0);\n\n            case 58:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 55]]);\n    }));\n\n    return function fetchNFT() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchTxs = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_chain, _address, _id, offset, limit) {\n      var formatted_txs, options, transfers;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              formatted_txs = [];\n              _context2.prev = 1;\n\n              if (!(_chain === 'solana')) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 4:\n              if (!(_chain !== 'eth')) {\n                _context2.next = 12;\n                break;\n              }\n\n              options = {\n                address: address,\n                token_id: id,\n                chain: chain\n              };\n              _context2.next = 8;\n              return Moralis.Web3API.token.getWalletTokenIdTransfers(options);\n\n            case 8:\n              transfers = _context2.sent;\n              formatted_txs = transfers.result.map(function (transfer) {\n                return formatTx(transfer, _chain);\n              });\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.next = 14;\n              return fetchOpenSeaEvents(address, id, offset, limit, ['created', 'successful', 'transfer']);\n\n            case 14:\n              formatted_txs = _context2.sent;\n\n            case 15:\n              setTxs(formatted_txs);\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n              setTxs([]);\n\n            case 22:\n              if (formatted_txs.length) {\n                if (formatted_txs[formatted_txs.length - 1].event === 'Mint') {\n                  setCreator(formatted_txs[formatted_txs.length - 1].to);\n                }\n              } else {\n                setCreator('');\n              }\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 18]]);\n    }));\n\n    return function fetchTxs(_x, _x2, _x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var fetchPrice = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(addr, tokenId) {\n      var res, isLastSale, lastsale, usdRate, usdAmount, _floorPrice;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(chain !== 'eth')) {\n                _context3.next = 5;\n                break;\n              }\n\n              setLastSale(0);\n              setLastSaleUSD(0);\n              setFloorPrice(0);\n              return _context3.abrupt(\"return\");\n\n            case 5:\n              _context3.prev = 5;\n              _context3.next = 8;\n              return fetchOpenseaLastSale(addr, tokenId);\n\n            case 8:\n              res = _context3.sent;\n              isLastSale = res.data.last_sale && res.data.last_sale.total_price;\n              lastsale = isLastSale ? +web3.utils.fromWei(res.data.last_sale.total_price, 'ether') : 0;\n              usdRate = isLastSale ? +res.data.last_sale.payment_token.usd_price : 0;\n              usdAmount = lastsale * usdRate;\n              usdAmount = +Number.parseFloat(usdAmount.toString()).toFixed(2);\n              _floorPrice = +res.data.collection.stats.floor_price;\n              setLastSale(lastsale);\n              setLastSaleUSD(usdAmount);\n              setFloorPrice(_floorPrice);\n              _context3.next = 23;\n              break;\n\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](5);\n              console.error(_context3.t0);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 20]]);\n    }));\n\n    return function fetchPrice(_x6, _x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var _getTotalSupply = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(addr) {\n      var tsupply;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(chain !== 'eth')) {\n                _context4.next = 3;\n                break;\n              }\n\n              setTotalSupply(0);\n              return _context4.abrupt(\"return\");\n\n            case 3:\n              _context4.prev = 3;\n              _context4.next = 6;\n              return getTotalSupply(addr);\n\n            case 6:\n              tsupply = _context4.sent;\n              setTotalSupply(tsupply);\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](3);\n              setTotalSupply(0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 10]]);\n    }));\n\n    return function _getTotalSupply(_x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setNFT([]);\n    fetchNFT();\n    fetchTxs(chain, address, id, 0, 100);\n    fetchPrice(address, id);\n\n    _getTotalSupply(address);\n  }, [address, id, chain]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [nft && /*#__PURE__*/_jsxDEV(Meta, {\n      title: \"\".concat(nftName, \" | DOKO\"),\n      description: nftDesc || '',\n      url: \"https://doko.one\",\n      image: nftImage || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: styles.collectionContainer,\n      container: true,\n      direction: \"row\",\n      justifyContent: \"flex-start\",\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"row\",\n        justifyContent: \"space-between\",\n        className: styles.nftNameMobile,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            style: {\n              fontWeight: 'bolder'\n            },\n            children: nftName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(CustomIconButton, {\n            onClick: function onClick() {\n              return window.location.reload();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.shareIcon,\n              src: \"/collection/DOKOasset_RefreshData.png\",\n              alt: \"back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(PopoverShare, {\n            address: address,\n            tokenId: id,\n            chain: chain,\n            name: nftName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        lg: 3,\n        xl: 3,\n        justifyContent: \"flex-start\",\n        style: {\n          position: 'relative'\n        },\n        children: nft && /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n          style: {\n            textAlign: 'center'\n          },\n          className: styles.image,\n          wrapperClassName: styles.lazyloadwrapper,\n          alt: \"\",\n          src: nftImage,\n          placeholder: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: loading_image,\n            alt: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 28\n          }, _this),\n          effect: \"opacity\"\n        }, nft.token_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"column\",\n        alignItems: \"flex-start\",\n        xs: 12,\n        sm: 12,\n        md: 8,\n        lg: 9,\n        xl: 9,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          className: styles.nftNameGeneral,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              style: {\n                fontWeight: 'bolder'\n              },\n              children: nftName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(CustomIconButton, {\n              onClick: function onClick() {\n                return window.location.reload();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.shareIcon,\n                src: \"/collection/DOKOasset_RefreshData.png\",\n                alt: \"back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(PopoverShare, {\n              address: address,\n              tokenId: id,\n              chain: chain,\n              name: nftName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"row\",\n          spacing: 3,\n          justifyContent: \"flex-start\",\n          style: {\n            paddingTop: '1px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: styles.separator,\n            style: {\n              paddingBottom: 0,\n              paddingTop: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              style: {\n                fontWeight: 'bolder'\n              },\n              children: \"Creator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, _this), creator ? /*#__PURE__*/_jsxDEV(CopyAddress, {\n              address: creator,\n              hasLink: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, _this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              paddingBottom: 0,\n              paddingTop: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              style: {\n                fontWeight: 'bolder'\n              },\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CopyAddress, {\n              address: owner,\n              hasLink: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"column\",\n          spacing: 0,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                fontWeight: 'bolder'\n              },\n              children: \"Last Purchase Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, _this), lastSale ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                padding: 0,\n                verticalAlign: 'baseline'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.networkIconMedium,\n                src: \"/collection/DOKOasset_EthereumBlue.png\",\n                alt: \"eth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              display: \"inline\",\n              className: \"bolder\",\n              style: {\n                marginRight: '4px'\n              },\n              children: lastSale\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              display: \"inline\",\n              children: \"(US \".concat(lastSaleUSD, \")\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              marginTop: '.5em'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                fontWeight: 'bolder'\n              },\n              children: \"Floor Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, _this), floorPrice ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                padding: 0,\n                verticalAlign: 'baseline'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.networkIconMedium,\n                src: \"/collection/DOKOasset_EthereumBlue.png\",\n                alt: \"eth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              display: \"inline\",\n              className: \"bolder\",\n              style: {\n                marginRight: '4px'\n              },\n              children: parseFloat(\"\".concat(floorPrice)).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, _this), chain === 'eth' ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              marginTop: '.9em'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                textDecoration: 'none'\n              },\n              target: \"_blank\",\n              href: \"https://opensea.io/assets/\".concat(address, \"/\").concat(id),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: styles.profileButton,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  width: 16,\n                  src: opensea_icon,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginLeft: 12,\n                    color: 'white'\n                  },\n                  children: \"View on Opensea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, _this) : chain === 'solana' ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              marginTop: '.9em'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                textDecoration: 'none'\n              },\n              target: \"_blank\",\n              href: \"https://solsea.io/nft/\".concat(id),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: styles.profileButton,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  width: 16,\n                  src: solsea_icon,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginLeft: 12,\n                    color: 'white'\n                  },\n                  children: \"View on Solsea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, _this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          wrap: \"nowrap\",\n          justifyContent: \"flex-start\",\n          spacing: 5,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            xs: 6,\n            direction: \"column\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: nftDesc || /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 57\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: \"Collection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 17\n              }, _this), chain === 'eth' ? /*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  textDecoration: 'none',\n                  color: '#61dafb'\n                },\n                href: \"\".concat(window.origin, \"/collections/\").concat(address),\n                children: collection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, _this) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: collection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            direction: \"column\",\n            xs: 6,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: \"Contract Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: \"Blockchain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: chainMapping(chain)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: \"Token ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            style: {\n              fontWeight: 'bolder',\n              marginBottom: '0.6em'\n            },\n            children: \"Traits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, _this), traits && traits.length ? chain === 'solana' ? /*#__PURE__*/_jsxDEV(SolanaNftTraits, {\n            traits: traits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(NftTraits, {\n            traits: traits,\n            totalSupply: totalSupply\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: styles.bolder,\n              style: {\n                marginBottom: '0.6em'\n              },\n              children: \"Transaction History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                \"aria-label\": \"customized table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  style: {\n                    backgroundColor: '#333333'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                      children: \"Event\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                      children: \"Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                      children: \"From\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                      children: \"To\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: txs.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (tx, i) {\n                    var icon = getCurrencyIcon(chain);\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                        children: tx.event\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 628,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                        children: tx.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                            className: styles.networkIcon,\n                            src: icon,\n                            alt: chain\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 632,\n                            columnNumber: 35\n                          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: tx.price\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 633,\n                            columnNumber: 35\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 631,\n                          columnNumber: 33\n                        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: tx.price\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 637,\n                            columnNumber: 35\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 636,\n                          columnNumber: 33\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                        children: tx.from\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 641,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                        children: tx.to\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 642,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                        children: tx.date\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 643,\n                        columnNumber: 29\n                      }, _this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 27\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10, 25],\n              component: \"div\",\n              count: txs.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage,\n              style: {\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(NftIndividual, \"tMGB5iVI2zpZdtoEc6vPYiWAY8k=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = NftIndividual;\nexport default NftIndividual;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftIndividual\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/modules/nft-individual/index.tsx"],"names":["useEffect","useState","Button","Grid","IconButton","Link","makeStyles","Table","TablePagination","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","withStyles","LazyLoadImage","useParams","eth","bsc","solana","Moralis","fetchOpenSeaEvents","fetchNFTOpensea","NftTraits","SolanaNftTraits","CopyAddress","PopoverShare","web3","normalizeImageURL","chainMapping","formatTx","getTotalSupply","getNFT","fetchOpenseaLastSale","getTokenInfo","getSolanaNFTMetadata","getTokenOwner","opensea_icon","solsea_icon","loading_image","Meta","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","textAlign","body","fontSize","CustomIconButton","root","padding","marginRight","useStyles","collectionContainer","marginTop","marginBottom","breakpoints","down","flexDirection","nftNameMobile","display","nftNameGeneral","lazyloadwrapper","up","position","left","image","borderRadius","border","maxHeight","minHeight","maxWidth","width","height","separator","borderRightColor","bolder","fontWeight","shareIcon","hight","networkIcon","networkIconMedium","profileButton","background","NftIndividual","styles","address","id","chain","nft","setNFT","lastSale","setLastSale","lastSaleUSD","setLastSaleUSD","floorPrice","setFloorPrice","owner","setOwner","creator","setCreator","nftName","setNftName","nftImage","setNftImage","nftDesc","setNftDesc","txs","setTxs","collection","setCollection","traits","setTraits","totalSupply","setTotalSupply","page","setPage","rowsPerPage","setRowsPerPage","getCurrencyIcon","_chain","icon","fetchNFT","res","metadataRes","tokenOwner","_nft","data","_metadata","metadata","creators","name","description","symbol","_traits","attributes","owner_of","token_id","image_url","asset_contract","length","console","log","fetchTxs","_address","_id","offset","limit","formatted_txs","options","Web3API","token","getWalletTokenIdTransfers","transfers","result","map","transfer","event","to","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","fetchPrice","addr","tokenId","isLastSale","last_sale","total_price","lastsale","utils","fromWei","usdRate","payment_token","usd_price","usdAmount","Number","parseFloat","toString","toFixed","_floorPrice","stats","floor_price","error","_getTotalSupply","tsupply","window","location","reload","paddingTop","paddingBottom","verticalAlign","textDecoration","marginLeft","origin","slice","tx","i","price","from","date"],"mappings":"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","sourcesContent":["import { ChangeEvent, useEffect, useState } from 'react';\nimport {\n  Button,\n  Grid,\n  IconButton,\n  Link,\n  makeStyles,\n  Table,\n  TablePagination,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  withStyles,\n} from '@material-ui/core';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { useParams } from 'react-router-dom';\nimport eth from 'cryptocurrency-icons/32/white/eth.png';\nimport bsc from 'cryptocurrency-icons/32/white/bnb.png';\nimport solana from 'cryptocurrency-icons/32/white/sol.png';\n\nimport Moralis from '../../libs/moralis';\nimport { fetchOpenSeaEvents, fetchNFTOpensea } from './api';\nimport { NftTraits } from './traits';\nimport { SolanaNftTraits } from './solanaTraits';\nimport { CopyAddress } from './CopyAddress';\nimport { PopoverShare } from '../../components/PopoverShare';\nimport { web3 } from '../../libs/web3';\nimport { normalizeImageURL, chainMapping, formatTx, getTotalSupply } from '../../libs/utils';\nimport { getNFT, fetchOpenseaLastSale } from '../api';\nimport { getTokenInfo, getSolanaNFTMetadata, getTokenOwner } from '../../libs/metaplex/utils';\nimport opensea_icon from '../../assets/opensea-transparent.png';\nimport solsea_icon from '../../assets/solsea-transparent.png';\nimport loading_image from '../../assets/loading.gif';\nimport { Meta } from '../../components';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#333333',\n    color: theme.palette.common.white,\n    textAlign: 'center',\n  },\n  body: {\n    fontSize: 14,\n    color: theme.palette.common.white,\n    textAlign: 'center',\n  },\n}))(TableCell);\n\nconst CustomIconButton = withStyles({\n  root: {\n    padding: '1px',\n    marginRight: 24,\n  },\n})(IconButton);\n\nconst useStyles = makeStyles((theme) => ({\n  collectionContainer: {\n    padding: 24,\n    marginTop: 36,\n    marginBottom: 36,\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n      marginTop: 0,\n    },\n    minHeight: 'calc(100vh)',\n  },\n  nftNameMobile: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      textAlign: 'center',\n    },\n    display: 'none',\n  },\n  nftNameGeneral: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n      textAlign: 'left',\n    },\n    display: 'flex',\n  },\n  lazyloadwrapper: {\n    [theme.breakpoints.up('md')]: {\n      position: 'fixed',\n      left: 0,\n    },\n    textAlign: 'center',\n    width: 'inherit',\n    maxWidth: 'inherit',\n  },\n  image: {\n    borderRadius: 12,\n    border: '3px solid white',\n    maxHeight: 400,\n    minHeight: 200,\n    maxWidth: '80%',\n    '& > svg': {\n      width: '100%',\n      height: 'auto',\n    },\n  },\n  separator: {\n    border: '1px solid transparent',\n    borderRightColor: '#333333',\n  },\n  bolder: {\n    fontWeight: 'bolder',\n  },\n  shareIcon: {\n    width: 36,\n    hight: 36,\n  },\n  networkIcon: {\n    width: 12,\n    height: 12,\n    marginRight: 3,\n  },\n  networkIconMedium: {\n    height: 18,\n    marginRight: 3,\n  },\n  profileButton: {\n    background: `linear-gradient(\n      -45deg,\n      #ff06d7 0%,\n      #ff06d7 30%,\n      rgba(80, 92, 176, 1) 50%,\n      #00ffef 80%,\n      #00ffef 100%\n    )`,\n    padding: '8px 20px',\n    width: 200,\n    fontWeight: 'bold',\n  },\n}));\n\nexport const NftIndividual = () => {\n  const styles = useStyles();\n  const { address, id, chain } = useParams<{ address: string; id: string; chain: string }>();\n  const [nft, setNFT] = useState<any>();\n  const [lastSale, setLastSale] = useState<number>();\n  const [lastSaleUSD, setLastSaleUSD] = useState<number>();\n  const [floorPrice, setFloorPrice] = useState<number>();\n  const [owner, setOwner] = useState<string>('');\n  const [creator, setCreator] = useState<string>('');\n  const [nftName, setNftName] = useState<string>('');\n  const [nftImage, setNftImage] = useState<string>('');\n  const [nftDesc, setNftDesc] = useState<string>('');\n  const [txs, setTxs] = useState<any[]>([]);\n  const [collection, setCollection] = useState<string>('');\n  const [traits, setTraits] = useState<any[]>([]);\n  const [totalSupply, setTotalSupply] = useState<number>();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const getCurrencyIcon = (_chain: string) => {\n    let icon;\n    switch (_chain) {\n      case 'polygon': {\n        icon = eth;\n        break;\n      }\n      case 'eth': {\n        icon = eth;\n        break;\n      }\n      case 'bsc': {\n        icon = bsc;\n        break;\n      }\n      case 'solana': {\n        icon = solana;\n        break;\n      }\n      default:\n        break;\n    }\n    return icon;\n  };\n\n  const fetchNFT = async () => {\n    if (!address || !id) {\n      return;\n    }\n\n    try {\n      let _nft;\n      let _metadata;\n      if (chain === 'solana') {\n        const res: any = await getTokenInfo(id);\n        const metadataRes: any = await getSolanaNFTMetadata(res);\n        const tokenOwner: any = await getTokenOwner(id);\n        _nft = res.data;\n        _metadata = metadataRes.metadata.data;\n        if (_nft.creators) {\n          setCreator(_nft.creators[0].address);\n        }\n        setNFT(_nft);\n        setOwner(tokenOwner);\n        setNftName(_nft.name);\n        setNftImage(_metadata.image);\n        setNftDesc(_metadata.description);\n        setCollection(_metadata.symbol);\n        const _traits = 'attributes' in _metadata ? _metadata.attributes : [];\n        setTraits(_traits);\n      } else if (chain !== 'eth') {\n        const res = await getNFT(address, id);\n        _nft = res.data;\n        setNFT(_nft);\n        setOwner(_nft.owner_of);\n        setNftName(_nft.metadata.name ? _nft.metadata.name : `${_nft.name} # ${_nft.token_id}`);\n        setNftImage(normalizeImageURL(_nft).metadata.image);\n        setNftDesc(_nft.metadata.description);\n        setCollection(_nft.name);\n        const _traits =\n          'metadata' in _nft && 'attributes' in _nft.metadata ? _nft.metadata.attributes : [];\n        setTraits(_traits);\n      } else {\n        const res = await fetchNFTOpensea(address, id);\n        _nft = res.data;\n        setNFT(_nft);\n        setOwner(_nft.owner.address);\n        setNftName(_nft.name ? _nft.name : 'N/A');\n        setNftImage(_nft.image_url);\n        setNftDesc(_nft.description);\n        setCollection(_nft.asset_contract.name);\n        const _traits = res.data.traits && res.data.traits.length ? res.data.traits : [];\n        setTraits(_traits);\n      }\n    } catch (err) {\n      if (err) console.log(err);\n    }\n  };\n\n  const fetchTxs = async (\n    _chain: string,\n    _address: string,\n    _id: string,\n    offset: number,\n    limit: number,\n  ) => {\n    let formatted_txs: Array<any> = [];\n    try {\n      if (_chain === 'solana') {\n        return;\n      }\n      if (_chain !== 'eth') {\n        const options: any = { address, token_id: id, chain };\n        const transfers = await (Moralis.Web3API as any).token.getWalletTokenIdTransfers(options);\n        formatted_txs = transfers.result.map((transfer: any) => formatTx(transfer, _chain));\n      } else {\n        formatted_txs = await fetchOpenSeaEvents(address, id, offset, limit, [\n          'created',\n          'successful',\n          'transfer',\n        ]);\n      }\n      setTxs(formatted_txs);\n    } catch (e) {\n      console.log(e);\n      setTxs([]);\n    }\n    if (formatted_txs.length) {\n      if (formatted_txs[formatted_txs.length - 1].event === 'Mint') {\n        setCreator(formatted_txs[formatted_txs.length - 1].to);\n      }\n    } else {\n      setCreator('');\n    }\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const fetchPrice = async (addr: string, tokenId: string) => {\n    if (chain !== 'eth') {\n      setLastSale(0);\n      setLastSaleUSD(0);\n      setFloorPrice(0);\n      return;\n    }\n    try {\n      const res = await fetchOpenseaLastSale(addr, tokenId);\n      const isLastSale = res.data.last_sale && res.data.last_sale.total_price;\n      const lastsale = isLastSale\n        ? +web3.utils.fromWei(res.data.last_sale.total_price, 'ether')\n        : 0;\n      const usdRate = isLastSale ? +res.data.last_sale.payment_token.usd_price : 0;\n      let usdAmount = lastsale * usdRate;\n      usdAmount = +Number.parseFloat(usdAmount.toString()).toFixed(2);\n      const _floorPrice = +res.data.collection.stats.floor_price;\n      setLastSale(lastsale);\n      setLastSaleUSD(usdAmount);\n      setFloorPrice(_floorPrice);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const _getTotalSupply = async (addr: string) => {\n    if (chain !== 'eth') {\n      setTotalSupply(0);\n      return;\n    }\n    try {\n      const tsupply = await getTotalSupply(addr);\n      setTotalSupply(tsupply);\n    } catch (e) {\n      setTotalSupply(0);\n    }\n  };\n\n  useEffect(() => {\n    setNFT([]);\n    fetchNFT();\n    fetchTxs(chain, address, id, 0, 100);\n    fetchPrice(address, id);\n    _getTotalSupply(address);\n  }, [address, id, chain]);\n\n  return (\n    <>\n      {nft && (\n        <Meta\n          title={`${nftName} | DOKO`}\n          description={nftDesc || ''}\n          url=\"https://doko.one\"\n          image={nftImage || ''}\n        />\n      )}\n      <Grid\n        className={styles.collectionContainer}\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        spacing={4}\n      >\n        <Grid\n          item\n          container\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          className={styles.nftNameMobile}\n        >\n          <Grid item>\n            <Typography variant=\"h4\" style={{ fontWeight: 'bolder' }}>\n              {nftName}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <CustomIconButton onClick={() => window.location.reload()}>\n              <img\n                className={styles.shareIcon}\n                src=\"/collection/DOKOasset_RefreshData.png\"\n                alt=\"back\"\n              />\n            </CustomIconButton>\n            <PopoverShare address={address} tokenId={id} chain={chain} name={nftName} />\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          sm={12}\n          md={4}\n          lg={3}\n          xl={3}\n          justifyContent=\"flex-start\"\n          style={{ position: 'relative' }}\n        >\n          {nft && (\n            <LazyLoadImage\n              style={{ textAlign: 'center' }}\n              key={nft.token_id}\n              className={styles.image}\n              wrapperClassName={styles.lazyloadwrapper}\n              alt=\"\"\n              src={nftImage}\n              placeholder={<img src={loading_image} alt=\"Loading\" />}\n              effect=\"opacity\"\n            />\n          )}\n        </Grid>\n        <Grid\n          item\n          container\n          direction=\"column\"\n          alignItems=\"flex-start\"\n          xs={12}\n          sm={12}\n          md={8}\n          lg={9}\n          xl={9}\n          spacing={5}\n        >\n          <Grid\n            item\n            container\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            className={styles.nftNameGeneral}\n          >\n            <Grid item>\n              <Typography variant=\"h4\" style={{ fontWeight: 'bolder' }}>\n                {nftName}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <CustomIconButton onClick={() => window.location.reload()}>\n                <img\n                  className={styles.shareIcon}\n                  src=\"/collection/DOKOasset_RefreshData.png\"\n                  alt=\"back\"\n                />\n              </CustomIconButton>\n              <PopoverShare address={address} tokenId={id} chain={chain} name={nftName} />\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            container\n            direction=\"row\"\n            spacing={3}\n            justifyContent=\"flex-start\"\n            style={{ paddingTop: '1px' }}\n          >\n            <Grid item className={styles.separator} style={{ paddingBottom: 0, paddingTop: 0 }}>\n              <Typography variant=\"body1\" style={{ fontWeight: 'bolder' }}>\n                Creator\n              </Typography>\n              {creator ? (\n                <CopyAddress address={creator} hasLink={false} />\n              ) : (\n                <Typography variant=\"body1\">N/A</Typography>\n              )}\n            </Grid>\n            <Grid item style={{ paddingBottom: 0, paddingTop: 0 }}>\n              <Typography variant=\"body1\" style={{ fontWeight: 'bolder' }}>\n                Owner\n              </Typography>\n              <CopyAddress address={owner} hasLink />\n            </Grid>\n          </Grid>\n          <Grid item container direction=\"column\" spacing={0}>\n            <Grid item>\n              <Typography variant=\"h6\" style={{ fontWeight: 'bolder' }}>\n                Last Purchase Price\n              </Typography>\n            </Grid>\n            {lastSale ? (\n              <Grid item>\n                <IconButton style={{ padding: 0, verticalAlign: 'baseline' }}>\n                  <img\n                    className={styles.networkIconMedium}\n                    src=\"/collection/DOKOasset_EthereumBlue.png\"\n                    alt=\"eth\"\n                  />\n                </IconButton>\n                <Typography\n                  variant=\"h5\"\n                  display=\"inline\"\n                  className=\"bolder\"\n                  style={{ marginRight: '4px' }}\n                >\n                  {lastSale}\n                </Typography>\n                <Typography variant=\"body1\" display=\"inline\">\n                  {`(US ${lastSaleUSD})`}\n                </Typography>\n              </Grid>\n            ) : (\n              <Grid item>\n                <Typography variant=\"body1\">N/A</Typography>\n              </Grid>\n            )}\n            <Grid item style={{ marginTop: '.5em' }}>\n              <Typography variant=\"h6\" style={{ fontWeight: 'bolder' }}>\n                Floor Price\n              </Typography>\n            </Grid>\n            {floorPrice ? (\n              <Grid item>\n                <IconButton style={{ padding: 0, verticalAlign: 'baseline' }}>\n                  <img\n                    className={styles.networkIconMedium}\n                    src=\"/collection/DOKOasset_EthereumBlue.png\"\n                    alt=\"eth\"\n                  />\n                </IconButton>\n                <Typography\n                  variant=\"h5\"\n                  display=\"inline\"\n                  className=\"bolder\"\n                  style={{ marginRight: '4px' }}\n                >\n                  {parseFloat(`${floorPrice}`).toFixed(2)}\n                </Typography>\n              </Grid>\n            ) : (\n              <Grid item>\n                <Typography variant=\"body1\">N/A</Typography>\n              </Grid>\n            )}\n            {chain === 'eth' ? (\n              <Grid item style={{ marginTop: '.9em' }}>\n                <Link\n                  style={{ textDecoration: 'none' }}\n                  target=\"_blank\"\n                  href={`https://opensea.io/assets/${address}/${id}`}\n                >\n                  <Button className={styles.profileButton}>\n                    <img width={16} src={opensea_icon} alt=\"\" />\n                    <span style={{ marginLeft: 12, color: 'white' }}>View on Opensea</span>\n                  </Button>\n                </Link>\n              </Grid>\n            ) : chain === 'solana' ? (\n              <Grid item style={{ marginTop: '.9em' }}>\n                <Link\n                  style={{ textDecoration: 'none' }}\n                  target=\"_blank\"\n                  href={`https://solsea.io/nft/${id}`}\n                >\n                  <Button className={styles.profileButton}>\n                    <img width={16} src={solsea_icon} alt=\"\" />\n                    <span style={{ marginLeft: 12, color: 'white' }}>View on Solsea</span>\n                  </Button>\n                </Link>\n              </Grid>\n            ) : (\n              ''\n            )}\n          </Grid>\n\n          <Grid item container wrap=\"nowrap\" justifyContent=\"flex-start\" spacing={5}>\n            <Grid item container xs={6} direction=\"column\" spacing={1}>\n              <Grid item>\n                <Typography variant=\"h5\" style={{ fontWeight: 'bolder' }}>\n                  Description\n                </Typography>\n                <Typography variant=\"body1\">{nftDesc || <span>N/A</span>}</Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h5\" style={{ fontWeight: 'bolder' }}>\n                  Collection\n                </Typography>\n                {chain === 'eth' ? (\n                  <Link\n                    style={{ textDecoration: 'none', color: '#61dafb' }}\n                    href={`${window.origin}/collections/${address}`}\n                  >\n                    {collection}\n                  </Link>\n                ) : (\n                  <Typography variant=\"body1\">{collection}</Typography>\n                )}\n              </Grid>\n            </Grid>\n            <Grid item container direction=\"column\" xs={6} spacing={1}>\n              <Grid item>\n                <Typography variant=\"h5\" style={{ fontWeight: 'bolder' }}>\n                  Contract Address\n                </Typography>\n                <Typography variant=\"body1\">{address}</Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h5\" style={{ fontWeight: 'bolder' }}>\n                  Blockchain\n                </Typography>\n                <Typography variant=\"body1\">{chainMapping(chain)}</Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h5\" style={{ fontWeight: 'bolder' }}>\n                  Token ID\n                </Typography>\n                <Typography variant=\"body1\">{id}</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item container direction=\"column\">\n            <Typography variant=\"h5\" style={{ fontWeight: 'bolder', marginBottom: '0.6em' }}>\n              Traits\n            </Typography>\n            {traits && traits.length ? (\n              chain === 'solana' ? (\n                <SolanaNftTraits traits={traits} />\n              ) : (\n                <NftTraits traits={traits} totalSupply={totalSupply} />\n              )\n            ) : (\n              <Typography variant=\"body1\">N/A</Typography>\n            )}\n          </Grid>\n          <Grid container item direction=\"column\">\n            <Grid item>\n              <Typography variant=\"h5\" className={styles.bolder} style={{ marginBottom: '0.6em' }}>\n                Transaction History\n              </Typography>\n            </Grid>\n            <Grid item>\n              <TableContainer>\n                <Table aria-label=\"customized table\">\n                  <TableHead style={{ backgroundColor: '#333333' }}>\n                    <TableRow>\n                      <StyledTableCell>Event</StyledTableCell>\n                      <StyledTableCell>Price</StyledTableCell>\n                      <StyledTableCell>From</StyledTableCell>\n                      <StyledTableCell>To</StyledTableCell>\n                      <StyledTableCell>Date</StyledTableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {txs\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                      .map((tx, i) => {\n                        const icon = getCurrencyIcon(chain);\n                        return (\n                          <TableRow key={i}>\n                            <StyledTableCell>{tx.event}</StyledTableCell>\n                            <StyledTableCell>\n                              {tx.price ? (\n                                <div>\n                                  <img className={styles.networkIcon} src={icon} alt={chain} />\n                                  <span>{tx.price}</span>\n                                </div>\n                              ) : (\n                                <div>\n                                  <span>{tx.price}</span>\n                                </div>\n                              )}\n                            </StyledTableCell>\n                            <StyledTableCell>{tx.from}</StyledTableCell>\n                            <StyledTableCell>{tx.to}</StyledTableCell>\n                            <StyledTableCell>{tx.date}</StyledTableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={txs.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n                style={{ color: 'white' }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default NftIndividual;\n"]},"metadata":{},"sourceType":"module"}