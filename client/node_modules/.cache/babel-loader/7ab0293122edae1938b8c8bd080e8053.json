{"ast":null,"code":"import _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/components/NFTItem.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { memo, useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport { Box, Card, CardActions, CardContent, Grid, IconButton, makeStyles, Menu, MenuItem, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport eth from './assets/eth.png';\nimport bsc from './assets/bsc.png';\nimport polygon from './assets/polygon.png';\nimport solana from './assets/solana.png';\nimport facebook from './assets/facebook.png';\nimport twitter from './assets/twitter.png';\nimport NoImage from './assets/NoImage.png';\nimport loading from './assets/loading.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var NFTItem = /*#__PURE__*/memo(_c = _s(function (_ref) {\n  var _nft$metadata, _nft$metadata$image, _nft$metadata2;\n\n  _s();\n\n  var nft = _ref.nft;\n  var history = useHistory();\n\n  if (nft.metadata && !nft.metadata.image && nft.metadata.image_data) {\n    nft.metadata.image = nft.metadata.image_data;\n  }\n\n  if (((_nft$metadata = nft.metadata) === null || _nft$metadata === void 0 ? void 0 : (_nft$metadata$image = _nft$metadata.image) === null || _nft$metadata$image === void 0 ? void 0 : _nft$metadata$image.indexOf('ipfs')) === 0) {\n    nft.metadata.image = \"https://ipfs.io/\".concat(nft.metadata.image.replace('ipfs/', '').replace('ipfs://', 'ipfs/'));\n  }\n\n  var styles = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      shareActive = _useState2[0],\n      setShareActive = _useState2[1];\n\n  var nftPath = \"/nft/\".concat(nft.chain, \"/\").concat(nft.token_address, \"/\").concat(nft.token_id);\n\n  var share = function share(e, type) {\n    e.stopPropagation();\n    var name = (nft.metadata.name || \"\".concat(nft.name, \" \").concat(nft.token_id)).replace('#', '');\n    var url = \"\".concat(window.origin).concat(nftPath);\n    var link = {\n      facebook: \"https://www.facebook.com/sharer/sharer.php?u=\".concat(url, \"&quote=Check out \").concat(name, \" on DOKO now!\"),\n      twitter: \"https://twitter.com/intent/tweet?url=\".concat(url, \"&text=Check out \").concat(name, \" on @doko_nft now!\"),\n      instagram: ''\n    };\n    window.open(link[type], '_blank');\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var onClickCard = function onClickCard() {\n    history.push(nftPath);\n  };\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      anchorEl = _useState6[0],\n      setAnchorEl = _useState6[1];\n\n  var handleClick = function handleClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose(e) {\n    e.stopPropagation();\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    onClick: function onClick() {\n      return onClickCard();\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: styles.cardContent,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          style: {\n            flex: 1\n          },\n          children: nft.metadata.image && !error ? nft.metadata.image.indexOf('<svg') === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            dangerouslySetInnerHTML: {\n              __html: nft.metadata.image\n            },\n            className: styles.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n            width: \"100%\",\n            alt: \"\",\n            src: nft.metadata.image,\n            className: styles.image,\n            placeholder: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: loading,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 32\n            }, _this),\n            effect: \"opacity\",\n            onError: function onError() {\n              return setError(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            style: {\n              flex: 1\n            },\n            className: styles.image,\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              width: 60,\n              src: NoImage,\n              style: {\n                marginBottom: 24\n              },\n              alt: \"Not Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, _this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: styles.notAvailableText,\n                gutterBottom: true,\n                variant: \"h5\",\n                children: \"Sorry!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: styles.notAvailableText,\n                children: \"Image unavailable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: styles.notAvailableText,\n                children: \"due to host error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, _this) : /*#__PURE__*/_jsxDEV(Typography, {\n              className: styles.notAvailableText,\n              children: \"The NFT doesn not have an image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"space-between\",\n        wrap: \"nowrap\",\n        style: {\n          height: 88\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          px: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: styles.nftName,\n            variant: \"caption\",\n            children: ((_nft$metadata2 = nft.metadata) === null || _nft$metadata2 === void 0 ? void 0 : _nft$metadata2.name) || nft.name || '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: styles.cardActions,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.networkIcon,\n            width: \"12px\",\n            src: {\n              eth: eth,\n              bsc: bsc,\n              polygon: polygon,\n              solana: solana\n            }[nft.chain],\n            alt: nft.chain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                padding: 6\n              },\n              onMouseEnter: function onMouseEnter() {\n                return setShareActive(true);\n              },\n              onMouseLeave: function onMouseLeave() {\n                return setShareActive(false);\n              },\n              onClick: handleClick,\n              children: shareActive ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.shareIcon,\n                src: \"/icons/active-share.png\",\n                alt: \"share\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, _this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.shareIcon,\n                src: \"/icons/inactive-share.png\",\n                alt: \"share\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Menu, {\n              anchorEl: anchorEl,\n              keepMounted: true,\n              open: Boolean(anchorEl),\n              onClose: handleClose,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                className: styles.shareItem,\n                onClick: function onClick(e) {\n                  return share(e, 'facebook');\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: facebook,\n                  alt: \"facebook\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, _this), \"Share on Facebook\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                className: styles.shareItem,\n                onClick: function onClick(e) {\n                  return share(e, 'twitter');\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: twitter,\n                  alt: \"twitter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, _this), \"Share on Twitter\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, _this);\n}, \"3qH1gXmPFMxcJHscR1dcVxrbYtg=\", false, function () {\n  return [useHistory, useStyles];\n}));\n_c2 = NFTItem;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    wrapper: {\n      height: '100%',\n      borderRadius: 12,\n      backgroundClip: 'padding-box',\n      border: 'solid 3px transparent',\n      position: 'relative',\n      '&:hover': {\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0,\n          background: 'linear-gradient(-45deg, rgba(63,199,203,1) 0%, rgba(63,199,203,1) 30%, rgba(80,92,176,1) 50%, rgba(148,64,161,1) 80%, rgba(226,69,162,1) 100%)',\n          borderRadius: 'inherit',\n          margin: -3,\n          zIndex: -1\n        }\n      }\n    },\n    card: {\n      height: '100%',\n      borderRadius: 12,\n      display: 'flex',\n      flexDirection: 'column',\n      cursor: 'pointer'\n    },\n    cardContent: {\n      padding: 3,\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: 200\n    },\n    cardActions: {\n      justifyContent: 'space-between',\n      alignItems: 'flex-end'\n    },\n    nftName: {\n      fontWeight: 'bold',\n      color: '#333',\n      textOverflow: 'ellipsis',\n      lineHeight: '18px',\n      overflow: 'hidden',\n      display: '-webkit-box',\n      '-webkit-line-clamp': 1,\n      '-webkit-box-orient': 'vertical'\n    },\n    image: {\n      borderRadius: 12,\n      minHeight: 200,\n      maxWidth: '100%',\n      width: '100%',\n      height: 'auto',\n      objectFit: 'contain',\n      '& > svg': {\n        width: 'auto',\n        height: 'auto'\n      }\n    },\n    networkIcon: {\n      width: 10,\n      marginLeft: 8,\n      marginBottom: 8\n    },\n    shareIcon: {\n      width: 20\n    },\n    shareItem: {\n      '&:hover': {\n        background: theme.palette.primary.main,\n        color: 'white'\n      },\n      '& > img': {\n        width: 24,\n        marginRight: 12\n      }\n    },\n    notAvailableText: {\n      color: '#b3b3b3',\n      textAlign: 'center'\n    }\n  };\n});\nexport default NFTItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NFTItem$memo\");\n$RefreshReg$(_c2, \"NFTItem\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/components/NFTItem.tsx"],"names":["memo","useState","LazyLoadImage","Box","Card","CardActions","CardContent","Grid","IconButton","makeStyles","Menu","MenuItem","Typography","useHistory","eth","bsc","polygon","solana","facebook","twitter","NoImage","loading","NFTItem","nft","history","metadata","image","image_data","indexOf","replace","styles","useStyles","shareActive","setShareActive","nftPath","chain","token_address","token_id","share","e","type","stopPropagation","name","url","window","origin","link","instagram","open","error","setError","onClickCard","push","anchorEl","setAnchorEl","handleClick","event","preventDefault","currentTarget","handleClose","wrapper","card","cardContent","flex","__html","marginBottom","notAvailableText","height","nftName","cardActions","networkIcon","padding","shareIcon","Boolean","shareItem","theme","borderRadius","backgroundClip","border","position","content","top","right","bottom","left","background","margin","zIndex","display","flexDirection","cursor","minHeight","justifyContent","alignItems","fontWeight","color","textOverflow","lineHeight","overflow","maxWidth","width","objectFit","marginLeft","palette","primary","main","marginRight","textAlign"],"mappings":"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","sourcesContent":["import { memo, MouseEvent, SyntheticEvent, useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Typography,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport eth from './assets/eth.png';\nimport bsc from './assets/bsc.png';\nimport polygon from './assets/polygon.png';\nimport solana from './assets/solana.png';\nimport facebook from './assets/facebook.png';\nimport twitter from './assets/twitter.png';\nimport NoImage from './assets/NoImage.png';\nimport loading from './assets/loading.gif';\n\ninterface NFTItemProps {\n  nft: any;\n}\n\nexport const NFTItem = memo(({ nft }: NFTItemProps) => {\n  const history = useHistory();\n\n  if (nft.metadata && !nft.metadata.image && nft.metadata.image_data) {\n    nft.metadata.image = nft.metadata.image_data;\n  }\n\n  if (nft.metadata?.image?.indexOf('ipfs') === 0) {\n    nft.metadata.image = `https://ipfs.io/${nft.metadata.image\n      .replace('ipfs/', '')\n      .replace('ipfs://', 'ipfs/')}`;\n  }\n\n  const styles = useStyles();\n  const [shareActive, setShareActive] = useState(false);\n  const nftPath = `/nft/${nft.chain}/${nft.token_address}/${nft.token_id}`;\n\n  const share = (e: MouseEvent<HTMLElement>, type: 'facebook' | 'twitter') => {\n    e.stopPropagation();\n    const name = (nft.metadata.name || `${nft.name} ${nft.token_id}`).replace('#', '');\n\n    const url = `${window.origin}${nftPath}`;\n    const link = {\n      facebook: `https://www.facebook.com/sharer/sharer.php?u=${url}&quote=Check out ${name} on DOKO now!`,\n      twitter: `https://twitter.com/intent/tweet?url=${url}&text=Check out ${name} on @doko_nft now!`,\n      instagram: '',\n    };\n    window.open(link[type], '_blank');\n  };\n  const [error, setError] = useState(false);\n\n  const onClickCard = () => {\n    history.push(nftPath);\n  };\n\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (e: SyntheticEvent) => {\n    e.stopPropagation();\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={styles.wrapper} onClick={() => onClickCard()}>\n      <Card className={styles.card}>\n        <CardContent className={styles.cardContent}>\n          <Grid container alignItems=\"center\" style={{ flex: 1 }}>\n            {nft.metadata.image && !error ? (\n              nft.metadata.image.indexOf('<svg') === 0 ? (\n                <div\n                  style={{ flex: 1 }}\n                  dangerouslySetInnerHTML={{ __html: nft.metadata.image }}\n                  className={styles.image}\n                />\n              ) : (\n                <LazyLoadImage\n                  width=\"100%\"\n                  alt=\"\"\n                  src={nft.metadata.image}\n                  className={styles.image}\n                  placeholder={<img src={loading} alt=\"\" />}\n                  effect=\"opacity\"\n                  onError={() => setError(true)}\n                />\n              )\n            ) : (\n              <Grid\n                container\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                style={{ flex: 1 }}\n                className={styles.image}\n                direction=\"column\"\n              >\n                <img width={60} src={NoImage} style={{ marginBottom: 24 }} alt=\"Not Available\" />\n                {error ? (\n                  <div>\n                    <Typography className={styles.notAvailableText} gutterBottom variant=\"h5\">\n                      Sorry!\n                    </Typography>\n                    <Typography className={styles.notAvailableText}>Image unavailable</Typography>\n                    <Typography className={styles.notAvailableText}>due to host error</Typography>\n                  </div>\n                ) : (\n                  <Typography className={styles.notAvailableText}>\n                    The NFT doesn not have an image\n                  </Typography>\n                )}\n              </Grid>\n            )}\n          </Grid>\n        </CardContent>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"space-between\"\n          wrap=\"nowrap\"\n          style={{ height: 88 }}\n        >\n          <Box px={1}>\n            <Typography className={styles.nftName} variant=\"caption\">\n              {nft.metadata?.name || nft.name || '-'}\n            </Typography>\n          </Box>\n          <CardActions className={styles.cardActions}>\n            <img\n              className={styles.networkIcon}\n              width=\"12px\"\n              src={{ eth, bsc, polygon, solana }[nft.chain as string]}\n              alt={nft.chain}\n            />\n            <div>\n              <IconButton\n                style={{ padding: 6 }}\n                onMouseEnter={() => setShareActive(true)}\n                onMouseLeave={() => setShareActive(false)}\n                onClick={handleClick}\n              >\n                {shareActive ? (\n                  <img className={styles.shareIcon} src=\"/icons/active-share.png\" alt=\"share\" />\n                ) : (\n                  <img className={styles.shareIcon} src=\"/icons/inactive-share.png\" alt=\"share\" />\n                )}\n              </IconButton>\n              <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n                <MenuItem className={styles.shareItem} onClick={(e) => share(e, 'facebook')}>\n                  <img src={facebook} alt=\"facebook\" />\n                  Share on Facebook\n                </MenuItem>\n                <MenuItem className={styles.shareItem} onClick={(e) => share(e, 'twitter')}>\n                  <img src={twitter} alt=\"twitter\" />\n                  Share on Twitter\n                </MenuItem>\n              </Menu>\n            </div>\n          </CardActions>\n        </Grid>\n      </Card>\n    </div>\n  );\n});\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    height: '100%',\n    borderRadius: 12,\n    backgroundClip: 'padding-box',\n    border: 'solid 3px transparent',\n    position: 'relative',\n    '&:hover': {\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        background:\n          'linear-gradient(-45deg, rgba(63,199,203,1) 0%, rgba(63,199,203,1) 30%, rgba(80,92,176,1) 50%, rgba(148,64,161,1) 80%, rgba(226,69,162,1) 100%)',\n        borderRadius: 'inherit',\n        margin: -3,\n        zIndex: -1,\n      },\n    },\n  },\n  card: {\n    height: '100%',\n    borderRadius: 12,\n    display: 'flex',\n    flexDirection: 'column',\n    cursor: 'pointer',\n  },\n  cardContent: {\n    padding: 3,\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 200,\n  },\n  cardActions: {\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n  nftName: {\n    fontWeight: 'bold',\n    color: '#333',\n    textOverflow: 'ellipsis',\n    lineHeight: '18px',\n    overflow: 'hidden',\n    display: '-webkit-box',\n    '-webkit-line-clamp': 1,\n    '-webkit-box-orient': 'vertical',\n  },\n  image: {\n    borderRadius: 12,\n    minHeight: 200,\n    maxWidth: '100%',\n    width: '100%',\n    height: 'auto',\n    objectFit: 'contain',\n    '& > svg': {\n      width: 'auto',\n      height: 'auto',\n    },\n  },\n  networkIcon: {\n    width: 10,\n    marginLeft: 8,\n    marginBottom: 8,\n  },\n  shareIcon: {\n    width: 20,\n  },\n  shareItem: {\n    '&:hover': {\n      background: theme.palette.primary.main,\n      color: 'white',\n    },\n    '& > img': {\n      width: 24,\n      marginRight: 12,\n    },\n  },\n  notAvailableText: {\n    color: '#b3b3b3',\n    textAlign: 'center',\n  },\n}));\n\nexport default NFTItem;\n"]},"metadata":{},"sourceType":"module"}