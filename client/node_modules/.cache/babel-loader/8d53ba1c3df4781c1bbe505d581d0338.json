{"ast":null,"code":"import _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAggregatedSummary } from './useProfileSummaries';\n\nvar useAddressSummaries = function useAddressSummaries() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      addressSummaries = _useState2[0],\n      setAddressSummaries = _useState2[1];\n\n  var addressOwnership = useSelector(function (state) {\n    return state.addressOwnership;\n  });\n  var collectionSummaries = useSelector(function (state) {\n    return state.collectionSummary;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.appState;\n  }),\n      isLoading = _useSelector.isLoading;\n\n  useEffect(function () {\n    setAddressSummaries(getAggregatedSummary(collectionSummaries, addressOwnership.assets, isLoading));\n  }, [collectionSummaries, addressOwnership, isLoading]);\n  return addressSummaries;\n};\n\n_s(useAddressSummaries, \"LUJJyJkuq6hpbUUnPcrefxUJJ3k=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\nexport default useAddressSummaries;","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/hooks/useAddressSummaries.ts"],"names":["useEffect","useState","useSelector","getAggregatedSummary","useAddressSummaries","addressSummaries","setAddressSummaries","addressOwnership","state","collectionSummaries","collectionSummary","appState","isLoading","assets"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAA4BC,oBAA5B,QAAwD,uBAAxD;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAAA;;AAChC,kBAAgDH,QAAQ,CAAsB,EAAtB,CAAxD;AAAA;AAAA,MAAOI,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,MAAMC,gBAAgB,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAsBA,KAAK,CAACD,gBAA5B;AAAA,GAAD,CAApC;AAEA,MAAME,mBAAmB,GAAGP,WAAW,CAAC,UAACM,KAAD;AAAA,WAAsBA,KAAK,CAACE,iBAA5B;AAAA,GAAD,CAAvC;;AAEA,qBAAsBR,WAAW,CAAC,UAACM,KAAD;AAAA,WAAsBA,KAAK,CAACG,QAA5B;AAAA,GAAD,CAAjC;AAAA,MAAQC,SAAR,gBAAQA,SAAR;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,mBAAmB,CACjBH,oBAAoB,CAACM,mBAAD,EAAsBF,gBAAgB,CAACM,MAAvC,EAA+CD,SAA/C,CADH,CAAnB;AAGD,GAJQ,EAIN,CAACH,mBAAD,EAAsBF,gBAAtB,EAAwCK,SAAxC,CAJM,CAAT;AAMA,SAAOP,gBAAP;AACD,CAhBD;;GAAMD,mB;UAGqBF,W,EAEGA,W,EAENA,W;;;AAWxB,eAAeE,mBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store/store';\nimport { AggregatedSummary, getAggregatedSummary } from './useProfileSummaries';\n\nconst useAddressSummaries = () => {\n  const [addressSummaries, setAddressSummaries] = useState<AggregatedSummary[]>([]);\n\n  const addressOwnership = useSelector((state: RootState) => state.addressOwnership);\n\n  const collectionSummaries = useSelector((state: RootState) => state.collectionSummary);\n\n  const { isLoading } = useSelector((state: RootState) => state.appState);\n\n  useEffect(() => {\n    setAddressSummaries(\n      getAggregatedSummary(collectionSummaries, addressOwnership.assets, isLoading),\n    );\n  }, [collectionSummaries, addressOwnership, isLoading]);\n\n  return addressSummaries;\n};\n\nexport default useAddressSummaries;\n"]},"metadata":{},"sourceType":"module"}