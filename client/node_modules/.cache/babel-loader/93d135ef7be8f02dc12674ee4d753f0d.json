{"ast":null,"code":"import _defineProperty from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/components/NftPagination.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { CircularProgress, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\nimport { SolanaNFTItem } from './SolanaNFTItem';\nimport { OpenseaNFTItem } from './OpenseaNFTItem';\nimport { LightButton } from './LightButton';\nimport { NFTItem } from './NFTItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  var _nftsContainer;\n\n  return {\n    nftsContainer: (_nftsContainer = {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(4, 1fr)',\n      gridAutoRows: '1fr',\n      columnGap: 12,\n      rowGap: 12\n    }, _defineProperty(_nftsContainer, theme.breakpoints.down('md'), {\n      gridTemplateColumns: 'repeat(4, 1fr)'\n    }), _defineProperty(_nftsContainer, theme.breakpoints.down('sm'), {\n      gridTemplateColumns: 'repeat(4, 1fr)'\n    }), _defineProperty(_nftsContainer, theme.breakpoints.down(630), {\n      gridTemplateColumns: 'repeat(2, 1fr)'\n    }), _defineProperty(_nftsContainer, theme.breakpoints.down('xs'), {\n      gridTemplateColumns: 'repeat(2, 1fr)'\n    }), _nftsContainer)\n  };\n});\nexport var NftPagination = function NftPagination(_ref) {\n  _s();\n\n  var nfts = _ref.nfts,\n      page = _ref.page,\n      total = _ref.total,\n      _ref$onNext = _ref.onNext,\n      onNext = _ref$onNext === void 0 ? function () {\n    return null;\n  } : _ref$onNext,\n      _ref$onPrev = _ref.onPrev,\n      onPrev = _ref$onPrev === void 0 ? function () {\n    return null;\n  } : _ref$onPrev,\n      _ref$isOpenSea = _ref.isOpenSea,\n      isOpenSea = _ref$isOpenSea === void 0 ? false : _ref$isOpenSea,\n      _ref$isSolana = _ref.isSolana,\n      isSolana = _ref$isSolana === void 0 ? false : _ref$isSolana,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      maxPage = _ref.maxPage;\n  var styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftsContainer,\n      children: isSolana ? nfts.map(function (nft) {\n        return /*#__PURE__*/_jsxDEV(SolanaNFTItem, {\n          nft: nft\n        }, nft.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 31\n        }, _this);\n      }) : !isOpenSea && (nfts === null || nfts === void 0 ? void 0 : nfts.length) ? nfts.map(function (nft) {\n        return /*#__PURE__*/_jsxDEV(NFTItem, {\n          nft: nft\n        }, nft.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 31\n        }, _this);\n      }) : nfts.map(function (nft) {\n        return /*#__PURE__*/_jsxDEV(OpenseaNFTItem, {\n          nft: nft\n        }, nft.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 31\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, _this), !loading && (!page || page <= 1) && (!nfts || nfts.length === 0) ? /*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        marginLeft: 24\n      },\n      children: \"No Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(LightButton, {\n          onClick: onPrev,\n          disabled: loading || !page || page <= 1,\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, _this), \"Previous\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          color: 'white'\n        },\n        children: total != null ? \"\".concat(page, \" of \").concat(total) : page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(LightButton, {\n          onClick: onNext,\n          disabled: loading || !page || page === maxPage,\n          children: [\"Next\", /*#__PURE__*/_jsxDEV(ArrowRight, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NftPagination, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c = NftPagination;\nexport default NftPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftPagination\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/components/NftPagination.tsx"],"names":["CircularProgress","Grid","makeStyles","Typography","ArrowLeft","ArrowRight","SolanaNFTItem","OpenseaNFTItem","LightButton","NFTItem","useStyles","theme","nftsContainer","display","gridTemplateColumns","gridAutoRows","columnGap","rowGap","breakpoints","down","NftPagination","nfts","page","total","onNext","onPrev","isOpenSea","isSolana","loading","maxPage","styles","map","nft","id","length","marginLeft","marginTop","color"],"mappings":"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","sourcesContent":["import { CircularProgress, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\nimport { SolanaNFTItem } from './SolanaNFTItem';\nimport { OpenseaNFTItem } from './OpenseaNFTItem';\nimport { LightButton } from './LightButton';\nimport { NFTItem } from './NFTItem';\nimport { Asset } from '../store/meta-nft-collections';\n\ninterface Props {\n  nfts: (Asset & { floorPrice: number })[];\n  total?: number;\n  page?: number;\n  onNext?: () => void;\n  onPrev?: () => void;\n  isOpenSea?: boolean;\n  isSolana?: boolean;\n  loading?: boolean;\n  maxPage?: number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  nftsContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(4, 1fr)',\n    gridAutoRows: '1fr',\n    columnGap: 12,\n    rowGap: 12,\n    [theme.breakpoints.down('md')]: {\n      gridTemplateColumns: 'repeat(4, 1fr)',\n    },\n    [theme.breakpoints.down('sm')]: {\n      gridTemplateColumns: 'repeat(4, 1fr)',\n    },\n    [theme.breakpoints.down(630)]: {\n      gridTemplateColumns: 'repeat(2, 1fr)',\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridTemplateColumns: 'repeat(2, 1fr)',\n    },\n  },\n}));\n\nexport const NftPagination = ({\n  nfts,\n  page,\n  total,\n  onNext = () => null,\n  onPrev = () => null,\n  isOpenSea = false,\n  isSolana = false,\n  loading = false,\n  maxPage,\n}: Props) => {\n  const styles = useStyles();\n\n  return (\n    <div>\n      <div className={styles.nftsContainer}>\n        {isSolana\n          ? nfts.map((nft) => <SolanaNFTItem key={nft.id} nft={nft} />)\n          : !isOpenSea && nfts?.length\n          ? nfts.map((nft) => <NFTItem key={nft.id} nft={nft} />)\n          : nfts.map((nft) => <OpenseaNFTItem nft={nft} key={nft.id} />)}\n      </div>\n      {loading && <CircularProgress />}\n      {!loading && (!page || page <= 1) && (!nfts || nfts.length === 0) ? (\n        <Typography style={{ marginLeft: 24 }}>No Items</Typography>\n      ) : (\n        <Grid container justifyContent=\"space-between\" style={{ marginTop: 20 }}>\n          <Grid item>\n            <LightButton onClick={onPrev} disabled={loading || !page || page <= 1}>\n              <ArrowLeft color=\"secondary\" />\n              Previous\n            </LightButton>\n          </Grid>\n\n          <Grid item style={{ color: 'white' }}>\n            {total != null ? `${page} of ${total}` : page}\n          </Grid>\n\n          <Grid item>\n            <LightButton onClick={onNext} disabled={loading || !page || page === maxPage}>\n              Next\n              <ArrowRight color=\"secondary\" />\n            </LightButton>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default NftPagination;\n"]},"metadata":{},"sourceType":"module"}