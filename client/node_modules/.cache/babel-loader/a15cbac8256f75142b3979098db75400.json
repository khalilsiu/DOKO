{"ast":null,"code":"var _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/components/maps/CryptovoxelsMap.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\nimport { MapStyles } from './constants';\nimport useRenderMaps from '../../hooks/useRenderMaps';\nimport RenderAssets from './RenderMarkers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function () {\n  return MapStyles;\n});\nvar MapName = 'Cryptovoxels';\n\nvar CryptovoxelsMap = function CryptovoxelsMap(_ref) {\n  _s();\n\n  var selected = _ref.selected,\n      assets = _ref.assets;\n  var smOrAbove = useMediaQuery(function (theme) {\n    return theme.breakpoints.up('sm');\n  });\n  var styles = useStyles({\n    smOrAbove: smOrAbove\n  });\n\n  var _useRenderMaps = useRenderMaps({\n    items: assets,\n    selected: selected,\n    center: [0, 0]\n  }),\n      position = _useRenderMaps.position,\n      markerRefs = _useRenderMaps.markerRefs,\n      setMap = _useRenderMaps.setMap,\n      ResizeMap = _useRenderMaps.ResizeMap,\n      ChangeMapView = _useRenderMaps.ChangeMapView;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 8,\n      className: styles.map,\n      whenCreated: function whenCreated(map) {\n        return setMap(map);\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"Map data &copy; \".concat(MapName),\n        url: \"https://map.cryptovoxels.com/tile?z={z}&x={x}&y={y}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ResizeMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ChangeMapView, {\n        coords: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(RenderAssets, {\n        markerRefs: markerRefs,\n        assets: assets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CryptovoxelsMap, \"8YWdZ4itvihHrFTB8bovgcv1TKY=\", false, function () {\n  return [useMediaQuery, useStyles, useRenderMaps];\n});\n\n_c = CryptovoxelsMap;\nexport default CryptovoxelsMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptovoxelsMap\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/components/maps/CryptovoxelsMap.tsx"],"names":["MapContainer","TileLayer","makeStyles","useMediaQuery","MapStyles","useRenderMaps","RenderAssets","useStyles","MapName","CryptovoxelsMap","selected","assets","smOrAbove","theme","breakpoints","up","styles","items","center","position","markerRefs","setMap","ResizeMap","ChangeMapView","map"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,SAAvB,QAAwC,eAAxC;AACA,SAASC,UAAT,EAA4BC,aAA5B,QAAiD,mBAAjD;AACA,SAAoBC,SAApB,QAAiD,aAAjD;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAoB;AAAA,SAAME,SAAN;AAAA,CAApB,CAA5B;AAEA,IAAMI,OAAO,GAAG,cAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAqC;AAAA;;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAC3D,MAAMC,SAAS,GAAGT,aAAa,CAAC,UAACU,KAAD;AAAA,WAAkBA,KAAK,CAACC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAlB;AAAA,GAAD,CAA/B;AACA,MAAMC,MAAM,GAAGT,SAAS,CAAC;AAAEK,IAAAA,SAAS,EAATA;AAAF,GAAD,CAAxB;;AACA,uBAAmEP,aAAa,CAAC;AAC/EY,IAAAA,KAAK,EAAEN,MADwE;AAE/ED,IAAAA,QAAQ,EAARA,QAF+E;AAG/EQ,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAHuE,GAAD,CAAhF;AAAA,MAAQC,QAAR,kBAAQA,QAAR;AAAA,MAAkBC,UAAlB,kBAAkBA,UAAlB;AAAA,MAA8BC,MAA9B,kBAA8BA,MAA9B;AAAA,MAAsCC,SAAtC,kBAAsCA,SAAtC;AAAA,MAAiDC,aAAjD,kBAAiDA,aAAjD;;AAMA,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,MAAM,EAAEJ,QADV;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,SAAS,EAAEH,MAAM,CAACQ,GAHpB;AAIE,MAAA,WAAW,EAAE,qBAACA,GAAD;AAAA,eAASH,MAAM,CAACG,GAAD,CAAf;AAAA,OAJf;AAAA,8BAME,QAAC,SAAD;AACE,QAAA,WAAW,4BAAqBhB,OAArB,CADb;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,eANF,eAUE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,eAVF,eAWE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEW;AAAvB;AAAA;AAAA;AAAA;AAAA,eAXF,eAYE,QAAC,YAAD;AAAc,QAAA,UAAU,EAAEC,UAA1B;AAAsC,QAAA,MAAM,EAAET;AAA9C;AAAA;AAAA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CA3BD;;GAAMF,e;UACcN,a,EACHI,S,EACoDF,a;;;KAH/DI,e;AA6BN,eAAeA,eAAf","sourcesContent":["import { MapContainer, TileLayer } from 'react-leaflet';\nimport { makeStyles, Theme, useMediaQuery } from '@material-ui/core';\nimport { MapsProps, MapStyles, StyleProps } from './constants';\nimport useRenderMaps from '../../hooks/useRenderMaps';\nimport RenderAssets from './RenderMarkers';\n\nconst useStyles = makeStyles<Theme, StyleProps>(() => MapStyles);\n\nconst MapName = 'Cryptovoxels';\n\nconst CryptovoxelsMap = ({ selected, assets }: MapsProps) => {\n  const smOrAbove = useMediaQuery((theme: Theme) => theme.breakpoints.up('sm'));\n  const styles = useStyles({ smOrAbove });\n  const { position, markerRefs, setMap, ResizeMap, ChangeMapView } = useRenderMaps({\n    items: assets,\n    selected,\n    center: [0, 0],\n  });\n\n  return (\n    <div>\n      <MapContainer\n        center={position}\n        zoom={8}\n        className={styles.map}\n        whenCreated={(map) => setMap(map)}\n      >\n        <TileLayer\n          attribution={`Map data &copy; ${MapName}`}\n          url=\"https://map.cryptovoxels.com/tile?z={z}&x={x}&y={y}\"\n        />\n        <ResizeMap />\n        <ChangeMapView coords={position} />\n        <RenderAssets markerRefs={markerRefs} assets={assets} />\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default CryptovoxelsMap;\n"]},"metadata":{},"sourceType":"module"}