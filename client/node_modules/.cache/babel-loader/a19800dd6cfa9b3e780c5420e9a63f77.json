{"ast":null,"code":"import _toConsumableArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/modules/profile-page/EthNfts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport SelectSearch from 'react-select-search';\nimport { Grid } from '@material-ui/core';\nimport { NftPagination } from '../../components';\nimport SectionLabel from '../../components/SectionLabel';\nimport './select-search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EthNfts(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      nfts = _useState2[0],\n      setNfts = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      collections = _useState6[0],\n      setCollections = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedCollection = _useState8[0],\n      setSelectedCollection = _useState8[1];\n\n  useEffect(function () {\n    setNfts(data.nfts);\n    setCollections(data.collections);\n  }, [data]);\n\n  var filterCollection = function filterCollection(v) {\n    setSelectedCollection(v);\n\n    if (v === '') {\n      setNfts(data.nfts);\n    } else {\n      var result = data.nfts.filter(function (n) {\n        return n.collection.name === v;\n      });\n      setNfts(_toConsumableArray(result));\n    }\n  };\n\n  var filterSearch = function filterSearch() {\n    return function (query) {\n      if (!query) {\n        return [{\n          value: '',\n          name: 'All'\n        }].concat(_toConsumableArray(data.collections));\n      }\n\n      return collections.filter(function (c) {\n        return c.name.toLowerCase().includes(query.toLowerCase());\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      style: {\n        marginBottom: 36\n      },\n      children: [/*#__PURE__*/_jsxDEV(SectionLabel, {\n        variant: \"h5\",\n        children: \"Ethereum NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectSearch, {\n        placeholder: \"Select a collection\",\n        closeOnSelect: true,\n        search: true,\n        options: [{\n          value: '',\n          name: 'All'\n        }].concat(_toConsumableArray(collections)),\n        value: selectedCollection,\n        onChange: filterCollection,\n        filterOptions: filterSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NftPagination, {\n      isOpenSea: true,\n      loading: data.loading,\n      nfts: nfts.slice((page - 1) * 12, page * 12),\n      page: page,\n      maxPage: Math.floor(nfts.length / 12) + 1,\n      onNext: function onNext() {\n        return setPage(page + 1);\n      },\n      onPrev: function onPrev() {\n        return setPage(page - 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EthNfts, \"OPQTErY/b9gblN/U5O+9Vz3AP44=\");\n\n_c = EthNfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"EthNfts\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/modules/profile-page/EthNfts.tsx"],"names":["useEffect","useState","SelectSearch","Grid","NftPagination","SectionLabel","EthNfts","data","nfts","setNfts","page","setPage","collections","setCollections","selectedCollection","setSelectedCollection","filterCollection","v","result","filter","n","collection","name","filterSearch","query","value","c","toLowerCase","includes","marginBottom","loading","slice","Math","floor","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport SelectSearch from 'react-select-search';\nimport { Grid } from '@material-ui/core';\n\nimport { NftPagination } from '../../components';\nimport SectionLabel from '../../components/SectionLabel';\nimport { getEthAssets, getEthCollections } from './api';\nimport { isSolAddress } from '../../libs/utils';\n\nimport './select-search.css';\nimport NftCollections from '../nft-collections';\n\ninterface Props {\n  data: any;\n}\n\nexport default function EthNfts({ data }: Props) {\n  const [nfts, setNfts] = useState<any>([]);\n  const [page, setPage] = useState(1);\n  const [collections, setCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState('');\n\n  useEffect(() => {\n    setNfts(data.nfts);\n    setCollections(data.collections);\n  }, [data]);\n\n  const filterCollection = (v: any) => {\n    setSelectedCollection(v);\n    if (v === '') {\n      setNfts(data.nfts);\n    } else {\n      const result: any = data.nfts.filter((n) => n.collection.name === v);\n      setNfts([...result]);\n    }\n  };\n\n  const filterSearch = () => (query: string) => {\n    if (!query) {\n      return [{ value: '', name: 'All' }, ...data.collections];\n    }\n    return collections.filter((c: any) => c.name.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        style={{ marginBottom: 36 }}\n      >\n        <SectionLabel variant=\"h5\">Ethereum NFTs</SectionLabel>\n        <SelectSearch\n          placeholder=\"Select a collection\"\n          closeOnSelect\n          search\n          options={[{ value: '', name: 'All' }, ...collections]}\n          value={selectedCollection}\n          onChange={filterCollection}\n          filterOptions={filterSearch}\n        />\n      </Grid>\n      <NftPagination\n        isOpenSea\n        loading={data.loading}\n        nfts={nfts.slice((page - 1) * 12, page * 12)}\n        page={page}\n        maxPage={Math.floor(nfts.length / 12) + 1}\n        onNext={() => setPage(page + 1)}\n        onPrev={() => setPage(page - 1)}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}