{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n\nvar _MoralisWeb2 = _interopRequireDefault(require(\"./MoralisWeb3\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Contains all Moralis API classes and functions.\n *\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\n\nvar Moralis = /*#__PURE__*/function (_MoralisWeb) {\n  (0, _inherits2.default)(Moralis, _MoralisWeb);\n\n  var _super = _createSuper(Moralis);\n\n  function Moralis() {\n    var _context;\n\n    (0, _classCallCheck2.default)(this, Moralis);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _super.call.apply(_super, (0, _concat.default)(_context = [this]).call(_context, args));\n  }\n  /**\n   * Call this method first to set up your authentication tokens for Moralis.\n   *\n   * @param {string} applicationId Your Moralis Application ID.\n   * @param {string} [javaScriptKey] Your Moralis JavaScript Key (Not needed for moralis-server)\n   * @param {string} [masterKey] Your Moralis Master Key. (Node.js only!)\n   * @static\n   */\n\n\n  (0, _createClass2.default)(Moralis, null, [{\n    key: \"initialize\",\n    value: function value(applicationId\n    /*: string*/\n    , javaScriptKey\n    /*: string*/\n    ) {\n      if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n        /* eslint-disable no-console */\n        console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n        /* eslint-enable no-console */\n      }\n\n      Moralis._initialize(applicationId, javaScriptKey);\n    }\n  }, {\n    key: \"_initialize\",\n    value: function value(applicationId\n    /*: string*/\n    , javaScriptKey\n    /*: string*/\n    , masterKey\n    /*: string*/\n    ) {\n      _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n      _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n      _CoreManager.default.set('MASTER_KEY', masterKey);\n\n      _CoreManager.default.set('USE_MASTER_KEY', false);\n    }\n    /**\n     * Call this method to set your AsyncStorage engine\n     * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n     * is not provided at a stable path and changes over versions.\n     *\n     * @param {AsyncStorage} storage a react native async storage.\n     * @static\n     */\n\n  }, {\n    key: \"setAsyncStorage\",\n    value: function value(storage\n    /*: any*/\n    ) {\n      _CoreManager.default.setAsyncStorage(storage);\n    }\n    /**\n     * Call this method to set your LocalDatastoreStorage engine\n     * If using React-Native use {@link Moralis.setAsyncStorage Moralis.setAsyncStorage()}\n     *\n     * @param {LocalDatastoreController} controller a data storage.\n     * @static\n     */\n\n  }, {\n    key: \"setLocalDatastoreController\",\n    value: function value(controller\n    /*: any*/\n    ) {\n      _CoreManager.default.setLocalDatastoreController(controller);\n    }\n    /**\n     * @member {string} Moralis.applicationId\n     * @static\n     */\n\n  }, {\n    key: \"applicationId\",\n    get: function get() {\n      return _CoreManager.default.get('APPLICATION_ID');\n    }\n    /**\n     * @member {string} Moralis.javaScriptKey\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('APPLICATION_ID', value);\n    }\n  }, {\n    key: \"javaScriptKey\",\n    get: function get() {\n      return _CoreManager.default.get('JAVASCRIPT_KEY');\n    }\n    /**\n     * @member {string} Moralis.masterKey\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('JAVASCRIPT_KEY', value);\n    }\n  }, {\n    key: \"masterKey\",\n    get: function get() {\n      return _CoreManager.default.get('MASTER_KEY');\n    }\n    /**\n     * @member {string} Moralis.serverURL\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('MASTER_KEY', value);\n    }\n  }, {\n    key: \"serverURL\",\n    get: function get() {\n      return _CoreManager.default.get('SERVER_URL');\n    }\n    /**\n     * @member {string} Moralis.serverAuthToken\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('SERVER_URL', value);\n    }\n  }, {\n    key: \"serverAuthToken\",\n    get: function get() {\n      return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n    }\n    /**\n     * @member {string} Moralis.serverAuthType\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n    }\n  }, {\n    key: \"serverAuthType\",\n    get: function get() {\n      return _CoreManager.default.get('SERVER_AUTH_TYPE');\n    }\n    /**\n     * @member {string} Moralis.liveQueryServerURL\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n    }\n  }, {\n    key: \"liveQueryServerURL\",\n    get: function get() {\n      return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n    }\n    /**\n     * @member {string} Moralis.encryptedUser\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n    }\n  }, {\n    key: \"encryptedUser\",\n    get: function get() {\n      return _CoreManager.default.get('ENCRYPTED_USER');\n    }\n    /**\n     * @member {string} Moralis.secret\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('ENCRYPTED_USER', value);\n    }\n  }, {\n    key: \"secret\",\n    get: function get() {\n      return _CoreManager.default.get('ENCRYPTED_KEY');\n    }\n    /**\n     * @member {boolean} Moralis.idempotency\n     * @static\n     */\n    ,\n    set: function set(value) {\n      _CoreManager.default.set('ENCRYPTED_KEY', value);\n    }\n  }, {\n    key: \"idempotency\",\n    get: function get() {\n      return _CoreManager.default.get('IDEMPOTENCY');\n    },\n    set: function set(value) {\n      _CoreManager.default.set('IDEMPOTENCY', value);\n    }\n  }]);\n  return Moralis;\n}(_MoralisWeb2.default);\n\nMoralis.ACL = require('./ParseACL').default;\nMoralis.Analytics = require('./Analytics');\nMoralis.AnonymousUtils = require('./AnonymousUtils').default;\nMoralis.Cloud = require('./Cloud');\nMoralis.CLP = require('./ParseCLP').default;\nMoralis.CoreManager = require('./CoreManager');\nMoralis.Config = require('./ParseConfig').default;\nMoralis.Error = require('./ParseError').default;\nMoralis.FacebookUtils = require('./FacebookUtils').default;\nMoralis.File = require('./ParseFile').default;\nMoralis.GeoPoint = require('./ParseGeoPoint').default;\nMoralis.Polygon = require('./ParsePolygon').default;\nMoralis.Installation = require('./ParseInstallation').default;\nMoralis.LocalDatastore = require('./LocalDatastore');\nMoralis.Object = require('./ParseObject').default;\nMoralis.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nif (!Moralis.Plugins) Moralis.Plugins = {};\nMoralis.Plugins.web3api = require('./MoralisWeb3Api').default;\nMoralis.Web3API = Moralis.Plugins.web3api;\nMoralis.Push = require('./Push');\nMoralis.Query = require('./ParseQuery').default;\nMoralis.Relation = require('./ParseRelation').default;\nMoralis.Role = require('./ParseRole').default;\nMoralis.Schema = require('./ParseSchema').default;\nMoralis.Session = require('./ParseSession').default;\nMoralis.Storage = require('./Storage');\nMoralis.User = require('./ParseUser').default;\nMoralis.LiveQuery = require('./ParseLiveQuery').default;\nMoralis.LiveQueryClient = require('./LiveQueryClient').default;\nMoralis.Web3 = Moralis;\nMoralis.Units = require('./UnitConvert'); // Moralis.Web3 = require('./MoralisWeb3').default;\n\nMoralis.Elrond = require('./MoralisErd').default;\nMoralis.Erd = Moralis.Elrond;\nMoralis.Dot = require('./MoralisDot').default;\nMoralis.UI = require('./MoralisUI').default;\n\nMoralis._request = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nMoralis._ajax = function () {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nMoralis._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nMoralis._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nMoralis._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called before your application can use pinning.\n *\n * @static\n */\n\n\nMoralis.enableLocalDatastore = function () {\n  Moralis.LocalDatastore.isEnabled = true;\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nMoralis.isLocalDatastoreEnabled = function () {\n  return Moralis.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Moralis.dumpLocalDatastore();\n * </pre>\n *\n * @static\n * @returns {object}\n */\n\n\nMoralis.dumpLocalDatastore = function () {\n  if (!Moralis.LocalDatastore.isEnabled) {\n    console.log('Moralis.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return _promise.default.resolve({});\n  } else {\n    return Moralis.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\n\nMoralis.enableEncryptedUser = function () {\n  Moralis.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nMoralis.isEncryptedUserEnabled = function () {\n  return Moralis.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default); // For legacy requires, of the form `var Moralis = require('moralis').Moralis`\n\n\nMoralis.Moralis = Moralis;\nmodule.exports = Moralis;","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/node_modules/moralis/lib/browser/Parse.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","_Reflect$construct","_promise","_concat","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_decode","_encode","_CoreManager","_CryptoController","_InstallationController","ParseOp","_RESTController","_MoralisWeb2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","default","result","NewTarget","constructor","arguments","apply","Reflect","sham","Proxy","Date","prototype","toString","call","e","Moralis","_MoralisWeb","_super","_context","_len","length","args","Array","_key","key","value","applicationId","javaScriptKey","get","process","env","SERVER_RENDERING","console","log","_initialize","masterKey","set","storage","setAsyncStorage","controller","setLocalDatastoreController","ACL","Analytics","AnonymousUtils","Cloud","CLP","CoreManager","Config","Error","FacebookUtils","File","GeoPoint","Polygon","Installation","LocalDatastore","Object","Op","Set","SetOp","Unset","UnsetOp","Increment","IncrementOp","Add","AddOp","Remove","RemoveOp","AddUnique","AddUniqueOp","Relation","RelationOp","Plugins","web3api","Web3API","Push","Query","Role","Schema","Session","Storage","User","LiveQuery","LiveQueryClient","Web3","Units","Elrond","Erd","Dot","UI","_request","_len2","_key2","getRESTController","request","_ajax","_len3","_key3","ajax","_","disallowObjects","_getInstallationId","getInstallationController","currentInstallationId","enableLocalDatastore","isEnabled","isLocalDatastoreEnabled","dumpLocalDatastore","resolve","_getAllContents","enableEncryptedUser","encryptedUser","isEncryptedUserEnabled","setCryptoController","setInstallationController","setRESTController","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n\nvar _MoralisWeb2 = _interopRequireDefault(require(\"./MoralisWeb3\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(_Reflect$construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Contains all Moralis API classes and functions.\n *\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\n\nvar Moralis = /*#__PURE__*/function (_MoralisWeb) {\n  (0, _inherits2.default)(Moralis, _MoralisWeb);\n\n  var _super = _createSuper(Moralis);\n\n  function Moralis() {\n    var _context;\n\n    (0, _classCallCheck2.default)(this, Moralis);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _super.call.apply(_super, (0, _concat.default)(_context = [this]).call(_context, args));\n  }\n  /**\n   * Call this method first to set up your authentication tokens for Moralis.\n   *\n   * @param {string} applicationId Your Moralis Application ID.\n   * @param {string} [javaScriptKey] Your Moralis JavaScript Key (Not needed for moralis-server)\n   * @param {string} [masterKey] Your Moralis Master Key. (Node.js only!)\n   * @static\n   */\n\n\n  (0, _createClass2.default)(Moralis, null, [{\n    key: \"initialize\",\n    value: function (applicationId\n    /*: string*/\n    , javaScriptKey\n    /*: string*/\n    ) {\n      if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n        /* eslint-disable no-console */\n        console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n        /* eslint-enable no-console */\n      }\n\n      Moralis._initialize(applicationId, javaScriptKey);\n    }\n  }, {\n    key: \"_initialize\",\n    value: function (applicationId\n    /*: string*/\n    , javaScriptKey\n    /*: string*/\n    , masterKey\n    /*: string*/\n    ) {\n      _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n      _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n      _CoreManager.default.set('MASTER_KEY', masterKey);\n\n      _CoreManager.default.set('USE_MASTER_KEY', false);\n    }\n    /**\n     * Call this method to set your AsyncStorage engine\n     * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n     * is not provided at a stable path and changes over versions.\n     *\n     * @param {AsyncStorage} storage a react native async storage.\n     * @static\n     */\n\n  }, {\n    key: \"setAsyncStorage\",\n    value: function (storage\n    /*: any*/\n    ) {\n      _CoreManager.default.setAsyncStorage(storage);\n    }\n    /**\n     * Call this method to set your LocalDatastoreStorage engine\n     * If using React-Native use {@link Moralis.setAsyncStorage Moralis.setAsyncStorage()}\n     *\n     * @param {LocalDatastoreController} controller a data storage.\n     * @static\n     */\n\n  }, {\n    key: \"setLocalDatastoreController\",\n    value: function (controller\n    /*: any*/\n    ) {\n      _CoreManager.default.setLocalDatastoreController(controller);\n    }\n    /**\n     * @member {string} Moralis.applicationId\n     * @static\n     */\n\n  }, {\n    key: \"applicationId\",\n    get: function () {\n      return _CoreManager.default.get('APPLICATION_ID');\n    }\n    /**\n     * @member {string} Moralis.javaScriptKey\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('APPLICATION_ID', value);\n    }\n  }, {\n    key: \"javaScriptKey\",\n    get: function () {\n      return _CoreManager.default.get('JAVASCRIPT_KEY');\n    }\n    /**\n     * @member {string} Moralis.masterKey\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('JAVASCRIPT_KEY', value);\n    }\n  }, {\n    key: \"masterKey\",\n    get: function () {\n      return _CoreManager.default.get('MASTER_KEY');\n    }\n    /**\n     * @member {string} Moralis.serverURL\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('MASTER_KEY', value);\n    }\n  }, {\n    key: \"serverURL\",\n    get: function () {\n      return _CoreManager.default.get('SERVER_URL');\n    }\n    /**\n     * @member {string} Moralis.serverAuthToken\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('SERVER_URL', value);\n    }\n  }, {\n    key: \"serverAuthToken\",\n    get: function () {\n      return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n    }\n    /**\n     * @member {string} Moralis.serverAuthType\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n    }\n  }, {\n    key: \"serverAuthType\",\n    get: function () {\n      return _CoreManager.default.get('SERVER_AUTH_TYPE');\n    }\n    /**\n     * @member {string} Moralis.liveQueryServerURL\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n    }\n  }, {\n    key: \"liveQueryServerURL\",\n    get: function () {\n      return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n    }\n    /**\n     * @member {string} Moralis.encryptedUser\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n    }\n  }, {\n    key: \"encryptedUser\",\n    get: function () {\n      return _CoreManager.default.get('ENCRYPTED_USER');\n    }\n    /**\n     * @member {string} Moralis.secret\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('ENCRYPTED_USER', value);\n    }\n  }, {\n    key: \"secret\",\n    get: function () {\n      return _CoreManager.default.get('ENCRYPTED_KEY');\n    }\n    /**\n     * @member {boolean} Moralis.idempotency\n     * @static\n     */\n    ,\n    set: function (value) {\n      _CoreManager.default.set('ENCRYPTED_KEY', value);\n    }\n  }, {\n    key: \"idempotency\",\n    get: function () {\n      return _CoreManager.default.get('IDEMPOTENCY');\n    },\n    set: function (value) {\n      _CoreManager.default.set('IDEMPOTENCY', value);\n    }\n  }]);\n  return Moralis;\n}(_MoralisWeb2.default);\n\nMoralis.ACL = require('./ParseACL').default;\nMoralis.Analytics = require('./Analytics');\nMoralis.AnonymousUtils = require('./AnonymousUtils').default;\nMoralis.Cloud = require('./Cloud');\nMoralis.CLP = require('./ParseCLP').default;\nMoralis.CoreManager = require('./CoreManager');\nMoralis.Config = require('./ParseConfig').default;\nMoralis.Error = require('./ParseError').default;\nMoralis.FacebookUtils = require('./FacebookUtils').default;\nMoralis.File = require('./ParseFile').default;\nMoralis.GeoPoint = require('./ParseGeoPoint').default;\nMoralis.Polygon = require('./ParsePolygon').default;\nMoralis.Installation = require('./ParseInstallation').default;\nMoralis.LocalDatastore = require('./LocalDatastore');\nMoralis.Object = require('./ParseObject').default;\nMoralis.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nif (!Moralis.Plugins) Moralis.Plugins = {};\nMoralis.Plugins.web3api = require('./MoralisWeb3Api').default;\nMoralis.Web3API = Moralis.Plugins.web3api;\nMoralis.Push = require('./Push');\nMoralis.Query = require('./ParseQuery').default;\nMoralis.Relation = require('./ParseRelation').default;\nMoralis.Role = require('./ParseRole').default;\nMoralis.Schema = require('./ParseSchema').default;\nMoralis.Session = require('./ParseSession').default;\nMoralis.Storage = require('./Storage');\nMoralis.User = require('./ParseUser').default;\nMoralis.LiveQuery = require('./ParseLiveQuery').default;\nMoralis.LiveQueryClient = require('./LiveQueryClient').default;\nMoralis.Web3 = Moralis;\nMoralis.Units = require('./UnitConvert'); // Moralis.Web3 = require('./MoralisWeb3').default;\n\nMoralis.Elrond = require('./MoralisErd').default;\nMoralis.Erd = Moralis.Elrond;\nMoralis.Dot = require('./MoralisDot').default;\nMoralis.UI = require('./MoralisUI').default;\n\nMoralis._request = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nMoralis._ajax = function () {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nMoralis._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nMoralis._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nMoralis._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called before your application can use pinning.\n *\n * @static\n */\n\n\nMoralis.enableLocalDatastore = function () {\n  Moralis.LocalDatastore.isEnabled = true;\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nMoralis.isLocalDatastoreEnabled = function () {\n  return Moralis.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Moralis.dumpLocalDatastore();\n * </pre>\n *\n * @static\n * @returns {object}\n */\n\n\nMoralis.dumpLocalDatastore = function () {\n  if (!Moralis.LocalDatastore.isEnabled) {\n    console.log('Moralis.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return _promise.default.resolve({});\n  } else {\n    return Moralis.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\n\nMoralis.enableEncryptedUser = function () {\n  Moralis.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nMoralis.isEncryptedUserEnabled = function () {\n  return Moralis.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default);\n\n// For legacy requires, of the form `var Moralis = require('moralis').Moralis`\nMoralis.Moralis = Moralis;\nmodule.exports = Moralis;"]},"metadata":{},"sourceType":"script"}