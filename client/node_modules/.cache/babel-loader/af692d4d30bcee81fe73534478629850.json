{"ast":null,"code":"import _defineProperty from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/modules/meta-nft-collections/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from 'react';\nimport { Card, Grid, Hidden, IconButton, makeStyles, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Meta } from '../../components';\nimport Intro from '../core/Intro';\nimport { minimizeAddress } from '../../libs/utils';\nimport CopyAddress from '../../components/CopyAddress';\nimport { fetchAddressOwnership } from '../../store/meta-nft-collections/addressOwnershipSlice';\nimport { fetchCollectionSummary } from '../../store/meta-nft-collections';\nimport { CreateProfileContext } from '../../contexts/CreateProfileContext';\nimport useAddressSummaries from '../../hooks/useAddressSummaries';\nimport OwnershipView from '../../components/OwnershipView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  var _collectionPageContai, _nftsContainer;\n\n  return {\n    collectionPageContainer: (_collectionPageContai = {\n      padding: 24,\n      marginTop: 36\n    }, _defineProperty(_collectionPageContai, theme.breakpoints.down('sm'), {\n      flexDirection: 'column',\n      marginTop: 0\n    }), _defineProperty(_collectionPageContai, \"minHeight\", 'calc(100vh)'), _collectionPageContai),\n    introCard: {\n      position: 'sticky',\n      top: 120\n    },\n    itemsContainer: _defineProperty({\n      paddingLeft: 36\n    }, theme.breakpoints.down('sm'), {\n      paddingLeft: 0\n    }),\n    nftsContainer: (_nftsContainer = {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(4, 1fr)',\n      gridAutoRows: '1fr',\n      columnGap: 12,\n      rowGap: 12\n    }, _defineProperty(_nftsContainer, theme.breakpoints.down('md'), {\n      gridTemplateColumns: 'repeat(3, 1fr)'\n    }), _defineProperty(_nftsContainer, theme.breakpoints.down('sm'), {\n      gridTemplateColumns: 'repeat(2, 1fr)'\n    }), _defineProperty(_nftsContainer, theme.breakpoints.down('xs'), {\n      gridTemplateColumns: 'repeat(1, 1fr)'\n    }), _nftsContainer),\n    addressContainer: _defineProperty({\n      marginBottom: 12\n    }, theme.breakpoints.down('xs'), {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }),\n    addressText: _defineProperty({\n      fontWeight: 'bolder'\n    }, theme.breakpoints.down('sm'), {\n      fontSize: 30\n    })\n  };\n});\nexport var NftCollections = function NftCollections() {\n  _s();\n\n  var _useParams = useParams(),\n      address = _useParams.address;\n\n  var styles = useStyles();\n  var metaverseSummaries = useAddressSummaries();\n\n  var _useContext = useContext(CreateProfileContext),\n      openProfileModal = _useContext.openProfileModal;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(fetchAddressOwnership(address));\n    dispatch(fetchCollectionSummary());\n  }, [address]);\n\n  var handleClickOpen = function handleClickOpen() {\n    openProfileModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"\".concat(address, \" - Profile | DOKO\"),\n      description: \"The Multi-Chain NFT Portfolio Manager that allows you to display, manage & trade your NFTs\",\n      url: \"https://doko.one\",\n      image: \"/DOKO_LOGO.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      className: styles.collectionPageContainer,\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        smDown: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: styles.introCard,\n            children: /*#__PURE__*/_jsxDEV(Intro, {\n              drawer: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: styles.itemsContainer,\n        container: true,\n        direction: \"column\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          smUp: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            wrap: \"nowrap\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleClickOpen,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/createProfileIcon.png\",\n                alt: \"share\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          className: styles.addressContainer,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              className: styles.addressContainer,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: styles.addressText,\n                variant: \"h5\",\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: minimizeAddress(address)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(CopyAddress, {\n                  address: address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(OwnershipView, {\n          metaverseSummaries: metaverseSummaries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(NftCollections, \"FGDV+Jw5Idc9oFf5z6ETbagyqbc=\", false, function () {\n  return [useParams, useStyles, useAddressSummaries, useDispatch];\n});\n\n_c = NftCollections;\nexport default NftCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftCollections\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/modules/meta-nft-collections/index.tsx"],"names":["useEffect","useContext","Card","Grid","Hidden","IconButton","makeStyles","Typography","useDispatch","useParams","Meta","Intro","minimizeAddress","CopyAddress","fetchAddressOwnership","fetchCollectionSummary","CreateProfileContext","useAddressSummaries","OwnershipView","useStyles","theme","collectionPageContainer","padding","marginTop","breakpoints","down","flexDirection","introCard","position","top","itemsContainer","paddingLeft","nftsContainer","display","gridTemplateColumns","gridAutoRows","columnGap","rowGap","addressContainer","marginBottom","justifyContent","alignItems","addressText","fontWeight","fontSize","NftCollections","address","styles","metaverseSummaries","openProfileModal","dispatch","handleClickOpen"],"mappings":"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","sourcesContent":["import { useEffect, useContext } from 'react';\nimport { Card, Grid, Hidden, IconButton, makeStyles, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Meta } from '../../components';\nimport Intro from '../core/Intro';\nimport { minimizeAddress } from '../../libs/utils';\nimport CopyAddress from '../../components/CopyAddress';\nimport { fetchAddressOwnership } from '../../store/meta-nft-collections/addressOwnershipSlice';\nimport { fetchCollectionSummary } from '../../store/meta-nft-collections';\nimport { CreateProfileContext } from '../../contexts/CreateProfileContext';\nimport useAddressSummaries from '../../hooks/useAddressSummaries';\nimport OwnershipView from '../../components/OwnershipView';\n\nconst useStyles = makeStyles((theme) => ({\n  collectionPageContainer: {\n    padding: 24,\n    marginTop: 36,\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n      marginTop: 0,\n    },\n    minHeight: 'calc(100vh)',\n  },\n  introCard: {\n    position: 'sticky',\n    top: 120,\n  },\n  itemsContainer: {\n    paddingLeft: 36,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: 0,\n    },\n  },\n  nftsContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(4, 1fr)',\n    gridAutoRows: '1fr',\n    columnGap: 12,\n    rowGap: 12,\n    [theme.breakpoints.down('md')]: {\n      gridTemplateColumns: 'repeat(3, 1fr)',\n    },\n    [theme.breakpoints.down('sm')]: {\n      gridTemplateColumns: 'repeat(2, 1fr)',\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridTemplateColumns: 'repeat(1, 1fr)',\n    },\n  },\n  addressContainer: {\n    marginBottom: 12,\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n  addressText: {\n    fontWeight: 'bolder',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 30,\n    },\n  },\n}));\n\nexport const NftCollections = () => {\n  const { address } = useParams<{ address: string }>();\n  const styles = useStyles();\n  const metaverseSummaries = useAddressSummaries();\n  const { openProfileModal } = useContext(CreateProfileContext);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAddressOwnership(address));\n    dispatch(fetchCollectionSummary());\n  }, [address]);\n\n  const handleClickOpen = () => {\n    openProfileModal();\n  };\n\n  return (\n    <>\n      <Meta\n        title={`${address} - Profile | DOKO`}\n        description=\"The Multi-Chain NFT Portfolio Manager that allows you to display, manage & trade your NFTs\"\n        url=\"https://doko.one\"\n        image=\"/DOKO_LOGO.png\"\n      />\n      <Grid container wrap=\"nowrap\" className={styles.collectionPageContainer}>\n        <Hidden smDown>\n          <Grid item>\n            <Card className={styles.introCard}>\n              <Intro drawer={false} />\n            </Card>\n          </Grid>\n        </Hidden>\n        <Grid\n          className={styles.itemsContainer}\n          container\n          direction=\"column\"\n          alignItems=\"flex-start\"\n        >\n          <Hidden smUp>\n            <Grid\n              container\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"flex-end\"\n              wrap=\"nowrap\"\n            >\n              <IconButton onClick={handleClickOpen}>\n                <img src=\"/createProfileIcon.png\" alt=\"share\" />\n              </IconButton>\n            </Grid>\n          </Hidden>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            className={styles.addressContainer}\n          >\n            <Grid item xs={12} md=\"auto\">\n              <Grid container direction=\"column\" className={styles.addressContainer}>\n                <Typography\n                  className={styles.addressText}\n                  variant=\"h5\"\n                  style={{ fontWeight: 'bolder' }}\n                >\n                  {minimizeAddress(address)}\n                </Typography>\n                <Grid item>\n                  <CopyAddress address={address} />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <OwnershipView metaverseSummaries={metaverseSummaries} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default NftCollections;\n"]},"metadata":{},"sourceType":"module"}