{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n\nvar _Cloud = require(\"./Cloud\");\n\nfunction addChainAndUserAddress() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (!options.chain) options.chain = 'eth';\n  if (options.address) return options;\n\n  var user = _ParseUser.default.current();\n\n  if (user) {\n    options.address = user.get('ethAddress');\n    return options;\n  }\n\n  throw new Error('address or logged in user required');\n} // v2\n\n\nvar endpoints_v2 = [{\n  method: 'GET',\n  group: 'native',\n  name: 'getBlock',\n  url: '/block/:block_number_or_hash'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenMetadata',\n  url: '/erc20/metadata'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenMetadataBySymbol',\n  url: '/erc20/metadata/symbols'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenAllowance',\n  url: '/erc20/:address/allowance'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenPrice',\n  url: '/erc20/:address/price'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getERC721Metadata',\n  url: '/erc721/:address/metadata'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getAllTokenIds',\n  url: '/nft/:address'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getNFTMetadata',\n  url: '/nft/:address/metadata'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getNFTOwners',\n  url: '/nft/:address/owners'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getContractNFTTransfers',\n  url: '/nft/:address/transfers'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenIdMetadata',\n  url: '/nft/:address/:token_id'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenIdOwners',\n  url: '/nft/:address/:token_id/owners'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getWalletTokenIdTransfers',\n  url: '/nft/:address/:token_id/transfers'\n}, {\n  method: 'GET',\n  group: 'resolve',\n  name: 'resolveDomain',\n  url: '/resolve/:domain'\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getTransactions',\n  url: '/:address',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getNativeBalance',\n  url: '/:address/balance',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getTokenBalances',\n  url: '/:address/erc20',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getTokenTransfers',\n  url: '/:address/erc20/transfers',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'POST',\n  group: 'native',\n  name: 'getContractEvents',\n  url: '/:address/events'\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getNFTs',\n  url: '/:address/nft',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getNFTTransfers',\n  url: '/:address/nft/transfers',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getHistoricalNFTTransfers',\n  url: '/:address/nft/transfers/verbose'\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getNFTsForContract',\n  url: '/:address/nft/:token_address'\n}];\nvar ENDPOINTS = endpoints_v2;\n\nfunction endpointFactory() {\n  var wrappers = {};\n  (0, _forEach.default)(ENDPOINTS).call(ENDPOINTS, function (_ref) {\n    var group = _ref.group,\n        name = _ref.name,\n        preprocess = _ref.preprocess;\n    if (!wrappers[group]) wrappers[group] = {};\n\n    wrappers[group][name] = function (options) {\n      var o = options;\n      if (typeof preprocess === 'function') o = preprocess(options);\n      return (0, _Cloud.run)(name, o);\n    };\n  });\n  return wrappers;\n}\n\nvar deepIndexApi = endpointFactory();\nvar _default = deepIndexApi;\nexports.default = _default;","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/node_modules/moralis/lib/browser/MoralisWeb3Api.js"],"names":["_interopRequireDefault","require","_Object$defineProperty","exports","value","default","_forEach","_ParseUser","_Cloud","addChainAndUserAddress","options","arguments","length","undefined","chain","address","user","current","get","Error","endpoints_v2","method","group","name","url","preprocess","ENDPOINTS","endpointFactory","wrappers","call","_ref","o","run","deepIndexApi","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n\nvar _Cloud = require(\"./Cloud\");\n\nfunction addChainAndUserAddress() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (!options.chain) options.chain = 'eth';\n  if (options.address) return options;\n\n  var user = _ParseUser.default.current();\n\n  if (user) {\n    options.address = user.get('ethAddress');\n    return options;\n  }\n\n  throw new Error('address or logged in user required');\n} // v2\n\n\nvar endpoints_v2 = [{\n  method: 'GET',\n  group: 'native',\n  name: 'getBlock',\n  url: '/block/:block_number_or_hash'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenMetadata',\n  url: '/erc20/metadata'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenMetadataBySymbol',\n  url: '/erc20/metadata/symbols'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenAllowance',\n  url: '/erc20/:address/allowance'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenPrice',\n  url: '/erc20/:address/price'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getERC721Metadata',\n  url: '/erc721/:address/metadata'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getAllTokenIds',\n  url: '/nft/:address'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getNFTMetadata',\n  url: '/nft/:address/metadata'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getNFTOwners',\n  url: '/nft/:address/owners'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getContractNFTTransfers',\n  url: '/nft/:address/transfers'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenIdMetadata',\n  url: '/nft/:address/:token_id'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getTokenIdOwners',\n  url: '/nft/:address/:token_id/owners'\n}, {\n  method: 'GET',\n  group: 'token',\n  name: 'getWalletTokenIdTransfers',\n  url: '/nft/:address/:token_id/transfers'\n}, {\n  method: 'GET',\n  group: 'resolve',\n  name: 'resolveDomain',\n  url: '/resolve/:domain'\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getTransactions',\n  url: '/:address',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getNativeBalance',\n  url: '/:address/balance',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getTokenBalances',\n  url: '/:address/erc20',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getTokenTransfers',\n  url: '/:address/erc20/transfers',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'POST',\n  group: 'native',\n  name: 'getContractEvents',\n  url: '/:address/events'\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getNFTs',\n  url: '/:address/nft',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getNFTTransfers',\n  url: '/:address/nft/transfers',\n  preprocess: addChainAndUserAddress\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getHistoricalNFTTransfers',\n  url: '/:address/nft/transfers/verbose'\n}, {\n  method: 'GET',\n  group: 'account',\n  name: 'getNFTsForContract',\n  url: '/:address/nft/:token_address'\n}];\nvar ENDPOINTS = endpoints_v2;\n\nfunction endpointFactory() {\n  var wrappers = {};\n  (0, _forEach.default)(ENDPOINTS).call(ENDPOINTS, function (_ref) {\n    var group = _ref.group,\n        name = _ref.name,\n        preprocess = _ref.preprocess;\n    if (!wrappers[group]) wrappers[group] = {};\n\n    wrappers[group][name] = function (options) {\n      var o = options;\n      if (typeof preprocess === 'function') o = preprocess(options);\n      return (0, _Cloud.run)(name, o);\n    };\n  });\n  return wrappers;\n}\n\nvar deepIndexApi = endpointFactory();\nvar _default = deepIndexApi;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}