{"ast":null,"code":"import _slicedToArray from \"/Users/anthonysiu/doko/DOKO/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/components/PopoverShare.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, memo } from 'react';\nimport { IconButton, MenuItem, makeStyles, withStyles, Menu } from '@material-ui/core';\nimport facebook from '../assets/facebook.png';\nimport twitter from '../assets/twitter.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CustomIconButton = withStyles({\n  root: {\n    padding: '1px'\n  }\n})(IconButton);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'inline-block'\n    },\n    shareIcon: {\n      width: 36,\n      height: 36\n    },\n    shareItem: {\n      '&:hover': {\n        background: theme.palette.primary.main,\n        color: 'white'\n      },\n      '& > img': {\n        width: 24,\n        marginRight: 12\n      }\n    },\n    notAvailableText: {\n      color: '#b3b3b3',\n      textAlign: 'center'\n    }\n  };\n});\nexport var PopoverShare = /*#__PURE__*/memo(_c = _s(function (_ref) {\n  _s();\n\n  var name = _ref.name,\n      chain = _ref.chain,\n      address = _ref.address,\n      tokenId = _ref.tokenId;\n  var styles = useStyles();\n\n  var share = function share(e, type) {\n    e.stopPropagation();\n    var url = \"\".concat(window.origin, \"/nft/\").concat(chain, \"/\").concat(address, \"/\").concat(tokenId);\n    var link = {\n      facebook: \"https://www.facebook.com/sharer/sharer.php?u=\".concat(url, \"&quote=Check out \").concat(name.replace('#', ''), \" on DOKO now!\"),\n      twitter: \"https://twitter.com/intent/tweet?url=\".concat(url, \"&text=Check out \").concat(name.replace('#', ''), \" on @doko_nft now!\")\n    };\n    window.open(link[type], '_blank');\n  };\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var handleClick = function handleClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose(e) {\n    e.stopPropagation();\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomIconButton, {\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: 36,\n        src: \"/collection/DOKOasset_ShareWhiteCircle.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        className: styles.shareItem,\n        onClick: function onClick(e) {\n          return share(e, 'facebook');\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: facebook,\n          alt: \"facebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this), \"Share on Facebook\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        className: styles.shareItem,\n        onClick: function onClick(e) {\n          return share(e, 'twitter');\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: twitter,\n          alt: \"twitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, _this), \"Share on Twitter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}, \"3KvA0jGm1hPPo7pH4pWGuc4dsKk=\", false, function () {\n  return [useStyles];\n}));\n_c2 = PopoverShare;\nexport default PopoverShare;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopoverShare$memo\");\n$RefreshReg$(_c2, \"PopoverShare\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/components/PopoverShare.tsx"],"names":["useState","memo","IconButton","MenuItem","makeStyles","withStyles","Menu","facebook","twitter","CustomIconButton","root","padding","useStyles","theme","display","shareIcon","width","height","shareItem","background","palette","primary","main","color","marginRight","notAvailableText","textAlign","PopoverShare","name","chain","address","tokenId","styles","share","e","type","stopPropagation","url","window","origin","link","replace","open","anchorEl","setAnchorEl","handleClick","event","preventDefault","currentTarget","handleClose","Boolean"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,IAAnB,QAA2D,OAA3D;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,IAAvD,QAAmE,mBAAnE;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,IAAMC,gBAAgB,GAAGJ,UAAU,CAAC;AAClCK,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AAD4B,CAAD,CAAV,CAItBT,UAJsB,CAAzB;AAMA,IAAMU,SAAS,GAAGR,UAAU,CAAC,UAACS,KAAD;AAAA,SAAY;AACvCH,IAAAA,IAAI,EAAE;AACJI,MAAAA,OAAO,EAAE;AADL,KADiC;AAIvCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,MAAM,EAAE;AAFC,KAJ4B;AAQvCC,IAAAA,SAAS,EAAE;AACT,iBAAW;AACTC,QAAAA,UAAU,EAAEN,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC,IADzB;AAETC,QAAAA,KAAK,EAAE;AAFE,OADF;AAKT,iBAAW;AACTP,QAAAA,KAAK,EAAE,EADE;AAETQ,QAAAA,WAAW,EAAE;AAFJ;AALF,KAR4B;AAkBvCC,IAAAA,gBAAgB,EAAE;AAChBF,MAAAA,KAAK,EAAE,SADS;AAEhBG,MAAAA,SAAS,EAAE;AAFK;AAlBqB,GAAZ;AAAA,CAAD,CAA5B;AA+BA,OAAO,IAAMC,YAAY,gBAAG1B,IAAI,SAAC,gBAA8C;AAAA;;AAAA,MAA3C2B,IAA2C,QAA3CA,IAA2C;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAC7E,MAAMC,MAAM,GAAGpB,SAAS,EAAxB;;AAEA,MAAMqB,KAAK,GAAG,SAARA,KAAQ,CAACC,CAAD,EAA6BC,IAA7B,EAA8D;AAC1ED,IAAAA,CAAC,CAACE,eAAF;AAEA,QAAMC,GAAG,aAAMC,MAAM,CAACC,MAAb,kBAA2BV,KAA3B,cAAoCC,OAApC,cAA+CC,OAA/C,CAAT;AACA,QAAMS,IAAI,GAAG;AACXjC,MAAAA,QAAQ,yDAAkD8B,GAAlD,8BAAyET,IAAI,CAACa,OAAL,CAC/E,GAD+E,EAE/E,EAF+E,CAAzE,kBADG;AAKXjC,MAAAA,OAAO,iDAA0C6B,GAA1C,6BAAgET,IAAI,CAACa,OAAL,CACrE,GADqE,EAErE,EAFqE,CAAhE;AALI,KAAb;AAUAH,IAAAA,MAAM,CAACI,IAAP,CAAYF,IAAI,CAACL,IAAD,CAAhB,EAAwB,QAAxB;AACD,GAfD;;AAiBA,kBAAgCnC,QAAQ,CAAqB,IAArB,CAAxC;AAAA;AAAA,MAAO2C,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAoC;AACtDA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACV,eAAN;AACAQ,IAAAA,WAAW,CAACE,KAAK,CAACE,aAAP,CAAX;AACD,GAJD;;AAMA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACf,CAAD,EAAuB;AACzCA,IAAAA,CAAC,CAACE,eAAF;AACAQ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEC,WAA3B;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE,EAAZ;AAAgB,QAAA,GAAG,EAAC,4CAApB;AAAiE,QAAA,GAAG,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEF,QAAhB;AAA0B,MAAA,WAAW,MAArC;AAAsC,MAAA,IAAI,EAAEO,OAAO,CAACP,QAAD,CAAnD;AAA+D,MAAA,OAAO,EAAEM,WAAxE;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEjB,MAAM,CAACd,SAA5B;AAAuC,QAAA,OAAO,EAAE,iBAACgB,CAAD;AAAA,iBAAOD,KAAK,CAACC,CAAD,EAAI,UAAJ,CAAZ;AAAA,SAAhD;AAAA,gCACE;AAAK,UAAA,GAAG,EAAE3B,QAAV;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,iBADF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAKE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEyB,MAAM,CAACd,SAA5B;AAAuC,QAAA,OAAO,EAAE,iBAACgB,CAAD;AAAA,iBAAOD,KAAK,CAACC,CAAD,EAAI,SAAJ,CAAZ;AAAA,SAAhD;AAAA,gCACE;AAAK,UAAA,GAAG,EAAE1B,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,iBADF;AAAA;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA,kBADF;AAiBD,CAlD+B;AAAA,UACfI,SADe;AAAA,GAAzB;MAAMe,Y;AAoDb,eAAeA,YAAf","sourcesContent":["import { useState, memo, SyntheticEvent, MouseEvent } from 'react';\nimport { IconButton, MenuItem, makeStyles, withStyles, Menu } from '@material-ui/core';\n\nimport facebook from '../assets/facebook.png';\nimport twitter from '../assets/twitter.png';\n\nconst CustomIconButton = withStyles({\n  root: {\n    padding: '1px',\n  },\n})(IconButton);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'inline-block',\n  },\n  shareIcon: {\n    width: 36,\n    height: 36,\n  },\n  shareItem: {\n    '&:hover': {\n      background: theme.palette.primary.main,\n      color: 'white',\n    },\n    '& > img': {\n      width: 24,\n      marginRight: 12,\n    },\n  },\n  notAvailableText: {\n    color: '#b3b3b3',\n    textAlign: 'center',\n  },\n}));\n\ninterface Props {\n  name: string;\n  chain: string;\n  address: string;\n  tokenId: string;\n}\n\nexport const PopoverShare = memo(({ name, chain, address, tokenId }: Props) => {\n  const styles = useStyles();\n\n  const share = (e: MouseEvent<HTMLElement>, type: 'facebook' | 'twitter') => {\n    e.stopPropagation();\n\n    const url = `${window.origin}/nft/${chain}/${address}/${tokenId}`;\n    const link = {\n      facebook: `https://www.facebook.com/sharer/sharer.php?u=${url}&quote=Check out ${name.replace(\n        '#',\n        '',\n      )} on DOKO now!`,\n      twitter: `https://twitter.com/intent/tweet?url=${url}&text=Check out ${name.replace(\n        '#',\n        '',\n      )} on @doko_nft now!`,\n    };\n    window.open(link[type], '_blank');\n  };\n\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (e: SyntheticEvent) => {\n    e.stopPropagation();\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <CustomIconButton onClick={handleClick}>\n        <img width={36} src=\"/collection/DOKOasset_ShareWhiteCircle.png\" alt=\"\" />\n      </CustomIconButton>\n      <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <MenuItem className={styles.shareItem} onClick={(e) => share(e, 'facebook')}>\n          <img src={facebook} alt=\"facebook\" />\n          Share on Facebook\n        </MenuItem>\n        <MenuItem className={styles.shareItem} onClick={(e) => share(e, 'twitter')}>\n          <img src={twitter} alt=\"twitter\" />\n          Share on Twitter\n        </MenuItem>\n      </Menu>\n    </>\n  );\n});\n\nexport default PopoverShare;\n"]},"metadata":{},"sourceType":"module"}