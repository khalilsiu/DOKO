{"ast":null,"code":"var _jsxFileName = \"/Users/anthonysiu/doko/DOKO/client/src/components/maps/SomniumSpaceMap.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { MapContainer, ImageOverlay } from 'react-leaflet';\nimport L from 'leaflet';\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\nimport { MapStyles } from './constants';\nimport useRenderMaps from '../../hooks/useRenderMaps';\nimport RenderAssets from './RenderMarkers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function () {\n  return MapStyles;\n});\nvar MapName = 'Somnium Space VR';\n\nvar SomniumSpaceMap = function SomniumSpaceMap(_ref) {\n  _s();\n\n  var selected = _ref.selected,\n      assets = _ref.assets;\n  var smOrAbove = useMediaQuery(function (theme) {\n    return theme.breakpoints.up('sm');\n  });\n  var styles = useStyles({\n    smOrAbove: smOrAbove\n  });\n\n  var _useRenderMaps = useRenderMaps({\n    bounds: {\n      southwest: [-130, -130],\n      northeast: [130, 130]\n    },\n    items: assets,\n    selected: selected,\n    center: [0, 0]\n  }),\n      latLangBounds = _useRenderMaps.latLangBounds,\n      position = _useRenderMaps.position,\n      markerRefs = _useRenderMaps.markerRefs,\n      setMap = _useRenderMaps.setMap,\n      ResizeMap = _useRenderMaps.ResizeMap;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 2,\n      className: styles.map,\n      whenCreated: function whenCreated(map) {\n        return setMap(map);\n      },\n      minZoom: 2,\n      maxZoom: 5,\n      crs: L.CRS.Simple,\n      children: [/*#__PURE__*/_jsxDEV(ImageOverlay, {\n        attribution: \"Map data &copy; \".concat(MapName),\n        url: \"https://map.somniumspace.com/images/Somnium_Space_World_Map_HQ2.jpg\",\n        bounds: latLangBounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(ResizeMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(RenderAssets, {\n        markerRefs: markerRefs,\n        assets: assets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SomniumSpaceMap, \"3trGbZZd8Zl0c85NYVeodvZ0zIs=\", false, function () {\n  return [useMediaQuery, useStyles, useRenderMaps];\n});\n\n_c = SomniumSpaceMap;\nexport default SomniumSpaceMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"SomniumSpaceMap\");","map":{"version":3,"sources":["/Users/anthonysiu/doko/DOKO/client/src/components/maps/SomniumSpaceMap.tsx"],"names":["MapContainer","ImageOverlay","L","makeStyles","useMediaQuery","MapStyles","useRenderMaps","RenderAssets","useStyles","MapName","SomniumSpaceMap","selected","assets","smOrAbove","theme","breakpoints","up","styles","bounds","southwest","northeast","items","center","latLangBounds","position","markerRefs","setMap","ResizeMap","map","CRS","Simple"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,YAAvB,QAA2C,eAA3C;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,UAAT,EAA4BC,aAA5B,QAAiD,mBAAjD;AACA,SAAoBC,SAApB,QAAiD,aAAjD;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAoB;AAAA,SAAME,SAAN;AAAA,CAApB,CAA5B;AAEA,IAAMI,OAAO,GAAG,kBAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAqC;AAAA;;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAC3D,MAAMC,SAAS,GAAGT,aAAa,CAAC,UAACU,KAAD;AAAA,WAAkBA,KAAK,CAACC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAlB;AAAA,GAAD,CAA/B;AACA,MAAMC,MAAM,GAAGT,SAAS,CAAC;AAAEK,IAAAA,SAAS,EAATA;AAAF,GAAD,CAAxB;;AACA,uBAAmEP,aAAa,CAAC;AAC/EY,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,CADL;AAENC,MAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,GAAN;AAFL,KADuE;AAK/EC,IAAAA,KAAK,EAAET,MALwE;AAM/ED,IAAAA,QAAQ,EAARA,QAN+E;AAO/EW,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAPuE,GAAD,CAAhF;AAAA,MAAQC,aAAR,kBAAQA,aAAR;AAAA,MAAuBC,QAAvB,kBAAuBA,QAAvB;AAAA,MAAiCC,UAAjC,kBAAiCA,UAAjC;AAAA,MAA6CC,MAA7C,kBAA6CA,MAA7C;AAAA,MAAqDC,SAArD,kBAAqDA,SAArD;;AAUA,sBACE;AAAA,2BAEI,QAAC,YAAD;AACE,MAAA,MAAM,EAAEH,QADV;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,SAAS,EAAEP,MAAM,CAACW,GAHpB;AAIE,MAAA,WAAW,EAAE,qBAACA,GAAD;AAAA,eAASF,MAAM,CAACE,GAAD,CAAf;AAAA,OAJf;AAKE,MAAA,OAAO,EAAE,CALX;AAME,MAAA,OAAO,EAAE,CANX;AAOE,MAAA,GAAG,EAAE1B,CAAC,CAAC2B,GAAF,CAAMC,MAPb;AAAA,8BASE,QAAC,YAAD;AACE,QAAA,WAAW,4BAAqBrB,OAArB,CADb;AAEE,QAAA,GAAG,EAAC,qEAFN;AAGE,QAAA,MAAM,EAAEc;AAHV;AAAA;AAAA;AAAA;AAAA,eATF,eAcE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,eAdF,eAeE,QAAC,YAAD;AAAc,QAAA,UAAU,EAAEE,UAA1B;AAAsC,QAAA,MAAM,EAAEb;AAA9C;AAAA;AAAA;AAAA;AAAA,eAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,WADF;AAuBD,CApCD;;GAAMF,e;UACcN,a,EACHI,S,EACoDF,a;;;KAH/DI,e;AAsCN,eAAeA,eAAf","sourcesContent":["import { MapContainer, ImageOverlay } from 'react-leaflet';\nimport L from 'leaflet';\nimport { makeStyles, Theme, useMediaQuery } from '@material-ui/core';\nimport { MapsProps, MapStyles, StyleProps } from './constants';\nimport useRenderMaps from '../../hooks/useRenderMaps';\nimport RenderAssets from './RenderMarkers';\n\nconst useStyles = makeStyles<Theme, StyleProps>(() => MapStyles);\n\nconst MapName = 'Somnium Space VR';\n\nconst SomniumSpaceMap = ({ selected, assets }: MapsProps) => {\n  const smOrAbove = useMediaQuery((theme: Theme) => theme.breakpoints.up('sm'));\n  const styles = useStyles({ smOrAbove });\n  const { latLangBounds, position, markerRefs, setMap, ResizeMap } = useRenderMaps({\n    bounds: {\n      southwest: [-130, -130],\n      northeast: [130, 130],\n    },\n    items: assets,\n    selected,\n    center: [0, 0],\n  });\n\n  return (\n    <div>\n      {\n        <MapContainer\n          center={position}\n          zoom={2}\n          className={styles.map}\n          whenCreated={(map) => setMap(map)}\n          minZoom={2}\n          maxZoom={5}\n          crs={L.CRS.Simple}\n        >\n          <ImageOverlay\n            attribution={`Map data &copy; ${MapName}`}\n            url=\"https://map.somniumspace.com/images/Somnium_Space_World_Map_HQ2.jpg\"\n            bounds={latLangBounds}\n          />\n          <ResizeMap />\n          <RenderAssets markerRefs={markerRefs} assets={assets} />\n        </MapContainer>\n      }\n    </div>\n  );\n};\n\nexport default SomniumSpaceMap;\n"]},"metadata":{},"sourceType":"module"}