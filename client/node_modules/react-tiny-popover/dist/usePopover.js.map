{"version":3,"file":"usePopover.js","sourceRoot":"","sources":["../src/usePopover.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\nimport { PositionPopover, UsePopoverProps, UsePopoverResult } from '.';\nimport { getNewPopoverRect, getNudgedPopoverRect } from './util';\nimport { useElementRef } from './useElementRef';\n\nexport const usePopover = ({\n  childRef,\n  positions,\n  containerClassName,\n  containerParent,\n  contentLocation,\n  align,\n  padding,\n  reposition,\n  boundaryInset,\n  onPositionPopover,\n}: UsePopoverProps): UsePopoverResult => {\n  const popoverRef = useElementRef(containerClassName, {\n    position: 'fixed',\n    overflow: 'visible',\n    top: '0px',\n    left: '0px',\n  });\n\n  const positionPopover = useCallback<PositionPopover>(\n    (\n      positionIndex: number = 0,\n      childRect: ClientRect | undefined = childRef?.current?.getBoundingClientRect(),\n      popoverRect: ClientRect = popoverRef.current.getBoundingClientRect(),\n      parentRect: ClientRect | undefined = containerParent?.getBoundingClientRect(),\n    ) => {\n      if (!childRect || !parentRect) {\n        return;\n      }\n      if (contentLocation) {\n        const { top: inputTop, left: inputLeft } =\n          typeof contentLocation === 'function'\n            ? contentLocation({\n                childRect,\n                popoverRect,\n                parentRect,\n                padding,\n                nudgedTop: 0,\n                nudgedLeft: 0,\n                boundaryInset,\n              })\n            : contentLocation;\n\n        const left = parentRect.left + inputLeft;\n        const top = parentRect.top + inputTop;\n\n        popoverRef.current.style.transform = `translate(${left}px, ${top}px)`;\n\n        onPositionPopover({\n          childRect,\n          popoverRect,\n          parentRect,\n          padding,\n          nudgedTop: 0,\n          nudgedLeft: 0,\n          boundaryInset,\n        });\n\n        return;\n      }\n\n      const isExhausted = positionIndex === positions.length;\n      const position = isExhausted ? positions[0] : positions[positionIndex];\n\n      const { rect, boundaryViolation } = getNewPopoverRect(\n        {\n          childRect,\n          popoverRect,\n          parentRect,\n          position,\n          align,\n          padding,\n          reposition,\n        },\n        boundaryInset,\n      );\n\n      if (boundaryViolation && reposition && !isExhausted) {\n        positionPopover(positionIndex + 1, childRect, popoverRect, parentRect);\n        return;\n      }\n\n      const { top, left, width, height } = rect;\n      const shouldNudge = reposition && !isExhausted;\n      const { left: nudgedLeft, top: nudgedTop } = getNudgedPopoverRect(\n        rect,\n        parentRect,\n        boundaryInset,\n      );\n\n      let finalTop = top;\n      let finalLeft = left;\n\n      if (shouldNudge) {\n        finalTop = nudgedTop;\n        finalLeft = nudgedLeft;\n      }\n\n      popoverRef.current.style.transform = `translate(${finalLeft}px, ${finalTop}px)`;\n\n      onPositionPopover({\n        childRect,\n        popoverRect: {\n          top: finalTop,\n          left: finalLeft,\n          width,\n          height,\n          right: finalLeft + width,\n          bottom: finalTop + height,\n        },\n        parentRect,\n        position,\n        align,\n        padding,\n        nudgedTop: nudgedTop - top,\n        nudgedLeft: nudgedLeft - left,\n        boundaryInset,\n      });\n    },\n    [\n      childRef,\n      popoverRef,\n      positions,\n      align,\n      padding,\n      reposition,\n      boundaryInset,\n      containerParent,\n      contentLocation,\n      onPositionPopover,\n    ],\n  );\n\n  return [positionPopover, popoverRef];\n};\n"]}